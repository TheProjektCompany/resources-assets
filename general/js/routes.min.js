(function () {
  var t = function () {
    var t = {},
      r = {
        absolute: !1,
        rootUrl: "",
        routes: [],
        prefix: "",
        route: function (t, r, e) {
          if (e = e || this.getByName(t)) return this.toRoute(e, r);
        },
        url: function (t, r) {
          var e = t + ((r = r || []).length ? "/" + r.join("/") : "");
          return this.getCorrectUrl(e);
        },
        toRoute: function (t, r) {
          var e = this.replaceNamedParameters(t.uri, r),
            n = this.getRouteQueryString(r);
          return this.getCorrectUrl(e + n);
        },
        replaceNamedParameters: function (t, r) {
          return t = (t = t.replace(/\{(.*?)\??\}/g, function (t, e) {
            if (r.hasOwnProperty(e)) {
              var n = r[e];
              return delete r[e], n;
            }
            return t;
          })).replace(/\/\{.*?\?\}/g, "");
        },
        getRouteQueryString: function (t) {
          var r = [];
          for (var e in t) t.hasOwnProperty(e) && r.push(e + "=" + t[e]);
          return r.length < 1 ? "" : "?" + r.join("&");
        },
        getByName: function (t) {
          for (var r in this.routes) if (this.routes.hasOwnProperty(r) && this.routes[r].name === t) return this.routes[r];
        },
        getByAction: function (t) {
          for (var r in this.routes) if (this.routes.hasOwnProperty(r) && this.routes[r].action === t) return this.routes[r];
        },
        getCorrectUrl: function (t) {
          var r = this.prefix + "/" + t.replace(/^\/?/, "");
          return this.absolute ? this.rootUrl.replace("//?$/", "") + r : r;
        }
      },
      e = function (t, r, e) {
        return r = r || t, '<a href="' + t + '" ' + (e = function (t) {
          if (!t) return "";
          var r = [];
          for (var e in t) t.hasOwnProperty(e) && r.push(e + '="' + t[e] + '"');
          return r.join(" ");
        }(e)) + ">" + r + "</a>";
      };
    return {
      action: function (t, e) {
        return e = e || {}, r.route(t, e, r.getByAction(t));
      },
      route: function (t, e) {
        return e = e || {}, r.route(t, e);
      },
      asset: function (e) {
        return this.url(e) + r.getRouteQueryString(t);
      },
      url: function (t, e) {
        return r.url(t, e);
      },
      link_to: function (t, r, n) {
        return t = this.url(t), e(t, r, n);
      },
      link_to_route: function (t, r, n, o) {
        var u = this.route(t, n);
        return e(u, r, o);
      },
      link_to_action: function (t, r, n, o) {
        var u = this.action(t, n);
        return e(u, r, o);
      },
      set_absolute: function (t) {
        r.absolute = t;
      },
      set_root_url: function (t) {
        r.rootUrl = t;
      },
      set_routes: function (t) {
        r.routes = t;
      },
      set_prefix: function (t) {
        r.prefix = t;
      },
      set_asset_params: function (r) {
        t = r;
      }
    };
  }.call(this);
  "function" == typeof define && define.amd ? define(function () {
    return t;
  }) : "object" == typeof module && module.exports ? module.exports = t : window.laroute = t;
}).call(this);