{"version":3,"sources":["routes.js"],"names":["laroute","asset_params","routes","absolute","rootUrl","prefix","route","name","parameters","this","getByName","toRoute","url","uri","length","join","getCorrectUrl","replaceNamedParameters","qs","getRouteQueryString","replace","match","key","hasOwnProperty","value","push","getByAction","action","getHtmlLink","title","attributes","attrs","getLinkAttributes","asset","path","link_to","link_to_route","link_to_action","set_absolute","set_root_url","set_routes","json","set_prefix","set_asset_params","params","call","define","amd","module","exports","window"],"mappings":"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","file":"routes.min.js","sourcesContent":["(function () {\n\n    var laroute = (function () {\n\n        var asset_params = {};\n\n        var routes = {\n\n            absolute: false,\n            rootUrl: '',\n            routes : [],\n            prefix: '',\n\n            route : function (name, parameters, route) {\n                route = route || this.getByName(name);\n\n                if ( ! route ) {\n                    return undefined;\n                }\n\n                return this.toRoute(route, parameters);\n            },\n\n            url: function (url, parameters) {\n                parameters = parameters || [];\n\n                var uri = url + (parameters.length ? '/' + parameters.join('/') : '');\n\n                return this.getCorrectUrl(uri);\n            },\n\n            toRoute : function (route, parameters) {\n                var uri = this.replaceNamedParameters(route.uri, parameters);\n                var qs  = this.getRouteQueryString(parameters);\n\n                return this.getCorrectUrl(uri + qs);\n            },\n\n            replaceNamedParameters : function (uri, parameters) {\n                uri = uri.replace(/\\{(.*?)\\??\\}/g, function(match, key) {\n                    if (parameters.hasOwnProperty(key)) {\n                        var value = parameters[key];\n                        delete parameters[key];\n                        return value;\n                    } else {\n                        return match;\n                    }\n                });\n\n                // Strip out any optional parameters that were not given\n                uri = uri.replace(/\\/\\{.*?\\?\\}/g, '');\n\n                return uri;\n            },\n\n            getRouteQueryString : function (parameters) {\n                var qs = [];\n                for (var key in parameters) {\n                    if (parameters.hasOwnProperty(key)) {\n                        qs.push(key + '=' + parameters[key]);\n                    }\n                }\n\n                if (qs.length < 1) {\n                    return '';\n                }\n\n                return '?' + qs.join('&');\n            },\n\n            getByName : function (name) {\n                for (var key in this.routes) {\n                    if (this.routes.hasOwnProperty(key) && this.routes[key].name === name) {\n                        return this.routes[key];\n                    }\n                }\n            },\n\n            getByAction : function(action) {\n                for (var key in this.routes) {\n                    if (this.routes.hasOwnProperty(key) && this.routes[key].action === action) {\n                        return this.routes[key];\n                    }\n                }\n            },\n\n            getCorrectUrl: function (uri) {\n                var url = this.prefix + '/' + uri.replace(/^\\/?/, '');\n\n                if(!this.absolute)\n                    return url;\n\n                return this.rootUrl.replace('/\\/?$/', '') + url;\n            }\n        };\n\n        var getLinkAttributes = function(attributes) {\n            if ( ! attributes) {\n                return '';\n            }\n\n            var attrs = [];\n            for (var key in attributes) {\n                if (attributes.hasOwnProperty(key)) {\n                    attrs.push(key + '=\"' + attributes[key] + '\"');\n                }\n            }\n\n            return attrs.join(' ');\n        };\n\n        var getHtmlLink = function (url, title, attributes) {\n            title      = title || url;\n            attributes = getLinkAttributes(attributes);\n\n            return '<a href=\"' + url + '\" ' + attributes + '>' + title + '</a>';\n        };\n\n        return {\n            // Generate a url for a given controller action.\n            // laroute.action('HomeController@getIndex', [params = {}])\n            action : function (name, parameters) {\n                parameters = parameters || {};\n\n                return routes.route(name, parameters, routes.getByAction(name));\n            },\n\n            // Generate a url for a given named route.\n            // laroute.route('routeName', [params = {}])\n            route : function (route, parameters) {\n                parameters = parameters || {};\n\n                return routes.route(route, parameters);\n            },\n\n            asset : function (path) {\n                return this.url(path) + routes.getRouteQueryString(asset_params);\n            },\n\n            // Generate a fully qualified URL to the given path.\n            // laroute.route('url', [params = {}])\n            url : function (route, parameters) {\n                return routes.url(route, parameters);\n            },\n\n            // Generate a html link to the given url.\n            // laroute.link_to('foo/bar', [title = url], [attributes = {}])\n            link_to : function (url, title, attributes) {\n                url = this.url(url);\n\n                return getHtmlLink(url, title, attributes);\n            },\n\n            // Generate a html link to the given route.\n            // laroute.link_to_route('route.name', [title=url], [parameters = {}], [attributes = {}])\n            link_to_route : function (route, title, parameters, attributes) {\n                var url = this.route(route, parameters);\n\n                return getHtmlLink(url, title, attributes);\n            },\n\n            // Generate a html link to the given controller action.\n            // laroute.link_to_action('HomeController@getIndex', [title=url], [parameters = {}], [attributes = {}])\n            link_to_action : function(action, title, parameters, attributes) {\n                var url = this.action(action, parameters);\n\n                return getHtmlLink(url, title, attributes);\n            },\n\n            // Whether we're using absolute URLs or not.\n            // laroute.set_absolute(true)\n            set_absolute : function (absolute) {\n                routes.absolute = absolute;\n            },\n\n            // Set a base url for all routes.\n            // laroute.set_root_url('http://localhost')\n            set_root_url : function (url) {\n                routes.rootUrl = url;\n            },\n\n            // JSON encoded route collection.\n            // laroute.set_routes([])\n            set_routes : function (json) {\n                routes.routes = json;\n            },\n\n            // Add a prefix to all URLs.\n            // $NAMEPSACE$.set_prefix('my-prefix')\n            set_prefix : function (prefix) {\n                routes.prefix = prefix;\n            },\n\n            set_asset_params : function (params) {\n                asset_params = params;\n            }\n\n        };\n\n    }).call(this);\n\n    /**\n     * Expose the class either via AMD, CommonJS or the global object\n     */\n    if (typeof define === 'function' && define.amd) {\n        define(function () {\n            return laroute;\n        });\n    }\n    else if (typeof module === 'object' && module.exports){\n        module.exports = laroute;\n    }\n    else {\n        window.laroute = laroute;\n    }\n\n}).call(this);\n\n"]}