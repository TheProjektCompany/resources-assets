/*!
 * lightgallery | 2.7.2 | September 20th 2023
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */
!function (t, e) {
  "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).lightGallery = e();
}(this, function () {
  "use strict";

  /*! *****************************************************************************
      Copyright (c) Microsoft Corporation.
  
      Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.
  
      THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */
  var t = function () {
    return t = Object.assign || function (t) {
      for (var e, i = 1, s = arguments.length; i < s; i++) for (var o in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
      return t;
    }, t.apply(this, arguments);
  };
  var e = "lgAfterAppendSlide",
    i = "lgInit",
    s = "lgHasVideo",
    o = "lgContainerResize",
    n = "lgUpdateSlides",
    r = "lgAfterAppendSubHtml",
    l = "lgBeforeOpen",
    a = "lgAfterOpen",
    d = "lgSlideItemLoad",
    g = "lgBeforeSlide",
    h = "lgAfterSlide",
    c = "lgPosterClick",
    u = "lgDragStart",
    m = "lgDragMove",
    p = "lgDragEnd",
    f = "lgBeforeNextSlide",
    y = "lgBeforePrevSlide",
    v = "lgBeforeClose",
    b = "lgAfterClose",
    I = {
      mode: "lg-slide",
      easing: "ease",
      speed: 400,
      licenseKey: "0000-0000-000-0000",
      height: "100%",
      width: "100%",
      addClass: "",
      startClass: "lg-start-zoom",
      backdropDuration: 300,
      container: "",
      startAnimationDuration: 400,
      zoomFromOrigin: !0,
      hideBarsDelay: 0,
      showBarsAfter: 1e4,
      slideDelay: 0,
      supportLegacyBrowser: !0,
      allowMediaOverlap: !1,
      videoMaxSize: "1280-720",
      loadYouTubePoster: !0,
      defaultCaptionHeight: 0,
      ariaLabelledby: "",
      ariaDescribedby: "",
      resetScrollPosition: !0,
      hideScrollbar: !1,
      closable: !0,
      swipeToClose: !0,
      closeOnTap: !0,
      showCloseIcon: !0,
      showMaximizeIcon: !1,
      loop: !0,
      escKey: !0,
      keyPress: !0,
      trapFocus: !0,
      controls: !0,
      slideEndAnimation: !0,
      hideControlOnEnd: !1,
      mousewheel: !1,
      getCaptionFromTitleOrAlt: !0,
      appendSubHtmlTo: ".lg-sub-html",
      subHtmlSelectorRelative: !1,
      preload: 2,
      numberOfSlideItemsInDom: 10,
      selector: "",
      selectWithin: "",
      nextHtml: "",
      prevHtml: "",
      index: 0,
      iframeWidth: "100%",
      iframeHeight: "100%",
      iframeMaxWidth: "100%",
      iframeMaxHeight: "100%",
      download: !0,
      counter: !0,
      appendCounterTo: ".lg-toolbar",
      swipeThreshold: 50,
      enableSwipe: !0,
      enableDrag: !0,
      dynamic: !1,
      dynamicEl: [],
      extraProps: [],
      exThumbImage: "",
      isMobile: void 0,
      mobileSettings: {
        controls: !1,
        showCloseIcon: !1,
        download: !1
      },
      plugins: [],
      strings: {
        closeGallery: "Close gallery",
        toggleMaximize: "Toggle maximize",
        previousSlide: "Previous slide",
        nextSlide: "Next slide",
        download: "Download",
        playVideo: "Play video",
        mediaLoadingFailed: "Oops... Failed to load content..."
      }
    };
  var w = function () {
    function t(t) {
      return this.cssVenderPrefixes = ["TransitionDuration", "TransitionTimingFunction", "Transform", "Transition"], this.selector = this._getSelector(t), this.firstElement = this._getFirstEl(), this;
    }
    return t.generateUUID = function () {
      return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (t) {
        var e = 16 * Math.random() | 0;
        return ("x" == t ? e : 3 & e | 8).toString(16);
      });
    }, t.prototype._getSelector = function (t, e) {
      return void 0 === e && (e = document), "string" != typeof t ? t : (e = e || document, "#" === t.substring(0, 1) ? e.querySelector(t) : e.querySelectorAll(t));
    }, t.prototype._each = function (t) {
      return this.selector ? (void 0 !== this.selector.length ? [].forEach.call(this.selector, t) : t(this.selector, 0), this) : this;
    }, t.prototype._setCssVendorPrefix = function (t, e, i) {
      var s = e.replace(/-([a-z])/gi, function (t, e) {
        return e.toUpperCase();
      });
      -1 !== this.cssVenderPrefixes.indexOf(s) ? (t.style[s.charAt(0).toLowerCase() + s.slice(1)] = i, t.style["webkit" + s] = i, t.style["moz" + s] = i, t.style["ms" + s] = i, t.style["o" + s] = i) : t.style[s] = i;
    }, t.prototype._getFirstEl = function () {
      return this.selector && void 0 !== this.selector.length ? this.selector[0] : this.selector;
    }, t.prototype.isEventMatched = function (t, e) {
      var i = e.split(".");
      return t.split(".").filter(function (t) {
        return t;
      }).every(function (t) {
        return -1 !== i.indexOf(t);
      });
    }, t.prototype.attr = function (t, e) {
      return void 0 === e ? this.firstElement ? this.firstElement.getAttribute(t) : "" : (this._each(function (i) {
        i.setAttribute(t, e);
      }), this);
    }, t.prototype.find = function (t) {
      return x(this._getSelector(t, this.selector));
    }, t.prototype.first = function () {
      return this.selector && void 0 !== this.selector.length ? x(this.selector[0]) : x(this.selector);
    }, t.prototype.eq = function (t) {
      return x(this.selector[t]);
    }, t.prototype.parent = function () {
      return x(this.selector.parentElement);
    }, t.prototype.get = function () {
      return this._getFirstEl();
    }, t.prototype.removeAttr = function (t) {
      var e = t.split(" ");
      return this._each(function (t) {
        e.forEach(function (e) {
          return t.removeAttribute(e);
        });
      }), this;
    }, t.prototype.wrap = function (t) {
      if (!this.firstElement) return this;
      var e = document.createElement("div");
      return e.className = t, this.firstElement.parentNode.insertBefore(e, this.firstElement), this.firstElement.parentNode.removeChild(this.firstElement), e.appendChild(this.firstElement), this;
    }, t.prototype.addClass = function (t) {
      return void 0 === t && (t = ""), this._each(function (e) {
        t.split(" ").forEach(function (t) {
          t && e.classList.add(t);
        });
      }), this;
    }, t.prototype.removeClass = function (t) {
      return this._each(function (e) {
        t.split(" ").forEach(function (t) {
          t && e.classList.remove(t);
        });
      }), this;
    }, t.prototype.hasClass = function (t) {
      return !!this.firstElement && this.firstElement.classList.contains(t);
    }, t.prototype.hasAttribute = function (t) {
      return !!this.firstElement && this.firstElement.hasAttribute(t);
    }, t.prototype.toggleClass = function (t) {
      return this.firstElement ? (this.hasClass(t) ? this.removeClass(t) : this.addClass(t), this) : this;
    }, t.prototype.css = function (t, e) {
      var i = this;
      return this._each(function (s) {
        i._setCssVendorPrefix(s, t, e);
      }), this;
    }, t.prototype.on = function (e, i) {
      var s = this;
      return this.selector ? (e.split(" ").forEach(function (e) {
        Array.isArray(t.eventListeners[e]) || (t.eventListeners[e] = []), t.eventListeners[e].push(i), s.selector.addEventListener(e.split(".")[0], i);
      }), this) : this;
    }, t.prototype.once = function (t, e) {
      var i = this;
      return this.on(t, function () {
        i.off(t), e(t);
      }), this;
    }, t.prototype.off = function (e) {
      var i = this;
      return this.selector ? (Object.keys(t.eventListeners).forEach(function (s) {
        i.isEventMatched(e, s) && (t.eventListeners[s].forEach(function (t) {
          i.selector.removeEventListener(s.split(".")[0], t);
        }), t.eventListeners[s] = []);
      }), this) : this;
    }, t.prototype.trigger = function (t, e) {
      if (!this.firstElement) return this;
      var i = new CustomEvent(t.split(".")[0], {
        detail: e || null
      });
      return this.firstElement.dispatchEvent(i), this;
    }, t.prototype.load = function (t) {
      var e = this;
      return fetch(t).then(function (t) {
        return t.text();
      }).then(function (t) {
        e.selector.innerHTML = t;
      }), this;
    }, t.prototype.html = function (t) {
      return void 0 === t ? this.firstElement ? this.firstElement.innerHTML : "" : (this._each(function (e) {
        e.innerHTML = t;
      }), this);
    }, t.prototype.append = function (t) {
      return this._each(function (e) {
        "string" == typeof t ? e.insertAdjacentHTML("beforeend", t) : e.appendChild(t);
      }), this;
    }, t.prototype.prepend = function (t) {
      return this._each(function (e) {
        e.insertAdjacentHTML("afterbegin", t);
      }), this;
    }, t.prototype.remove = function () {
      return this._each(function (t) {
        t.parentNode.removeChild(t);
      }), this;
    }, t.prototype.empty = function () {
      return this._each(function (t) {
        t.innerHTML = "";
      }), this;
    }, t.prototype.scrollTop = function (t) {
      return void 0 !== t ? (document.body.scrollTop = t, document.documentElement.scrollTop = t, this) : window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0;
    }, t.prototype.scrollLeft = function (t) {
      return void 0 !== t ? (document.body.scrollLeft = t, document.documentElement.scrollLeft = t, this) : window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0;
    }, t.prototype.offset = function () {
      if (!this.firstElement) return {
        left: 0,
        top: 0
      };
      var t = this.firstElement.getBoundingClientRect(),
        e = x("body").style().marginLeft;
      return {
        left: t.left - parseFloat(e) + this.scrollLeft(),
        top: t.top + this.scrollTop()
      };
    }, t.prototype.style = function () {
      return this.firstElement ? this.firstElement.currentStyle || window.getComputedStyle(this.firstElement) : {};
    }, t.prototype.width = function () {
      var t = this.style();
      return this.firstElement.clientWidth - parseFloat(t.paddingLeft) - parseFloat(t.paddingRight);
    }, t.prototype.height = function () {
      var t = this.style();
      return this.firstElement.clientHeight - parseFloat(t.paddingTop) - parseFloat(t.paddingBottom);
    }, t.eventListeners = {}, t;
  }();
  function x(t) {
    return function () {
      if ("function" == typeof window.CustomEvent) return !1;
      window.CustomEvent = function (t, e) {
        e = e || {
          bubbles: !1,
          cancelable: !1,
          detail: null
        };
        var i = document.createEvent("CustomEvent");
        return i.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), i;
      };
    }(), Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector), new w(t);
  }
  var C = ["src", "sources", "subHtml", "subHtmlUrl", "html", "video", "poster", "slideName", "responsive", "srcset", "sizes", "iframe", "downloadUrl", "download", "width", "facebookShareUrl", "tweetText", "iframeTitle", "twitterShareUrl", "pinterestShareUrl", "pinterestText", "fbHtml", "disqusIdentifier", "disqusUrl"];
  function S(t) {
    return "href" === t ? "src" : t = (t = (t = t.replace("data-", "")).charAt(0).toLowerCase() + t.slice(1)).replace(/-([a-z])/g, function (t) {
      return t[1].toUpperCase();
    });
  }
  var z = function (t, e, i, s) {
      void 0 === i && (i = 0);
      var o = x(t).attr("data-lg-size") || s;
      if (o) {
        var n = o.split(",");
        if (n[1]) for (var r = window.innerWidth, l = 0; l < n.length; l++) {
          var a = n[l];
          if (parseInt(a.split("-")[2], 10) > r) {
            o = a;
            break;
          }
          l === n.length - 1 && (o = a);
        }
        var d = o.split("-"),
          g = parseInt(d[0], 10),
          h = parseInt(d[1], 10),
          c = e.width(),
          u = e.height() - i,
          m = Math.min(c, g),
          p = Math.min(u, h),
          f = Math.min(m / g, p / h);
        return {
          width: g * f,
          height: h * f
        };
      }
    },
    T = function (t, e, i, s, o) {
      if (o) {
        var n = x(t).find("img").first();
        if (n.get()) {
          var r = e.get().getBoundingClientRect(),
            l = r.width,
            a = e.height() - (i + s),
            d = n.width(),
            g = n.height(),
            h = n.style(),
            c = (l - d) / 2 - n.offset().left + (parseFloat(h.paddingLeft) || 0) + (parseFloat(h.borderLeft) || 0) + x(window).scrollLeft() + r.left,
            u = (a - g) / 2 - n.offset().top + (parseFloat(h.paddingTop) || 0) + (parseFloat(h.borderTop) || 0) + x(window).scrollTop() + i;
          return "translate3d(" + (c *= -1) + "px, " + (u *= -1) + "px, 0) scale3d(" + d / o.width + ", " + g / o.height + ", 1)";
        }
      }
    },
    O = function (t, e, i, s, o, n) {
      return '<div class="lg-video-cont lg-has-iframe" style="width:' + t + "; max-width:" + i + "; height: " + e + "; max-height:" + s + '">\n                    <iframe class="lg-object" frameborder="0" ' + (n ? 'title="' + n + '"' : "") + ' src="' + o + '"  allowfullscreen="true"></iframe>\n                </div>';
    },
    E = function (t, e, i, s, o, n) {
      var r = "<img " + i + " " + (s ? 'srcset="' + s + '"' : "") + "  " + (o ? 'sizes="' + o + '"' : "") + ' class="lg-object lg-image" data-index="' + t + '" src="' + e + '" />',
        l = "";
      n && (l = ("string" == typeof n ? JSON.parse(n) : n).map(function (t) {
        var e = "";
        return Object.keys(t).forEach(function (i) {
          e += " " + i + '="' + t[i] + '"';
        }), "<source " + e + "></source>";
      }));
      return "" + l + r;
    },
    L = function (t) {
      for (var e = [], i = [], s = "", o = 0; o < t.length; o++) {
        var n = t[o].split(" ");
        "" === n[0] && n.splice(0, 1), i.push(n[0]), e.push(n[1]);
      }
      for (var r = window.innerWidth, l = 0; l < e.length; l++) if (parseInt(e[l], 10) > r) {
        s = i[l];
        break;
      }
      return s;
    },
    P = function (t) {
      return !!t && !!t.complete && 0 !== t.naturalWidth;
    },
    D = function (t, e, i, s, o) {
      return '<div class="lg-video-cont ' + (o && o.youtube ? "lg-has-youtube" : o && o.vimeo ? "lg-has-vimeo" : "lg-has-html5") + '" style="' + i + '">\n                <div class="lg-video-play-button">\n                <svg\n                    viewBox="0 0 20 20"\n                    preserveAspectRatio="xMidYMid"\n                    focusable="false"\n                    aria-labelledby="' + s + '"\n                    role="img"\n                    class="lg-video-play-icon"\n                >\n                    <title>' + s + '</title>\n                    <polygon class="lg-video-play-icon-inner" points="1,0 20,10 1,20"></polygon>\n                </svg>\n                <svg class="lg-video-play-icon-bg" viewBox="0 0 50 50" focusable="false">\n                    <circle cx="50%" cy="50%" r="20"></circle></svg>\n                <svg class="lg-video-play-icon-circle" viewBox="0 0 50 50" focusable="false">\n                    <circle cx="50%" cy="50%" r="20"></circle>\n                </svg>\n            </div>\n            ' + (e || "") + '\n            <img class="lg-object lg-video-poster" src="' + t + '" />\n        </div>';
    },
    A = function (t) {
      var e = t.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type="text"]:not([disabled]), input[type="radio"]:not([disabled]), input[type="checkbox"]:not([disabled]), select:not([disabled])');
      return [].filter.call(e, function (t) {
        var e = window.getComputedStyle(t);
        return "none" !== e.display && "hidden" !== e.visibility;
      });
    },
    G = function (t, e, i, s) {
      var o = [],
        n = function () {
          for (var t = 0, e = 0, i = arguments.length; e < i; e++) t += arguments[e].length;
          var s = Array(t),
            o = 0;
          for (e = 0; e < i; e++) for (var n = arguments[e], r = 0, l = n.length; r < l; r++, o++) s[o] = n[r];
          return s;
        }(C, e);
      return [].forEach.call(t, function (t) {
        for (var e = {}, r = 0; r < t.attributes.length; r++) {
          var l = t.attributes[r];
          if (l.specified) {
            var a = S(l.name),
              d = "";
            n.indexOf(a) > -1 && (d = a), d && (e[d] = l.value);
          }
        }
        var g = x(t),
          h = g.find("img").first().attr("alt"),
          c = g.attr("title"),
          u = s ? g.attr(s) : g.find("img").first().attr("src");
        e.thumb = u, i && !e.subHtml && (e.subHtml = c || h || ""), e.alt = h || c || "", o.push(e);
      }), o;
    },
    M = function () {
      return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    },
    k = function (t, e, i) {
      if (!t) return e ? {
        html5: !0
      } : void void 0;
      var s = t.match(/\/\/(?:www\.)?youtu(?:\.be|be\.com|be-nocookie\.com)\/(?:watch\?v=|embed\/)?([a-z0-9\-\_\%]+)([\&|?][\S]*)*/i),
        o = t.match(/\/\/(?:www\.)?(?:player\.)?vimeo.com\/(?:video\/)?([0-9a-z\-_]+)(.*)?/i),
        n = t.match(/https?:\/\/(.+)?(wistia\.com|wi\.st)\/(medias|embed)\/([0-9a-z\-_]+)(.*)/);
      return s ? {
        youtube: s
      } : o ? {
        vimeo: o
      } : n ? {
        wistia: n
      } : void 0;
    },
    B = 0,
    V = function () {
      function C(t, e) {
        if (this.lgOpened = !1, this.index = 0, this.plugins = [], this.lGalleryOn = !1, this.lgBusy = !1, this.currentItemsInDom = [], this.prevScrollTop = 0, this.bodyPaddingRight = 0, this.isDummyImageRemoved = !1, this.dragOrSwipeEnabled = !1, this.mediaContainerPosition = {
          top: 0,
          bottom: 0
        }, !t) return this;
        if (B++, this.lgId = B, this.el = t, this.LGel = x(t), this.generateSettings(e), this.buildModules(), this.settings.dynamic && void 0 !== this.settings.dynamicEl && !Array.isArray(this.settings.dynamicEl)) throw "When using dynamic mode, you must also define dynamicEl as an Array.";
        return this.galleryItems = this.getItems(), this.normalizeSettings(), this.init(), this.validateLicense(), this;
      }
      return C.prototype.generateSettings = function (e) {
        if (this.settings = t(t({}, I), e), this.settings.isMobile && "function" == typeof this.settings.isMobile ? this.settings.isMobile() : M()) {
          var i = t(t({}, this.settings.mobileSettings), this.settings.mobileSettings);
          this.settings = t(t({}, this.settings), i);
        }
      }, C.prototype.normalizeSettings = function () {
        this.settings.slideEndAnimation && (this.settings.hideControlOnEnd = !1), this.settings.closable || (this.settings.swipeToClose = !1), this.zoomFromOrigin = this.settings.zoomFromOrigin, this.settings.dynamic && (this.zoomFromOrigin = !1), this.settings.container || (this.settings.container = document.body), this.settings.preload = Math.min(this.settings.preload, this.galleryItems.length);
      }, C.prototype.init = function () {
        var t = this;
        this.addSlideVideoInfo(this.galleryItems), this.buildStructure(), this.LGel.trigger(i, {
          instance: this
        }), this.settings.keyPress && this.keyPress(), setTimeout(function () {
          t.enableDrag(), t.enableSwipe(), t.triggerPosterClick();
        }, 50), this.arrow(), this.settings.mousewheel && this.mousewheel(), this.settings.dynamic || this.openGalleryOnItemClick();
      }, C.prototype.openGalleryOnItemClick = function () {
        for (var t = this, e = function (e) {
            var s = i.items[e],
              o = x(s),
              n = w.generateUUID();
            o.attr("data-lg-id", n).on("click.lgcustom-item-" + n, function (i) {
              i.preventDefault();
              var o = t.settings.index || e;
              t.openGallery(o, s);
            });
          }, i = this, s = 0; s < this.items.length; s++) e(s);
      }, C.prototype.buildModules = function () {
        var t = this;
        this.settings.plugins.forEach(function (e) {
          t.plugins.push(new e(t, x));
        });
      }, C.prototype.validateLicense = function () {
        this.settings.licenseKey ? "0000-0000-000-0000" === this.settings.licenseKey && void 0 : void 0;
      }, C.prototype.getSlideItem = function (t) {
        return x(this.getSlideItemId(t));
      }, C.prototype.getSlideItemId = function (t) {
        return "#lg-item-" + this.lgId + "-" + t;
      }, C.prototype.getIdName = function (t) {
        return t + "-" + this.lgId;
      }, C.prototype.getElementById = function (t) {
        return x("#" + this.getIdName(t));
      }, C.prototype.manageSingleSlideClassName = function () {
        this.galleryItems.length < 2 ? this.outer.addClass("lg-single-item") : this.outer.removeClass("lg-single-item");
      }, C.prototype.buildStructure = function () {
        var t = this;
        if (!(this.$container && this.$container.get())) {
          var e = "",
            i = "";
          this.settings.controls && (e = '<button type="button" id="' + this.getIdName("lg-prev") + '" aria-label="' + this.settings.strings.previousSlide + '" class="lg-prev lg-icon"> ' + this.settings.prevHtml + ' </button>\n                <button type="button" id="' + this.getIdName("lg-next") + '" aria-label="' + this.settings.strings.nextSlide + '" class="lg-next lg-icon"> ' + this.settings.nextHtml + " </button>"), ".lg-item" !== this.settings.appendSubHtmlTo && (i = '<div class="lg-sub-html" role="status" aria-live="polite"></div>');
          var s = "";
          this.settings.allowMediaOverlap && (s += "lg-media-overlap ");
          var o = this.settings.ariaLabelledby ? 'aria-labelledby="' + this.settings.ariaLabelledby + '"' : "",
            n = this.settings.ariaDescribedby ? 'aria-describedby="' + this.settings.ariaDescribedby + '"' : "",
            r = "lg-container " + this.settings.addClass + " " + (document.body !== this.settings.container ? "lg-inline" : ""),
            l = this.settings.closable && this.settings.showCloseIcon ? '<button type="button" aria-label="' + this.settings.strings.closeGallery + '" id="' + this.getIdName("lg-close") + '" class="lg-close lg-icon"></button>' : "",
            a = this.settings.showMaximizeIcon ? '<button type="button" aria-label="' + this.settings.strings.toggleMaximize + '" id="' + this.getIdName("lg-maximize") + '" class="lg-maximize lg-icon"></button>' : "",
            d = '\n        <div class="' + r + '" id="' + this.getIdName("lg-container") + '" tabindex="-1" aria-modal="true" ' + o + " " + n + ' role="dialog"\n        >\n            <div id="' + this.getIdName("lg-backdrop") + '" class="lg-backdrop"></div>\n\n            <div id="' + this.getIdName("lg-outer") + '" class="lg-outer lg-use-css3 lg-css3 lg-hide-items ' + s + ' ">\n\n              <div id="' + this.getIdName("lg-content") + '" class="lg-content">\n                <div id="' + this.getIdName("lg-inner") + '" class="lg-inner">\n                </div>\n                ' + e + '\n              </div>\n                <div id="' + this.getIdName("lg-toolbar") + '" class="lg-toolbar lg-group">\n                    ' + a + "\n                    " + l + "\n                    </div>\n                    " + (".lg-outer" === this.settings.appendSubHtmlTo ? i : "") + '\n                <div id="' + this.getIdName("lg-components") + '" class="lg-components">\n                    ' + (".lg-sub-html" === this.settings.appendSubHtmlTo ? i : "") + "\n                </div>\n            </div>\n        </div>\n        ";
          x(this.settings.container).append(d), document.body !== this.settings.container && x(this.settings.container).css("position", "relative"), this.outer = this.getElementById("lg-outer"), this.$lgComponents = this.getElementById("lg-components"), this.$backdrop = this.getElementById("lg-backdrop"), this.$container = this.getElementById("lg-container"), this.$inner = this.getElementById("lg-inner"), this.$content = this.getElementById("lg-content"), this.$toolbar = this.getElementById("lg-toolbar"), this.$backdrop.css("transition-duration", this.settings.backdropDuration + "ms");
          var g = this.settings.mode + " ";
          this.manageSingleSlideClassName(), this.settings.enableDrag && (g += "lg-grab "), this.outer.addClass(g), this.$inner.css("transition-timing-function", this.settings.easing), this.$inner.css("transition-duration", this.settings.speed + "ms"), this.settings.download && this.$toolbar.append('<a id="' + this.getIdName("lg-download") + '" target="_blank" rel="noopener" aria-label="' + this.settings.strings.download + '" download class="lg-download lg-icon"></a>'), this.counter(), x(window).on("resize.lg.global" + this.lgId + " orientationchange.lg.global" + this.lgId, function () {
            t.refreshOnResize();
          }), this.hideBars(), this.manageCloseGallery(), this.toggleMaximize(), this.initModules();
        }
      }, C.prototype.refreshOnResize = function () {
        if (this.lgOpened) {
          var t = this.galleryItems[this.index].__slideVideoInfo;
          this.mediaContainerPosition = this.getMediaContainerPosition();
          var e = this.mediaContainerPosition,
            i = e.top,
            s = e.bottom;
          if (this.currentImageSize = z(this.items[this.index], this.outer, i + s, t && this.settings.videoMaxSize), t && this.resizeVideoSlide(this.index, this.currentImageSize), this.zoomFromOrigin && !this.isDummyImageRemoved) {
            var n = this.getDummyImgStyles(this.currentImageSize);
            this.outer.find(".lg-current .lg-dummy-img").first().attr("style", n);
          }
          this.LGel.trigger(o);
        }
      }, C.prototype.resizeVideoSlide = function (t, e) {
        var i = this.getVideoContStyle(e);
        this.getSlideItem(t).find(".lg-video-cont").attr("style", i);
      }, C.prototype.updateSlides = function (t, e) {
        if (this.index > t.length - 1 && (this.index = t.length - 1), 1 === t.length && (this.index = 0), t.length) {
          var i = this.galleryItems[e].src;
          this.galleryItems = t, this.updateControls(), this.$inner.empty(), this.currentItemsInDom = [];
          var s = 0;
          this.galleryItems.some(function (t, e) {
            return t.src === i && (s = e, !0);
          }), this.currentItemsInDom = this.organizeSlideItems(s, -1), this.loadContent(s, !0), this.getSlideItem(s).addClass("lg-current"), this.index = s, this.updateCurrentCounter(s), this.LGel.trigger(n);
        } else this.closeGallery();
      }, C.prototype.getItems = function () {
        if (this.items = [], this.settings.dynamic) return this.settings.dynamicEl || [];
        if ("this" === this.settings.selector) this.items.push(this.el);else if (this.settings.selector) {
          if ("string" == typeof this.settings.selector) {
            if (this.settings.selectWithin) {
              var t = x(this.settings.selectWithin);
              this.items = t.find(this.settings.selector).get();
            } else this.items = this.el.querySelectorAll(this.settings.selector);
          } else this.items = this.settings.selector;
        } else this.items = this.el.children;
        return G(this.items, this.settings.extraProps, this.settings.getCaptionFromTitleOrAlt, this.settings.exThumbImage);
      }, C.prototype.shouldHideScrollbar = function () {
        return this.settings.hideScrollbar && document.body === this.settings.container;
      }, C.prototype.hideScrollbar = function () {
        if (this.shouldHideScrollbar()) {
          this.bodyPaddingRight = parseFloat(x("body").style().paddingRight);
          var t = document.documentElement.getBoundingClientRect(),
            e = window.innerWidth - t.width;
          x(document.body).css("padding-right", e + this.bodyPaddingRight + "px"), x(document.body).addClass("lg-overlay-open");
        }
      }, C.prototype.resetScrollBar = function () {
        this.shouldHideScrollbar() && (x(document.body).css("padding-right", this.bodyPaddingRight + "px"), x(document.body).removeClass("lg-overlay-open"));
      }, C.prototype.openGallery = function (t, e) {
        var i = this;
        if (void 0 === t && (t = this.settings.index), !this.lgOpened) {
          this.lgOpened = !0, this.outer.removeClass("lg-hide-items"), this.hideScrollbar(), this.$container.addClass("lg-show");
          var s = this.getItemsToBeInsertedToDom(t, t);
          this.currentItemsInDom = s;
          var o = "";
          s.forEach(function (t) {
            o = o + '<div id="' + t + '" class="lg-item"></div>';
          }), this.$inner.append(o), this.addHtml(t);
          var n = "";
          this.mediaContainerPosition = this.getMediaContainerPosition();
          var r = this.mediaContainerPosition,
            d = r.top,
            g = r.bottom;
          this.settings.allowMediaOverlap || this.setMediaContainerPosition(d, g);
          var h = this.galleryItems[t].__slideVideoInfo;
          this.zoomFromOrigin && e && (this.currentImageSize = z(e, this.outer, d + g, h && this.settings.videoMaxSize), n = T(e, this.outer, d, g, this.currentImageSize)), this.zoomFromOrigin && n || (this.outer.addClass(this.settings.startClass), this.getSlideItem(t).removeClass("lg-complete"));
          var c = this.settings.zoomFromOrigin ? 100 : this.settings.backdropDuration;
          setTimeout(function () {
            i.outer.addClass("lg-components-open");
          }, c), this.index = t, this.LGel.trigger(l), this.getSlideItem(t).addClass("lg-current"), this.lGalleryOn = !1, this.prevScrollTop = x(window).scrollTop(), setTimeout(function () {
            if (i.zoomFromOrigin && n) {
              var e = i.getSlideItem(t);
              e.css("transform", n), setTimeout(function () {
                e.addClass("lg-start-progress lg-start-end-progress").css("transition-duration", i.settings.startAnimationDuration + "ms"), i.outer.addClass("lg-zoom-from-image");
              }), setTimeout(function () {
                e.css("transform", "translate3d(0, 0, 0)");
              }, 100);
            }
            setTimeout(function () {
              i.$backdrop.addClass("in"), i.$container.addClass("lg-show-in");
            }, 10), setTimeout(function () {
              i.settings.trapFocus && document.body === i.settings.container && i.trapFocus();
            }, i.settings.backdropDuration + 50), i.zoomFromOrigin && n || setTimeout(function () {
              i.outer.addClass("lg-visible");
            }, i.settings.backdropDuration), i.slide(t, !1, !1, !1), i.LGel.trigger(a);
          }), document.body === this.settings.container && x("html").addClass("lg-on");
        }
      }, C.prototype.getMediaContainerPosition = function () {
        if (this.settings.allowMediaOverlap) return {
          top: 0,
          bottom: 0
        };
        var t = this.$toolbar.get().clientHeight || 0,
          e = this.outer.find(".lg-components .lg-sub-html").get(),
          i = this.settings.defaultCaptionHeight || e && e.clientHeight || 0,
          s = this.outer.find(".lg-thumb-outer").get();
        return {
          top: t,
          bottom: (s ? s.clientHeight : 0) + i
        };
      }, C.prototype.setMediaContainerPosition = function (t, e) {
        void 0 === t && (t = 0), void 0 === e && (e = 0), this.$content.css("top", t + "px").css("bottom", e + "px");
      }, C.prototype.hideBars = function () {
        var t = this;
        setTimeout(function () {
          t.outer.removeClass("lg-hide-items"), t.settings.hideBarsDelay > 0 && (t.outer.on("mousemove.lg click.lg touchstart.lg", function () {
            t.outer.removeClass("lg-hide-items"), clearTimeout(t.hideBarTimeout), t.hideBarTimeout = setTimeout(function () {
              t.outer.addClass("lg-hide-items");
            }, t.settings.hideBarsDelay);
          }), t.outer.trigger("mousemove.lg"));
        }, this.settings.showBarsAfter);
      }, C.prototype.initPictureFill = function (t) {
        if (this.settings.supportLegacyBrowser) try {
          picturefill({
            elements: [t.get()]
          });
        } catch (t) {
          void 0;
        }
      }, C.prototype.counter = function () {
        if (this.settings.counter) {
          var t = '<div class="lg-counter" role="status" aria-live="polite">\n                <span id="' + this.getIdName("lg-counter-current") + '" class="lg-counter-current">' + (this.index + 1) + ' </span> /\n                <span id="' + this.getIdName("lg-counter-all") + '" class="lg-counter-all">' + this.galleryItems.length + " </span></div>";
          this.outer.find(this.settings.appendCounterTo).append(t);
        }
      }, C.prototype.addHtml = function (t) {
        var e, i;
        if (this.galleryItems[t].subHtmlUrl ? i = this.galleryItems[t].subHtmlUrl : e = this.galleryItems[t].subHtml, !i) if (e) {
          var s = e.substring(0, 1);
          "." !== s && "#" !== s || (e = this.settings.subHtmlSelectorRelative && !this.settings.dynamic ? x(this.items).eq(t).find(e).first().html() : x(e).first().html());
        } else e = "";
        if (".lg-item" !== this.settings.appendSubHtmlTo) i ? this.outer.find(".lg-sub-html").load(i) : this.outer.find(".lg-sub-html").html(e);else {
          var o = x(this.getSlideItemId(t));
          i ? o.load(i) : o.append('<div class="lg-sub-html">' + e + "</div>");
        }
        null != e && ("" === e ? this.outer.find(this.settings.appendSubHtmlTo).addClass("lg-empty-html") : this.outer.find(this.settings.appendSubHtmlTo).removeClass("lg-empty-html")), this.LGel.trigger(r, {
          index: t
        });
      }, C.prototype.preload = function (t) {
        for (var e = 1; e <= this.settings.preload && !(e >= this.galleryItems.length - t); e++) this.loadContent(t + e, !1);
        for (var i = 1; i <= this.settings.preload && !(t - i < 0); i++) this.loadContent(t - i, !1);
      }, C.prototype.getDummyImgStyles = function (t) {
        return t ? "width:" + t.width + "px;\n                margin-left: -" + t.width / 2 + "px;\n                margin-top: -" + t.height / 2 + "px;\n                height:" + t.height + "px" : "";
      }, C.prototype.getVideoContStyle = function (t) {
        return t ? "width:" + t.width + "px;\n                height:" + t.height + "px" : "";
      }, C.prototype.getDummyImageContent = function (t, e, i) {
        var s;
        if (this.settings.dynamic || (s = x(this.items).eq(e)), s) {
          var o = void 0;
          if (!(o = this.settings.exThumbImage ? s.attr(this.settings.exThumbImage) : s.find("img").first().attr("src"))) return "";
          var n = "<img " + i + ' style="' + this.getDummyImgStyles(this.currentImageSize) + '" class="lg-dummy-img" src="' + o + '" />';
          return t.addClass("lg-first-slide"), this.outer.addClass("lg-first-slide-loading"), n;
        }
        return "";
      }, C.prototype.setImgMarkup = function (t, e, i) {
        var s = this.galleryItems[i],
          o = s.alt,
          n = s.srcset,
          r = s.sizes,
          l = s.sources,
          a = o ? 'alt="' + o + '"' : "",
          d = '<picture class="lg-img-wrap"> ' + (this.isFirstSlideWithZoomAnimation() ? this.getDummyImageContent(e, i, a) : E(i, t, a, n, r, l)) + "</picture>";
        e.prepend(d);
      }, C.prototype.onSlideObjectLoad = function (t, e, i, s) {
        var o = t.find(".lg-object").first();
        P(o.get()) || e ? i() : (o.on("load.lg error.lg", function () {
          i && i();
        }), o.on("error.lg", function () {
          s && s();
        }));
      }, C.prototype.onLgObjectLoad = function (t, e, i, s, o, n) {
        var r = this;
        this.onSlideObjectLoad(t, n, function () {
          r.triggerSlideItemLoad(t, e, i, s, o);
        }, function () {
          t.addClass("lg-complete lg-complete_"), t.html('<span class="lg-error-msg">' + r.settings.strings.mediaLoadingFailed + "</span>");
        });
      }, C.prototype.triggerSlideItemLoad = function (t, e, i, s, o) {
        var n = this,
          r = this.galleryItems[e],
          l = o && "video" === this.getSlideType(r) && !r.poster ? s : 0;
        setTimeout(function () {
          t.addClass("lg-complete lg-complete_"), n.LGel.trigger(d, {
            index: e,
            delay: i || 0,
            isFirstSlide: o
          });
        }, l);
      }, C.prototype.isFirstSlideWithZoomAnimation = function () {
        return !(this.lGalleryOn || !this.zoomFromOrigin || !this.currentImageSize);
      }, C.prototype.addSlideVideoInfo = function (t) {
        var e = this;
        t.forEach(function (t, i) {
          t.__slideVideoInfo = k(t.src, !!t.video, i), t.__slideVideoInfo && e.settings.loadYouTubePoster && !t.poster && t.__slideVideoInfo.youtube && (t.poster = "//img.youtube.com/vi/" + t.__slideVideoInfo.youtube[1] + "/maxresdefault.jpg");
        });
      }, C.prototype.loadContent = function (t, i) {
        var o = this,
          n = this.galleryItems[t],
          r = x(this.getSlideItemId(t)),
          l = n.poster,
          a = n.srcset,
          d = n.sizes,
          g = n.sources,
          h = n.src,
          c = n.video,
          u = c && "string" == typeof c ? JSON.parse(c) : c;
        if (n.responsive) {
          var m = n.responsive.split(",");
          h = L(m) || h;
        }
        var p = n.__slideVideoInfo,
          f = "",
          y = !!n.iframe,
          v = !this.lGalleryOn,
          b = 0;
        if (v && (b = this.zoomFromOrigin && this.currentImageSize ? this.settings.startAnimationDuration + 10 : this.settings.backdropDuration + 10), !r.hasClass("lg-loaded")) {
          if (p) {
            var I = this.mediaContainerPosition,
              w = I.top,
              C = I.bottom,
              S = z(this.items[t], this.outer, w + C, p && this.settings.videoMaxSize);
            f = this.getVideoContStyle(S);
          }
          if (y) {
            var T = O(this.settings.iframeWidth, this.settings.iframeHeight, this.settings.iframeMaxWidth, this.settings.iframeMaxHeight, h, n.iframeTitle);
            r.prepend(T);
          } else if (l) {
            var P = "";
            v && this.zoomFromOrigin && this.currentImageSize && (P = this.getDummyImageContent(r, t, ""));
            T = D(l, P || "", f, this.settings.strings.playVideo, p);
            r.prepend(T);
          } else if (p) {
            T = '<div class="lg-video-cont " style="' + f + '"></div>';
            r.prepend(T);
          } else if (this.setImgMarkup(h, r, t), a || g) {
            var A = r.find(".lg-object");
            this.initPictureFill(A);
          }
          (l || p) && this.LGel.trigger(s, {
            index: t,
            src: h,
            html5Video: u,
            hasPoster: !!l
          }), this.LGel.trigger(e, {
            index: t
          }), this.lGalleryOn && ".lg-item" === this.settings.appendSubHtmlTo && this.addHtml(t);
        }
        var G = 0;
        b && !x(document.body).hasClass("lg-from-hash") && (G = b), this.isFirstSlideWithZoomAnimation() && (setTimeout(function () {
          r.removeClass("lg-start-end-progress lg-start-progress").removeAttr("style");
        }, this.settings.startAnimationDuration + 100), r.hasClass("lg-loaded") || setTimeout(function () {
          if ("image" === o.getSlideType(n)) {
            var e = n.alt,
              i = e ? 'alt="' + e + '"' : "";
            if (r.find(".lg-img-wrap").append(E(t, h, i, a, d, n.sources)), a || g) {
              var s = r.find(".lg-object");
              o.initPictureFill(s);
            }
          }
          ("image" === o.getSlideType(n) || "video" === o.getSlideType(n) && l) && (o.onLgObjectLoad(r, t, b, G, !0, !1), o.onSlideObjectLoad(r, !(!p || !p.html5 || l), function () {
            o.loadContentOnFirstSlideLoad(t, r, G);
          }, function () {
            o.loadContentOnFirstSlideLoad(t, r, G);
          }));
        }, this.settings.startAnimationDuration + 100)), r.addClass("lg-loaded"), this.isFirstSlideWithZoomAnimation() && ("video" !== this.getSlideType(n) || l) || this.onLgObjectLoad(r, t, b, G, v, !(!p || !p.html5 || l)), this.zoomFromOrigin && this.currentImageSize || !r.hasClass("lg-complete_") || this.lGalleryOn || setTimeout(function () {
          r.addClass("lg-complete");
        }, this.settings.backdropDuration), this.lGalleryOn = !0, !0 === i && (r.hasClass("lg-complete_") ? this.preload(t) : r.find(".lg-object").first().on("load.lg error.lg", function () {
          o.preload(t);
        }));
      }, C.prototype.loadContentOnFirstSlideLoad = function (t, e, i) {
        var s = this;
        setTimeout(function () {
          e.find(".lg-dummy-img").remove(), e.removeClass("lg-first-slide"), s.outer.removeClass("lg-first-slide-loading"), s.isDummyImageRemoved = !0, s.preload(t);
        }, i + 300);
      }, C.prototype.getItemsToBeInsertedToDom = function (t, e, i) {
        var s = this;
        void 0 === i && (i = 0);
        var o = [],
          n = Math.max(i, 3);
        n = Math.min(n, this.galleryItems.length);
        var r = "lg-item-" + this.lgId + "-" + e;
        if (this.galleryItems.length <= 3) return this.galleryItems.forEach(function (t, e) {
          o.push("lg-item-" + s.lgId + "-" + e);
        }), o;
        if (t < (this.galleryItems.length - 1) / 2) {
          for (var l = t; l > t - n / 2 && l >= 0; l--) o.push("lg-item-" + this.lgId + "-" + l);
          var a = o.length;
          for (l = 0; l < n - a; l++) o.push("lg-item-" + this.lgId + "-" + (t + l + 1));
        } else {
          for (l = t; l <= this.galleryItems.length - 1 && l < t + n / 2; l++) o.push("lg-item-" + this.lgId + "-" + l);
          for (a = o.length, l = 0; l < n - a; l++) o.push("lg-item-" + this.lgId + "-" + (t - l - 1));
        }
        return this.settings.loop && (t === this.galleryItems.length - 1 ? o.push("lg-item-" + this.lgId + "-0") : 0 === t && o.push("lg-item-" + this.lgId + "-" + (this.galleryItems.length - 1))), -1 === o.indexOf(r) && o.push("lg-item-" + this.lgId + "-" + e), o;
      }, C.prototype.organizeSlideItems = function (t, e) {
        var i = this,
          s = this.getItemsToBeInsertedToDom(t, e, this.settings.numberOfSlideItemsInDom);
        return s.forEach(function (t) {
          -1 === i.currentItemsInDom.indexOf(t) && i.$inner.append('<div id="' + t + '" class="lg-item"></div>');
        }), this.currentItemsInDom.forEach(function (t) {
          -1 === s.indexOf(t) && x("#" + t).remove();
        }), s;
      }, C.prototype.getPreviousSlideIndex = function () {
        var t = 0;
        try {
          var e = this.outer.find(".lg-current").first().attr("id");
          t = parseInt(e.split("-")[3]) || 0;
        } catch (e) {
          t = 0;
        }
        return t;
      }, C.prototype.setDownloadValue = function (t) {
        if (this.settings.download) {
          var e = this.galleryItems[t];
          if (!1 === e.downloadUrl || "false" === e.downloadUrl) this.outer.addClass("lg-hide-download");else {
            var i = this.getElementById("lg-download");
            this.outer.removeClass("lg-hide-download"), i.attr("href", e.downloadUrl || e.src), e.download && i.attr("download", e.download);
          }
        }
      }, C.prototype.makeSlideAnimation = function (t, e, i) {
        var s = this;
        this.lGalleryOn && i.addClass("lg-slide-progress"), setTimeout(function () {
          s.outer.addClass("lg-no-trans"), s.outer.find(".lg-item").removeClass("lg-prev-slide lg-next-slide"), "prev" === t ? (e.addClass("lg-prev-slide"), i.addClass("lg-next-slide")) : (e.addClass("lg-next-slide"), i.addClass("lg-prev-slide")), setTimeout(function () {
            s.outer.find(".lg-item").removeClass("lg-current"), e.addClass("lg-current"), s.outer.removeClass("lg-no-trans");
          }, 50);
        }, this.lGalleryOn ? this.settings.slideDelay : 0);
      }, C.prototype.slide = function (t, e, i, s) {
        var o = this,
          n = this.getPreviousSlideIndex();
        if (this.currentItemsInDom = this.organizeSlideItems(t, n), !this.lGalleryOn || n !== t) {
          var r = this.galleryItems.length;
          if (!this.lgBusy) {
            this.settings.counter && this.updateCurrentCounter(t);
            var l = this.getSlideItem(t),
              a = this.getSlideItem(n),
              d = this.galleryItems[t],
              c = d.__slideVideoInfo;
            if (this.outer.attr("data-lg-slide-type", this.getSlideType(d)), this.setDownloadValue(t), c) {
              var u = this.mediaContainerPosition,
                m = u.top,
                p = u.bottom,
                f = z(this.items[t], this.outer, m + p, c && this.settings.videoMaxSize);
              this.resizeVideoSlide(t, f);
            }
            if (this.LGel.trigger(g, {
              prevIndex: n,
              index: t,
              fromTouch: !!e,
              fromThumb: !!i
            }), this.lgBusy = !0, clearTimeout(this.hideBarTimeout), this.arrowDisable(t), s || (t < n ? s = "prev" : t > n && (s = "next")), e) {
              this.outer.find(".lg-item").removeClass("lg-prev-slide lg-current lg-next-slide");
              var y = void 0,
                v = void 0;
              r > 2 ? (y = t - 1, v = t + 1, (0 === t && n === r - 1 || t === r - 1 && 0 === n) && (v = 0, y = r - 1)) : (y = 0, v = 1), "prev" === s ? this.getSlideItem(v).addClass("lg-next-slide") : this.getSlideItem(y).addClass("lg-prev-slide"), l.addClass("lg-current");
            } else this.makeSlideAnimation(s, l, a);
            this.lGalleryOn ? setTimeout(function () {
              o.loadContent(t, !0), ".lg-item" !== o.settings.appendSubHtmlTo && o.addHtml(t);
            }, this.settings.speed + 50 + (e ? 0 : this.settings.slideDelay)) : this.loadContent(t, !0), setTimeout(function () {
              o.lgBusy = !1, a.removeClass("lg-slide-progress"), o.LGel.trigger(h, {
                prevIndex: n,
                index: t,
                fromTouch: e,
                fromThumb: i
              });
            }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (e ? 0 : this.settings.slideDelay));
          }
          this.index = t;
        }
      }, C.prototype.updateCurrentCounter = function (t) {
        this.getElementById("lg-counter-current").html(t + 1 + "");
      }, C.prototype.updateCounterTotal = function () {
        this.getElementById("lg-counter-all").html(this.galleryItems.length + "");
      }, C.prototype.getSlideType = function (t) {
        return t.__slideVideoInfo ? "video" : t.iframe ? "iframe" : "image";
      }, C.prototype.touchMove = function (t, e, i) {
        var s = e.pageX - t.pageX,
          o = e.pageY - t.pageY,
          n = !1;
        if (this.swipeDirection ? n = !0 : Math.abs(s) > 15 ? (this.swipeDirection = "horizontal", n = !0) : Math.abs(o) > 15 && (this.swipeDirection = "vertical", n = !0), n) {
          var r = this.getSlideItem(this.index);
          if ("horizontal" === this.swipeDirection) {
            null == i || i.preventDefault(), this.outer.addClass("lg-dragging"), this.setTranslate(r, s, 0);
            var l = r.get().offsetWidth,
              a = 15 * l / 100 - Math.abs(10 * s / 100);
            this.setTranslate(this.outer.find(".lg-prev-slide").first(), -l + s - a, 0), this.setTranslate(this.outer.find(".lg-next-slide").first(), l + s + a, 0);
          } else if ("vertical" === this.swipeDirection && this.settings.swipeToClose) {
            null == i || i.preventDefault(), this.$container.addClass("lg-dragging-vertical");
            var d = 1 - Math.abs(o) / window.innerHeight;
            this.$backdrop.css("opacity", d);
            var g = 1 - Math.abs(o) / (2 * window.innerWidth);
            this.setTranslate(r, 0, o, g, g), Math.abs(o) > 100 && this.outer.addClass("lg-hide-items").removeClass("lg-components-open");
          }
        }
      }, C.prototype.touchEnd = function (t, e, i) {
        var s,
          o = this;
        "lg-slide" !== this.settings.mode && this.outer.addClass("lg-slide"), setTimeout(function () {
          o.$container.removeClass("lg-dragging-vertical"), o.outer.removeClass("lg-dragging lg-hide-items").addClass("lg-components-open");
          var n = !0;
          if ("horizontal" === o.swipeDirection) {
            s = t.pageX - e.pageX;
            var r = Math.abs(t.pageX - e.pageX);
            s < 0 && r > o.settings.swipeThreshold ? (o.goToNextSlide(!0), n = !1) : s > 0 && r > o.settings.swipeThreshold && (o.goToPrevSlide(!0), n = !1);
          } else if ("vertical" === o.swipeDirection) {
            if (s = Math.abs(t.pageY - e.pageY), o.settings.closable && o.settings.swipeToClose && s > 100) return void o.closeGallery();
            o.$backdrop.css("opacity", 1);
          }
          if (o.outer.find(".lg-item").removeAttr("style"), n && Math.abs(t.pageX - e.pageX) < 5) {
            var l = x(i.target);
            o.isPosterElement(l) && o.LGel.trigger(c);
          }
          o.swipeDirection = void 0;
        }), setTimeout(function () {
          o.outer.hasClass("lg-dragging") || "lg-slide" === o.settings.mode || o.outer.removeClass("lg-slide");
        }, this.settings.speed + 100);
      }, C.prototype.enableSwipe = function () {
        var t = this,
          e = {},
          i = {},
          s = !1,
          o = !1;
        this.settings.enableSwipe && (this.$inner.on("touchstart.lg", function (i) {
          t.dragOrSwipeEnabled = !0;
          var s = t.getSlideItem(t.index);
          !x(i.target).hasClass("lg-item") && !s.get().contains(i.target) || t.outer.hasClass("lg-zoomed") || t.lgBusy || 1 !== i.touches.length || (o = !0, t.touchAction = "swipe", t.manageSwipeClass(), e = {
            pageX: i.touches[0].pageX,
            pageY: i.touches[0].pageY
          });
        }), this.$inner.on("touchmove.lg", function (n) {
          o && "swipe" === t.touchAction && 1 === n.touches.length && (i = {
            pageX: n.touches[0].pageX,
            pageY: n.touches[0].pageY
          }, t.touchMove(e, i, n), s = !0);
        }), this.$inner.on("touchend.lg", function (n) {
          if ("swipe" === t.touchAction) {
            if (s) s = !1, t.touchEnd(i, e, n);else if (o) {
              var r = x(n.target);
              t.isPosterElement(r) && t.LGel.trigger(c);
            }
            t.touchAction = void 0, o = !1;
          }
        }));
      }, C.prototype.enableDrag = function () {
        var t = this,
          e = {},
          i = {},
          s = !1,
          o = !1;
        this.settings.enableDrag && (this.outer.on("mousedown.lg", function (i) {
          t.dragOrSwipeEnabled = !0;
          var o = t.getSlideItem(t.index);
          (x(i.target).hasClass("lg-item") || o.get().contains(i.target)) && (t.outer.hasClass("lg-zoomed") || t.lgBusy || (i.preventDefault(), t.lgBusy || (t.manageSwipeClass(), e = {
            pageX: i.pageX,
            pageY: i.pageY
          }, s = !0, t.outer.get().scrollLeft += 1, t.outer.get().scrollLeft -= 1, t.outer.removeClass("lg-grab").addClass("lg-grabbing"), t.LGel.trigger(u))));
        }), x(window).on("mousemove.lg.global" + this.lgId, function (n) {
          s && t.lgOpened && (o = !0, i = {
            pageX: n.pageX,
            pageY: n.pageY
          }, t.touchMove(e, i), t.LGel.trigger(m));
        }), x(window).on("mouseup.lg.global" + this.lgId, function (n) {
          if (t.lgOpened) {
            var r = x(n.target);
            o ? (o = !1, t.touchEnd(i, e, n), t.LGel.trigger(p)) : t.isPosterElement(r) && t.LGel.trigger(c), s && (s = !1, t.outer.removeClass("lg-grabbing").addClass("lg-grab"));
          }
        }));
      }, C.prototype.triggerPosterClick = function () {
        var t = this;
        this.$inner.on("click.lg", function (e) {
          !t.dragOrSwipeEnabled && t.isPosterElement(x(e.target)) && t.LGel.trigger(c);
        });
      }, C.prototype.manageSwipeClass = function () {
        var t = this.index + 1,
          e = this.index - 1;
        this.settings.loop && this.galleryItems.length > 2 && (0 === this.index ? e = this.galleryItems.length - 1 : this.index === this.galleryItems.length - 1 && (t = 0)), this.outer.find(".lg-item").removeClass("lg-next-slide lg-prev-slide"), e > -1 && this.getSlideItem(e).addClass("lg-prev-slide"), this.getSlideItem(t).addClass("lg-next-slide");
      }, C.prototype.goToNextSlide = function (t) {
        var e = this,
          i = this.settings.loop;
        t && this.galleryItems.length < 3 && (i = !1), this.lgBusy || (this.index + 1 < this.galleryItems.length ? (this.index++, this.LGel.trigger(f, {
          index: this.index
        }), this.slide(this.index, !!t, !1, "next")) : i ? (this.index = 0, this.LGel.trigger(f, {
          index: this.index
        }), this.slide(this.index, !!t, !1, "next")) : this.settings.slideEndAnimation && !t && (this.outer.addClass("lg-right-end"), setTimeout(function () {
          e.outer.removeClass("lg-right-end");
        }, 400)));
      }, C.prototype.goToPrevSlide = function (t) {
        var e = this,
          i = this.settings.loop;
        t && this.galleryItems.length < 3 && (i = !1), this.lgBusy || (this.index > 0 ? (this.index--, this.LGel.trigger(y, {
          index: this.index,
          fromTouch: t
        }), this.slide(this.index, !!t, !1, "prev")) : i ? (this.index = this.galleryItems.length - 1, this.LGel.trigger(y, {
          index: this.index,
          fromTouch: t
        }), this.slide(this.index, !!t, !1, "prev")) : this.settings.slideEndAnimation && !t && (this.outer.addClass("lg-left-end"), setTimeout(function () {
          e.outer.removeClass("lg-left-end");
        }, 400)));
      }, C.prototype.keyPress = function () {
        var t = this;
        x(window).on("keydown.lg.global" + this.lgId, function (e) {
          t.lgOpened && !0 === t.settings.escKey && 27 === e.keyCode && (e.preventDefault(), t.settings.allowMediaOverlap && t.outer.hasClass("lg-can-toggle") && t.outer.hasClass("lg-components-open") ? t.outer.removeClass("lg-components-open") : t.closeGallery()), t.lgOpened && t.galleryItems.length > 1 && (37 === e.keyCode && (e.preventDefault(), t.goToPrevSlide()), 39 === e.keyCode && (e.preventDefault(), t.goToNextSlide()));
        });
      }, C.prototype.arrow = function () {
        var t = this;
        this.getElementById("lg-prev").on("click.lg", function () {
          t.goToPrevSlide();
        }), this.getElementById("lg-next").on("click.lg", function () {
          t.goToNextSlide();
        });
      }, C.prototype.arrowDisable = function (t) {
        if (!this.settings.loop && this.settings.hideControlOnEnd) {
          var e = this.getElementById("lg-prev"),
            i = this.getElementById("lg-next");
          t + 1 === this.galleryItems.length ? i.attr("disabled", "disabled").addClass("disabled") : i.removeAttr("disabled").removeClass("disabled"), 0 === t ? e.attr("disabled", "disabled").addClass("disabled") : e.removeAttr("disabled").removeClass("disabled");
        }
      }, C.prototype.setTranslate = function (t, e, i, s, o) {
        void 0 === s && (s = 1), void 0 === o && (o = 1), t.css("transform", "translate3d(" + e + "px, " + i + "px, 0px) scale3d(" + s + ", " + o + ", 1)");
      }, C.prototype.mousewheel = function () {
        var t = this,
          e = 0;
        this.outer.on("wheel.lg", function (i) {
          if (i.deltaY && !(t.galleryItems.length < 2)) {
            i.preventDefault();
            var s = new Date().getTime();
            s - e < 1e3 || (e = s, i.deltaY > 0 ? t.goToNextSlide() : i.deltaY < 0 && t.goToPrevSlide());
          }
        });
      }, C.prototype.isSlideElement = function (t) {
        return t.hasClass("lg-outer") || t.hasClass("lg-item") || t.hasClass("lg-img-wrap");
      }, C.prototype.isPosterElement = function (t) {
        var e = this.getSlideItem(this.index).find(".lg-video-play-button").get();
        return t.hasClass("lg-video-poster") || t.hasClass("lg-video-play-button") || e && e.contains(t.get());
      }, C.prototype.toggleMaximize = function () {
        var t = this;
        this.getElementById("lg-maximize").on("click.lg", function () {
          t.$container.toggleClass("lg-inline"), t.refreshOnResize();
        });
      }, C.prototype.invalidateItems = function () {
        for (var t = 0; t < this.items.length; t++) {
          var e = x(this.items[t]);
          e.off("click.lgcustom-item-" + e.attr("data-lg-id"));
        }
      }, C.prototype.trapFocus = function () {
        var t = this;
        this.$container.get().focus({
          preventScroll: !0
        }), x(window).on("keydown.lg.global" + this.lgId, function (e) {
          if (t.lgOpened && ("Tab" === e.key || 9 === e.keyCode)) {
            var i = A(t.$container.get()),
              s = i[0],
              o = i[i.length - 1];
            e.shiftKey ? document.activeElement === s && (o.focus(), e.preventDefault()) : document.activeElement === o && (s.focus(), e.preventDefault());
          }
        });
      }, C.prototype.manageCloseGallery = function () {
        var t = this;
        if (this.settings.closable) {
          var e = !1;
          this.getElementById("lg-close").on("click.lg", function () {
            t.closeGallery();
          }), this.settings.closeOnTap && (this.outer.on("mousedown.lg", function (i) {
            var s = x(i.target);
            e = !!t.isSlideElement(s);
          }), this.outer.on("mousemove.lg", function () {
            e = !1;
          }), this.outer.on("mouseup.lg", function (i) {
            var s = x(i.target);
            t.isSlideElement(s) && e && (t.outer.hasClass("lg-dragging") || t.closeGallery());
          }));
        }
      }, C.prototype.closeGallery = function (t) {
        var e = this;
        if (!this.lgOpened || !this.settings.closable && !t) return 0;
        this.LGel.trigger(v), this.settings.resetScrollPosition && !this.settings.hideScrollbar && x(window).scrollTop(this.prevScrollTop);
        var i,
          s = this.items[this.index];
        if (this.zoomFromOrigin && s) {
          var o = this.mediaContainerPosition,
            n = o.top,
            r = o.bottom,
            l = this.galleryItems[this.index],
            a = l.__slideVideoInfo,
            d = l.poster,
            g = z(s, this.outer, n + r, a && d && this.settings.videoMaxSize);
          i = T(s, this.outer, n, r, g);
        }
        this.zoomFromOrigin && i ? (this.outer.addClass("lg-closing lg-zoom-from-image"), this.getSlideItem(this.index).addClass("lg-start-end-progress").css("transition-duration", this.settings.startAnimationDuration + "ms").css("transform", i)) : (this.outer.addClass("lg-hide-items"), this.outer.removeClass("lg-zoom-from-image")), this.destroyModules(), this.lGalleryOn = !1, this.isDummyImageRemoved = !1, this.zoomFromOrigin = this.settings.zoomFromOrigin, clearTimeout(this.hideBarTimeout), this.hideBarTimeout = !1, x("html").removeClass("lg-on"), this.outer.removeClass("lg-visible lg-components-open"), this.$backdrop.removeClass("in").css("opacity", 0);
        var h = this.zoomFromOrigin && i ? Math.max(this.settings.startAnimationDuration, this.settings.backdropDuration) : this.settings.backdropDuration;
        return this.$container.removeClass("lg-show-in"), setTimeout(function () {
          e.zoomFromOrigin && i && e.outer.removeClass("lg-zoom-from-image"), e.$container.removeClass("lg-show"), e.resetScrollBar(), e.$backdrop.removeAttr("style").css("transition-duration", e.settings.backdropDuration + "ms"), e.outer.removeClass("lg-closing " + e.settings.startClass), e.getSlideItem(e.index).removeClass("lg-start-end-progress"), e.$inner.empty(), e.lgOpened && e.LGel.trigger(b, {
            instance: e
          }), e.$container.get() && e.$container.get().blur(), e.lgOpened = !1;
        }, h + 100), h + 100;
      }, C.prototype.initModules = function () {
        this.plugins.forEach(function (t) {
          try {
            t.init();
          } catch (t) {
            void 0;
          }
        });
      }, C.prototype.destroyModules = function (t) {
        this.plugins.forEach(function (e) {
          try {
            t ? e.destroy() : e.closeGallery && e.closeGallery();
          } catch (t) {
            void 0;
          }
        });
      }, C.prototype.refresh = function (t) {
        this.settings.dynamic || this.invalidateItems(), this.galleryItems = t || this.getItems(), this.updateControls(), this.openGalleryOnItemClick(), this.LGel.trigger(n);
      }, C.prototype.updateControls = function () {
        this.addSlideVideoInfo(this.galleryItems), this.updateCounterTotal(), this.manageSingleSlideClassName();
      }, C.prototype.destroyGallery = function () {
        this.destroyModules(!0), this.settings.dynamic || this.invalidateItems(), x(window).off(".lg.global" + this.lgId), this.LGel.off(".lg"), this.$container.remove();
      }, C.prototype.destroy = function () {
        var t = this.closeGallery(!0);
        return t ? setTimeout(this.destroyGallery.bind(this), t) : this.destroyGallery(), t;
      }, C;
    }();
  return function (t, e) {
    return new V(t, e);
  };
}),
/*!
 * lightgallery | 2.7.2 | September 20th 2023
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */
function (t, e) {
  "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).lgVideo = e();
}(this, function () {
  "use strict";

  /*! *****************************************************************************
      Copyright (c) Microsoft Corporation.
  
      Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.
  
      THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */
  var t = function () {
      return t = Object.assign || function (t) {
        for (var e, i = 1, s = arguments.length; i < s; i++) for (var o in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
        return t;
      }, t.apply(this, arguments);
    },
    e = {
      autoplayFirstVideo: !0,
      youTubePlayerParams: !1,
      vimeoPlayerParams: !1,
      wistiaPlayerParams: !1,
      gotoNextSlideOnVideoEnd: !0,
      autoplayVideoOnSlide: !1,
      videojs: !1,
      videojsTheme: "",
      videojsOptions: {}
    },
    i = "lgHasVideo",
    s = "lgSlideItemLoad",
    o = "lgBeforeSlide",
    n = "lgAfterSlide",
    r = "lgPosterClick",
    l = function (t) {
      return Object.keys(t).map(function (e) {
        return encodeURIComponent(e) + "=" + encodeURIComponent(t[e]);
      }).join("&");
    },
    a = function (e, i) {
      if (!e.youtube) return "";
      var s = e.youtube[2] ? e.youtube[2].slice(1).split("&").map(function (t) {
          return t.split("=");
        }).reduce(function (t, e) {
          var i = e.map(decodeURIComponent),
            s = i[0],
            o = i[1];
          return t[s] = o, t;
        }, {}) : "",
        o = i || {},
        n = t(t(t({}, {
          wmode: "opaque",
          autoplay: 0,
          mute: 1,
          enablejsapi: 1
        }), o), s);
      return "?" + l(n);
    };
  return function () {
    function d(i) {
      return this.core = i, this.settings = t(t({}, e), this.core.settings), this;
    }
    return d.prototype.init = function () {
      var t = this;
      this.core.LGel.on(i + ".video", this.onHasVideo.bind(this)), this.core.LGel.on(r + ".video", function () {
        var e = t.core.getSlideItem(t.core.index);
        t.loadVideoOnPosterClick(e);
      }), this.core.LGel.on(s + ".video", this.onSlideItemLoad.bind(this)), this.core.LGel.on(o + ".video", this.onBeforeSlide.bind(this)), this.core.LGel.on(n + ".video", this.onAfterSlide.bind(this));
    }, d.prototype.onSlideItemLoad = function (t) {
      var e = this,
        i = t.detail,
        s = i.isFirstSlide,
        o = i.index;
      this.settings.autoplayFirstVideo && s && o === this.core.index && setTimeout(function () {
        e.loadAndPlayVideo(o);
      }, 200), !s && this.settings.autoplayVideoOnSlide && o === this.core.index && this.loadAndPlayVideo(o);
    }, d.prototype.onHasVideo = function (t) {
      var e = t.detail,
        i = e.index,
        s = e.src,
        o = e.html5Video;
      e.hasPoster || (this.appendVideos(this.core.getSlideItem(i), {
        src: s,
        addClass: "lg-object",
        index: i,
        html5Video: o
      }), this.gotoNextSlideOnVideoEnd(s, i));
    }, d.prototype.onBeforeSlide = function (t) {
      if (this.core.lGalleryOn) {
        var e = t.detail.prevIndex;
        this.pauseVideo(e);
      }
    }, d.prototype.onAfterSlide = function (t) {
      var e = this,
        i = t.detail,
        s = i.index,
        o = i.prevIndex,
        n = this.core.getSlideItem(s);
      this.settings.autoplayVideoOnSlide && s !== o && n.hasClass("lg-complete") && setTimeout(function () {
        e.loadAndPlayVideo(s);
      }, 100);
    }, d.prototype.loadAndPlayVideo = function (t) {
      var e = this.core.getSlideItem(t);
      this.core.galleryItems[t].poster ? this.loadVideoOnPosterClick(e, !0) : this.playVideo(t);
    }, d.prototype.playVideo = function (t) {
      this.controlVideo(t, "play");
    }, d.prototype.pauseVideo = function (t) {
      this.controlVideo(t, "pause");
    }, d.prototype.getVideoHtml = function (t, e, i, s) {
      var o = "",
        n = this.core.galleryItems[i].__slideVideoInfo || {},
        r = this.core.galleryItems[i],
        d = r.title || r.alt;
      d = d ? 'title="' + d + '"' : "";
      var g = 'allowtransparency="true"\n            frameborder="0"\n            scrolling="no"\n            allowfullscreen\n            mozallowfullscreen\n            webkitallowfullscreen\n            oallowfullscreen\n            msallowfullscreen';
      if (n.youtube) {
        var h = "lg-youtube" + i,
          c = a(n, this.settings.youTubePlayerParams);
        o = '<iframe allow="autoplay" id=' + h + ' class="lg-video-object lg-youtube ' + e + '" ' + d + ' src="' + (t.includes("youtube-nocookie.com") ? "//www.youtube-nocookie.com/" : "//www.youtube.com/") + "embed/" + (n.youtube[1] + c) + '" ' + g + "></iframe>";
      } else if (n.vimeo) {
        h = "lg-vimeo" + i;
        var u = function (t, e) {
          if (!e || !e.vimeo) return "";
          var i = e.vimeo[2] || "",
            s = t && 0 !== Object.keys(t).length ? "&" + l(t) : "",
            o = ((e.vimeo[0].split("/").pop() || "").split("?")[0] || "").split("#")[0],
            n = e.vimeo[1] !== o;
          return n && (i = i.replace("/" + o, "")), "?autoplay=0&muted=1" + (n ? "&h=" + o : "") + s + ("?" == i[0] ? "&" + i.slice(1) : i || "");
        }(this.settings.vimeoPlayerParams, n);
        o = '<iframe allow="autoplay" id=' + h + ' class="lg-video-object lg-vimeo ' + e + '" ' + d + ' src="//player.vimeo.com/video/' + (n.vimeo[1] + u) + '" ' + g + "></iframe>";
      } else if (n.wistia) {
        var m = "lg-wistia" + i;
        u = (u = l(this.settings.wistiaPlayerParams)) ? "?" + u : "", o = '<iframe allow="autoplay" id="' + m + '" src="//fast.wistia.net/embed/iframe/' + (n.wistia[4] + u) + '" ' + d + ' class="wistia_embed lg-video-object lg-wistia ' + e + '" name="wistia_embed" ' + g + "></iframe>";
      } else if (n.html5) {
        for (var p = "", f = 0; f < s.source.length; f++) p += '<source src="' + s.source[f].src + '" type="' + s.source[f].type + '">';
        if (s.tracks) {
          var y = function (t) {
            var e = "",
              i = s.tracks[t];
            Object.keys(i || {}).forEach(function (t) {
              e += t + '="' + i[t] + '" ';
            }), p += "<track " + e + ">";
          };
          for (f = 0; f < s.tracks.length; f++) y(f);
        }
        var v = "",
          b = s.attributes || {};
        Object.keys(b || {}).forEach(function (t) {
          v += t + '="' + b[t] + '" ';
        }), o = '<video class="lg-video-object lg-html5 ' + (this.settings.videojs && this.settings.videojsTheme ? this.settings.videojsTheme + " " : "") + " " + (this.settings.videojs ? " video-js" : "") + '" ' + v + ">\n                " + p + "\n                Your browser does not support HTML5 video.\n            </video>";
      }
      return o;
    }, d.prototype.appendVideos = function (t, e) {
      var i,
        s = this.getVideoHtml(e.src, e.addClass, e.index, e.html5Video);
      t.find(".lg-video-cont").append(s);
      var o = t.find(".lg-video-object").first();
      if (e.html5Video && o.on("mousedown.lg.video", function (t) {
        t.stopPropagation();
      }), this.settings.videojs && (null === (i = this.core.galleryItems[e.index].__slideVideoInfo) || void 0 === i ? void 0 : i.html5)) try {
        return videojs(o.get(), this.settings.videojsOptions);
      } catch (t) {
        void 0;
      }
    }, d.prototype.gotoNextSlideOnVideoEnd = function (t, e) {
      var i = this,
        s = this.core.getSlideItem(e).find(".lg-video-object").first(),
        o = this.core.galleryItems[e].__slideVideoInfo || {};
      if (this.settings.gotoNextSlideOnVideoEnd) if (o.html5) s.on("ended", function () {
        i.core.goToNextSlide();
      });else if (o.vimeo) try {
        new Vimeo.Player(s.get()).on("ended", function () {
          i.core.goToNextSlide();
        });
      } catch (t) {
        void 0;
      } else if (o.wistia) try {
        window._wq = window._wq || [], window._wq.push({
          id: s.attr("id"),
          onReady: function (t) {
            t.bind("end", function () {
              i.core.goToNextSlide();
            });
          }
        });
      } catch (t) {
        void 0;
      }
    }, d.prototype.controlVideo = function (t, e) {
      var i = this.core.getSlideItem(t).find(".lg-video-object").first(),
        s = this.core.galleryItems[t].__slideVideoInfo || {};
      if (i.get()) if (s.youtube) try {
        i.get().contentWindow.postMessage('{"event":"command","func":"' + e + 'Video","args":""}', "*");
      } catch (t) {
        void 0;
      } else if (s.vimeo) try {
        new Vimeo.Player(i.get())[e]();
      } catch (t) {
        void 0;
      } else if (s.html5) {
        if (this.settings.videojs) try {
          videojs(i.get())[e]();
        } catch (t) {
          void 0;
        } else i.get()[e]();
      } else if (s.wistia) try {
        window._wq = window._wq || [], window._wq.push({
          id: i.attr("id"),
          onReady: function (t) {
            t[e]();
          }
        });
      } catch (t) {
        void 0;
      }
    }, d.prototype.loadVideoOnPosterClick = function (t, e) {
      var i = this;
      if (t.hasClass("lg-video-loaded")) e && this.playVideo(this.core.index);else if (t.hasClass("lg-has-video")) this.playVideo(this.core.index);else {
        t.addClass("lg-has-video");
        var s = void 0,
          o = this.core.galleryItems[this.core.index].src,
          n = this.core.galleryItems[this.core.index].video;
        n && (s = "string" == typeof n ? JSON.parse(n) : n);
        var r = this.appendVideos(t, {
          src: o,
          addClass: "",
          index: this.core.index,
          html5Video: s
        });
        this.gotoNextSlideOnVideoEnd(o, this.core.index);
        var l = t.find(".lg-object").first().get();
        t.find(".lg-video-cont").first().append(l), t.addClass("lg-video-loading"), r && r.ready(function () {
          r.on("loadedmetadata", function () {
            i.onVideoLoadAfterPosterClick(t, i.core.index);
          });
        }), t.find(".lg-video-object").first().on("load.lg error.lg loadedmetadata.lg", function () {
          setTimeout(function () {
            i.onVideoLoadAfterPosterClick(t, i.core.index);
          }, 50);
        });
      }
    }, d.prototype.onVideoLoadAfterPosterClick = function (t, e) {
      t.addClass("lg-video-loaded"), this.playVideo(e);
    }, d.prototype.destroy = function () {
      this.core.LGel.off(".lg.video"), this.core.LGel.off(".video");
    }, d;
  }();
}),
/*!
 * lightgallery | 2.7.2 | September 20th 2023
 * http://www.lightgalleryjs.com/
 * Copyright (c) 2020 Sachin Neravath;
 * @license GPLv3
 */
function (t, e) {
  "object" == typeof exports && "undefined" != typeof module ? module.exports = e() : "function" == typeof define && define.amd ? define(e) : (t = "undefined" != typeof globalThis ? globalThis : t || self).lgZoom = e();
}(this, function () {
  "use strict";

  /*! *****************************************************************************
      Copyright (c) Microsoft Corporation.
  
      Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.
  
      THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */
  var t = function () {
      return t = Object.assign || function (t) {
        for (var e, i = 1, s = arguments.length; i < s; i++) for (var o in e = arguments[i]) Object.prototype.hasOwnProperty.call(e, o) && (t[o] = e[o]);
        return t;
      }, t.apply(this, arguments);
    },
    e = {
      scale: 1,
      zoom: !0,
      infiniteZoom: !0,
      actualSize: !0,
      showZoomInOutIcons: !1,
      actualSizeIcons: {
        zoomIn: "lg-zoom-in",
        zoomOut: "lg-zoom-out"
      },
      enableZoomAfter: 300,
      zoomPluginStrings: {
        zoomIn: "Zoom in",
        zoomOut: "Zoom out",
        viewActualSize: "View actual size"
      }
    },
    i = "lgContainerResize",
    s = "lgBeforeOpen",
    o = "lgAfterOpen",
    n = "lgSlideItemLoad",
    r = "lgAfterSlide",
    l = "lgRotateLeft",
    a = "lgRotateRight",
    d = "lgFlipHorizontal",
    g = "lgFlipVertical";
  return function () {
    function h(i, s) {
      return this.core = i, this.$LG = s, this.settings = t(t({}, e), this.core.settings), this;
    }
    return h.prototype.buildTemplates = function () {
      var t = this.settings.showZoomInOutIcons ? '<button id="' + this.core.getIdName("lg-zoom-in") + '" type="button" aria-label="' + this.settings.zoomPluginStrings.zoomIn + '" class="lg-zoom-in lg-icon"></button><button id="' + this.core.getIdName("lg-zoom-out") + '" type="button" aria-label="' + this.settings.zoomPluginStrings.zoomIn + '" class="lg-zoom-out lg-icon"></button>' : "";
      this.settings.actualSize && (t += '<button id="' + this.core.getIdName("lg-actual-size") + '" type="button" aria-label="' + this.settings.zoomPluginStrings.viewActualSize + '" class="' + this.settings.actualSizeIcons.zoomIn + ' lg-icon"></button>'), this.core.outer.addClass("lg-use-transition-for-zoom"), this.core.$toolbar.first().append(t);
    }, h.prototype.enableZoom = function (t) {
      var e = this,
        i = this.settings.enableZoomAfter + t.detail.delay;
      this.$LG("body").first().hasClass("lg-from-hash") && t.detail.delay ? i = 0 : this.$LG("body").first().removeClass("lg-from-hash"), this.zoomableTimeout = setTimeout(function () {
        e.isImageSlide(e.core.index) && (e.core.getSlideItem(t.detail.index).addClass("lg-zoomable"), t.detail.index === e.core.index && e.setZoomEssentials());
      }, i + 30);
    }, h.prototype.enableZoomOnSlideItemLoad = function () {
      this.core.LGel.on(n + ".zoom", this.enableZoom.bind(this));
    }, h.prototype.getDragCords = function (t) {
      return {
        x: t.pageX,
        y: t.pageY
      };
    }, h.prototype.getSwipeCords = function (t) {
      return {
        x: t.touches[0].pageX,
        y: t.touches[0].pageY
      };
    }, h.prototype.getDragAllowedAxises = function (t, e) {
      var i = this.core.getSlideItem(this.core.index).find(".lg-image").first().get(),
        s = 0,
        o = 0,
        n = i.getBoundingClientRect();
      t ? (s = i.offsetHeight * t, o = i.offsetWidth * t) : e ? (s = n.height + e * n.height, o = n.width + e * n.width) : (s = n.height, o = n.width);
      var r = s > this.containerRect.height;
      return {
        allowX: o > this.containerRect.width,
        allowY: r
      };
    }, h.prototype.setZoomEssentials = function () {
      this.containerRect = this.core.$content.get().getBoundingClientRect();
    }, h.prototype.zoomImage = function (t, e, i, s) {
      if (!(Math.abs(e) <= 0)) {
        var o,
          n,
          r = this.containerRect.width / 2 + this.containerRect.left,
          l = this.containerRect.height / 2 + this.containerRect.top + this.scrollTop;
        1 === t && (this.positionChanged = !1);
        var a = this.getDragAllowedAxises(0, e),
          d = a.allowY,
          g = a.allowX;
        this.positionChanged && (o = this.left / (this.scale - e), n = this.top / (this.scale - e), this.pageX = r - o, this.pageY = l - n, this.positionChanged = !1);
        var h,
          c,
          u = this.getPossibleSwipeDragCords(e),
          m = r - this.pageX,
          p = l - this.pageY;
        if (t - e > 1) {
          var f = (t - e) / Math.abs(e);
          h = (m = (e < 0 ? -m : m) + this.left * (f + (e < 0 ? -1 : 1))) / f, c = (p = (e < 0 ? -p : p) + this.top * (f + (e < 0 ? -1 : 1))) / f;
        } else {
          h = m * (f = (t - e) * e), c = p * f;
        }
        i && (g ? this.isBeyondPossibleLeft(h, u.minX) ? h = u.minX : this.isBeyondPossibleRight(h, u.maxX) && (h = u.maxX) : t > 1 && (h < u.minX ? h = u.minX : h > u.maxX && (h = u.maxX)), d ? this.isBeyondPossibleTop(c, u.minY) ? c = u.minY : this.isBeyondPossibleBottom(c, u.maxY) && (c = u.maxY) : t > 1 && (c < u.minY ? c = u.minY : c > u.maxY && (c = u.maxY))), this.setZoomStyles({
          x: h,
          y: c,
          scale: t
        }), this.left = h, this.top = c, s && this.setZoomImageSize();
      }
    }, h.prototype.resetImageTranslate = function (t) {
      if (this.isImageSlide(t)) {
        var e = this.core.getSlideItem(t).find(".lg-image").first();
        this.imageReset = !1, e.removeClass("reset-transition reset-transition-y reset-transition-x"), this.core.outer.removeClass("lg-actual-size"), e.css("width", "auto").css("height", "auto"), setTimeout(function () {
          e.removeClass("no-transition");
        }, 10);
      }
    }, h.prototype.setZoomImageSize = function () {
      var t = this,
        e = this.core.getSlideItem(this.core.index).find(".lg-image").first();
      setTimeout(function () {
        var i = t.getCurrentImageActualSizeScale();
        t.scale >= i && (e.addClass("no-transition"), t.imageReset = !0);
      }, 500), setTimeout(function () {
        var i = t.getCurrentImageActualSizeScale();
        if (t.scale >= i) {
          var s = t.getDragAllowedAxises(t.scale);
          e.css("width", e.get().naturalWidth + "px").css("height", e.get().naturalHeight + "px"), t.core.outer.addClass("lg-actual-size"), s.allowX && s.allowY ? e.addClass("reset-transition") : s.allowX && !s.allowY ? e.addClass("reset-transition-x") : !s.allowX && s.allowY && e.addClass("reset-transition-y");
        }
      }, 550);
    }, h.prototype.setZoomStyles = function (t) {
      var e = this.core.getSlideItem(this.core.index).find(".lg-img-wrap").first(),
        i = this.core.getSlideItem(this.core.index).find(".lg-image").first(),
        s = this.core.outer.find(".lg-current .lg-dummy-img").first();
      this.scale = t.scale, i.css("transform", "scale3d(" + t.scale + ", " + t.scale + ", 1)"), s.css("transform", "scale3d(" + t.scale + ", " + t.scale + ", 1)");
      var o = "translate3d(" + t.x + "px, " + t.y + "px, 0)";
      e.css("transform", o);
    }, h.prototype.setActualSize = function (t, e) {
      var i = this;
      if (!this.zoomInProgress) {
        this.zoomInProgress = !0;
        var s = this.core.galleryItems[this.core.index];
        this.resetImageTranslate(t), setTimeout(function () {
          if (s.src && !i.core.outer.hasClass("lg-first-slide-loading")) {
            var t = i.getCurrentImageActualSizeScale(),
              o = i.scale;
            i.core.outer.hasClass("lg-zoomed") ? i.scale = 1 : i.scale = i.getScale(t), i.setPageCords(e), i.beginZoom(i.scale), i.zoomImage(i.scale, i.scale - o, !0, !0);
          }
        }, 50), setTimeout(function () {
          i.core.outer.removeClass("lg-grabbing").addClass("lg-grab");
        }, 60), setTimeout(function () {
          i.zoomInProgress = !1;
        }, 610);
      }
    }, h.prototype.getNaturalWidth = function (t) {
      var e = this.core.getSlideItem(t).find(".lg-image").first(),
        i = this.core.galleryItems[t].width;
      return i ? parseFloat(i) : e.get().naturalWidth;
    }, h.prototype.getActualSizeScale = function (t, e) {
      return t >= e ? t / e || 2 : 1;
    }, h.prototype.getCurrentImageActualSizeScale = function () {
      var t = this.core.getSlideItem(this.core.index).find(".lg-image").first().get().offsetWidth,
        e = this.getNaturalWidth(this.core.index) || t;
      return this.getActualSizeScale(e, t);
    }, h.prototype.getPageCords = function (t) {
      var e = {};
      if (t) e.x = t.pageX || t.touches[0].pageX, e.y = t.pageY || t.touches[0].pageY;else {
        var i = this.core.$content.get().getBoundingClientRect();
        e.x = i.width / 2 + i.left, e.y = i.height / 2 + this.scrollTop + i.top;
      }
      return e;
    }, h.prototype.setPageCords = function (t) {
      var e = this.getPageCords(t);
      this.pageX = e.x, this.pageY = e.y;
    }, h.prototype.manageActualPixelClassNames = function () {
      this.core.getElementById("lg-actual-size").removeClass(this.settings.actualSizeIcons.zoomIn).addClass(this.settings.actualSizeIcons.zoomOut);
    }, h.prototype.beginZoom = function (t) {
      return this.core.outer.removeClass("lg-zoom-drag-transition lg-zoom-dragging"), t > 1 ? (this.core.outer.addClass("lg-zoomed"), this.manageActualPixelClassNames()) : this.resetZoom(), t > 1;
    }, h.prototype.getScale = function (t) {
      var e = this.getCurrentImageActualSizeScale();
      return t < 1 ? t = 1 : t > e && (t = e), t;
    }, h.prototype.init = function () {
      var t = this;
      if (this.settings.zoom) {
        this.buildTemplates(), this.enableZoomOnSlideItemLoad();
        var e = null;
        this.core.outer.on("dblclick.lg", function (e) {
          t.$LG(e.target).hasClass("lg-image") && t.setActualSize(t.core.index, e);
        }), this.core.outer.on("touchstart.lg", function (i) {
          var s = t.$LG(i.target);
          1 === i.touches.length && s.hasClass("lg-image") && (e ? (clearTimeout(e), e = null, i.preventDefault(), t.setActualSize(t.core.index, i)) : e = setTimeout(function () {
            e = null;
          }, 300));
        }), this.core.LGel.on(i + ".zoom " + a + ".zoom " + l + ".zoom " + d + ".zoom " + g + ".zoom", function () {
          if (t.core.lgOpened && t.isImageSlide(t.core.index) && !t.core.touchAction) {
            var e = t.core.getSlideItem(t.core.index).find(".lg-img-wrap").first();
            t.top = 0, t.left = 0, t.setZoomEssentials(), t.setZoomSwipeStyles(e, {
              x: 0,
              y: 0
            }), t.positionChanged = !0;
          }
        }), this.$LG(window).on("scroll.lg.zoom.global" + this.core.lgId, function () {
          t.core.lgOpened && (t.scrollTop = t.$LG(window).scrollTop());
        }), this.core.getElementById("lg-zoom-out").on("click.lg", function () {
          if (t.isImageSlide(t.core.index)) {
            var e = 0;
            t.imageReset && (t.resetImageTranslate(t.core.index), e = 50), setTimeout(function () {
              var e = t.scale - t.settings.scale;
              e < 1 && (e = 1), t.beginZoom(e), t.zoomImage(e, -t.settings.scale, !0, !t.settings.infiniteZoom);
            }, e);
          }
        }), this.core.getElementById("lg-zoom-in").on("click.lg", function () {
          t.zoomIn();
        }), this.core.getElementById("lg-actual-size").on("click.lg", function () {
          t.setActualSize(t.core.index);
        }), this.core.LGel.on(s + ".zoom", function () {
          t.core.outer.find(".lg-item").removeClass("lg-zoomable");
        }), this.core.LGel.on(o + ".zoom", function () {
          t.scrollTop = t.$LG(window).scrollTop(), t.pageX = t.core.outer.width() / 2, t.pageY = t.core.outer.height() / 2 + t.scrollTop, t.scale = 1;
        }), this.core.LGel.on(r + ".zoom", function (e) {
          var i = e.detail.prevIndex;
          t.scale = 1, t.positionChanged = !1, t.zoomInProgress = !1, t.resetZoom(i), t.resetImageTranslate(i), t.isImageSlide(t.core.index) && t.setZoomEssentials();
        }), this.zoomDrag(), this.pinchZoom(), this.zoomSwipe(), this.zoomableTimeout = !1, this.positionChanged = !1, this.zoomInProgress = !1;
      }
    }, h.prototype.zoomIn = function () {
      if (this.isImageSlide(this.core.index)) {
        var t = this.scale + this.settings.scale;
        this.settings.infiniteZoom || (t = this.getScale(t)), this.beginZoom(t), this.zoomImage(t, Math.min(this.settings.scale, t - this.scale), !0, !this.settings.infiniteZoom);
      }
    }, h.prototype.resetZoom = function (t) {
      this.core.outer.removeClass("lg-zoomed lg-zoom-drag-transition");
      var e = this.core.getElementById("lg-actual-size"),
        i = this.core.getSlideItem(void 0 !== t ? t : this.core.index);
      e.removeClass(this.settings.actualSizeIcons.zoomOut).addClass(this.settings.actualSizeIcons.zoomIn), i.find(".lg-img-wrap").first().removeAttr("style"), i.find(".lg-image").first().removeAttr("style"), this.scale = 1, this.left = 0, this.top = 0, this.setPageCords();
    }, h.prototype.getTouchDistance = function (t) {
      return Math.sqrt((t.touches[0].pageX - t.touches[1].pageX) * (t.touches[0].pageX - t.touches[1].pageX) + (t.touches[0].pageY - t.touches[1].pageY) * (t.touches[0].pageY - t.touches[1].pageY));
    }, h.prototype.pinchZoom = function () {
      var t = this,
        e = 0,
        i = !1,
        s = 1,
        o = 0,
        n = this.core.getSlideItem(this.core.index);
      this.core.outer.on("touchstart.lg", function (i) {
        if (n = t.core.getSlideItem(t.core.index), t.isImageSlide(t.core.index) && 2 === i.touches.length) {
          if (i.preventDefault(), t.core.outer.hasClass("lg-first-slide-loading")) return;
          s = t.scale || 1, t.core.outer.removeClass("lg-zoom-drag-transition lg-zoom-dragging"), t.setPageCords(i), t.resetImageTranslate(t.core.index), t.core.touchAction = "pinch", e = t.getTouchDistance(i);
        }
      }), this.core.$inner.on("touchmove.lg", function (r) {
        if (2 === r.touches.length && "pinch" === t.core.touchAction && (t.$LG(r.target).hasClass("lg-item") || n.get().contains(r.target))) {
          r.preventDefault();
          var l = t.getTouchDistance(r),
            a = e - l;
          if (!i && Math.abs(a) > 5 && (i = !0), i) {
            o = t.scale;
            var d = Math.max(1, s + .02 * -a);
            t.scale = Math.round(100 * (d + Number.EPSILON)) / 100;
            var g = t.scale - o;
            t.zoomImage(t.scale, Math.round(100 * (g + Number.EPSILON)) / 100, !1, !1);
          }
        }
      }), this.core.$inner.on("touchend.lg", function (s) {
        if ("pinch" === t.core.touchAction && (t.$LG(s.target).hasClass("lg-item") || n.get().contains(s.target))) {
          if (i = !1, e = 0, t.scale <= 1) t.resetZoom();else {
            var o = t.getCurrentImageActualSizeScale();
            if (t.scale >= o) {
              var r = o - t.scale;
              0 === r && (r = .01), t.zoomImage(o, r, !1, !0);
            }
            t.manageActualPixelClassNames(), t.core.outer.addClass("lg-zoomed");
          }
          t.core.touchAction = void 0;
        }
      });
    }, h.prototype.touchendZoom = function (t, e, i, s, o) {
      var n = e.x - t.x,
        r = e.y - t.y,
        l = Math.abs(n) / o + 1,
        a = Math.abs(r) / o + 1;
      l > 2 && (l += 1), a > 2 && (a += 1), n *= l, r *= a;
      var d = this.core.getSlideItem(this.core.index).find(".lg-img-wrap").first(),
        g = {};
      g.x = this.left + n, g.y = this.top + r;
      var h = this.getPossibleSwipeDragCords();
      (Math.abs(n) > 15 || Math.abs(r) > 15) && (s && (this.isBeyondPossibleTop(g.y, h.minY) ? g.y = h.minY : this.isBeyondPossibleBottom(g.y, h.maxY) && (g.y = h.maxY)), i && (this.isBeyondPossibleLeft(g.x, h.minX) ? g.x = h.minX : this.isBeyondPossibleRight(g.x, h.maxX) && (g.x = h.maxX)), s ? this.top = g.y : g.y = this.top, i ? this.left = g.x : g.x = this.left, this.setZoomSwipeStyles(d, g), this.positionChanged = !0);
    }, h.prototype.getZoomSwipeCords = function (t, e, i, s, o) {
      var n = {};
      if (s) {
        if (n.y = this.top + (e.y - t.y), this.isBeyondPossibleTop(n.y, o.minY)) {
          var r = o.minY - n.y;
          n.y = o.minY - r / 6;
        } else if (this.isBeyondPossibleBottom(n.y, o.maxY)) {
          var l = n.y - o.maxY;
          n.y = o.maxY + l / 6;
        }
      } else n.y = this.top;
      if (i) {
        if (n.x = this.left + (e.x - t.x), this.isBeyondPossibleLeft(n.x, o.minX)) {
          var a = o.minX - n.x;
          n.x = o.minX - a / 6;
        } else if (this.isBeyondPossibleRight(n.x, o.maxX)) {
          var d = n.x - o.maxX;
          n.x = o.maxX + d / 6;
        }
      } else n.x = this.left;
      return n;
    }, h.prototype.isBeyondPossibleLeft = function (t, e) {
      return t >= e;
    }, h.prototype.isBeyondPossibleRight = function (t, e) {
      return t <= e;
    }, h.prototype.isBeyondPossibleTop = function (t, e) {
      return t >= e;
    }, h.prototype.isBeyondPossibleBottom = function (t, e) {
      return t <= e;
    }, h.prototype.isImageSlide = function (t) {
      var e = this.core.galleryItems[t];
      return "image" === this.core.getSlideType(e);
    }, h.prototype.getPossibleSwipeDragCords = function (t) {
      var e = this.core.getSlideItem(this.core.index).find(".lg-image").first(),
        i = this.core.mediaContainerPosition.bottom,
        s = e.get().getBoundingClientRect(),
        o = s.height,
        n = s.width;
      return t && (o += t * o, n += t * n), {
        minY: (o - this.containerRect.height) / 2,
        maxY: (this.containerRect.height - o) / 2 + i,
        minX: (n - this.containerRect.width) / 2,
        maxX: (this.containerRect.width - n) / 2
      };
    }, h.prototype.setZoomSwipeStyles = function (t, e) {
      t.css("transform", "translate3d(" + e.x + "px, " + e.y + "px, 0)");
    }, h.prototype.zoomSwipe = function () {
      var t,
        e,
        i = this,
        s = {},
        o = {},
        n = !1,
        r = !1,
        l = !1,
        a = new Date(),
        d = (new Date(), this.core.getSlideItem(this.core.index));
      this.core.$inner.on("touchstart.lg", function (o) {
        if (i.isImageSlide(i.core.index) && (d = i.core.getSlideItem(i.core.index), (i.$LG(o.target).hasClass("lg-item") || d.get().contains(o.target)) && 1 === o.touches.length && i.core.outer.hasClass("lg-zoomed"))) {
          o.preventDefault(), a = new Date(), i.core.touchAction = "zoomSwipe", e = i.core.getSlideItem(i.core.index).find(".lg-img-wrap").first();
          var n = i.getDragAllowedAxises(0);
          l = n.allowY, ((r = n.allowX) || l) && (s = i.getSwipeCords(o)), t = i.getPossibleSwipeDragCords(), i.core.outer.addClass("lg-zoom-dragging lg-zoom-drag-transition");
        }
      }), this.core.$inner.on("touchmove.lg", function (a) {
        if (1 === a.touches.length && "zoomSwipe" === i.core.touchAction && (i.$LG(a.target).hasClass("lg-item") || d.get().contains(a.target))) {
          a.preventDefault(), i.core.touchAction = "zoomSwipe", o = i.getSwipeCords(a);
          var g = i.getZoomSwipeCords(s, o, r, l, t);
          (Math.abs(o.x - s.x) > 15 || Math.abs(o.y - s.y) > 15) && (n = !0, i.setZoomSwipeStyles(e, g));
        }
      }), this.core.$inner.on("touchend.lg", function (t) {
        if ("zoomSwipe" === i.core.touchAction && (i.$LG(t.target).hasClass("lg-item") || d.get().contains(t.target))) {
          if (t.preventDefault(), i.core.touchAction = void 0, i.core.outer.removeClass("lg-zoom-dragging"), !n) return;
          n = !1;
          var e = new Date().valueOf() - a.valueOf();
          i.touchendZoom(s, o, r, l, e);
        }
      });
    }, h.prototype.zoomDrag = function () {
      var t,
        e,
        i,
        s,
        o = this,
        n = {},
        r = {},
        l = !1,
        a = !1,
        d = !1,
        g = !1;
      this.core.outer.on("mousedown.lg.zoom", function (e) {
        if (o.isImageSlide(o.core.index)) {
          var r = o.core.getSlideItem(o.core.index);
          if (o.$LG(e.target).hasClass("lg-item") || r.get().contains(e.target)) {
            t = new Date(), s = o.core.getSlideItem(o.core.index).find(".lg-img-wrap").first();
            var a = o.getDragAllowedAxises(0);
            g = a.allowY, d = a.allowX, o.core.outer.hasClass("lg-zoomed") && o.$LG(e.target).hasClass("lg-object") && (d || g) && (e.preventDefault(), n = o.getDragCords(e), i = o.getPossibleSwipeDragCords(), l = !0, o.core.outer.removeClass("lg-grab").addClass("lg-grabbing lg-zoom-drag-transition lg-zoom-dragging"));
          }
        }
      }), this.$LG(window).on("mousemove.lg.zoom.global" + this.core.lgId, function (t) {
        if (l) {
          a = !0, r = o.getDragCords(t);
          var e = o.getZoomSwipeCords(n, r, d, g, i);
          o.setZoomSwipeStyles(s, e);
        }
      }), this.$LG(window).on("mouseup.lg.zoom.global" + this.core.lgId, function (i) {
        if (l) {
          if (e = new Date(), l = !1, o.core.outer.removeClass("lg-zoom-dragging"), a && (n.x !== r.x || n.y !== r.y)) {
            r = o.getDragCords(i);
            var s = e.valueOf() - t.valueOf();
            o.touchendZoom(n, r, d, g, s);
          }
          a = !1;
        }
        o.core.outer.removeClass("lg-grabbing").addClass("lg-grab");
      });
    }, h.prototype.closeGallery = function () {
      this.resetZoom(), this.zoomInProgress = !1;
    }, h.prototype.destroy = function () {
      this.$LG(window).off(".lg.zoom.global" + this.core.lgId), this.core.LGel.off(".lg.zoom"), this.core.LGel.off(".zoom"), clearTimeout(this.zoomableTimeout), this.zoomableTimeout = !1;
    }, h;
  }();
}), function () {
  "use strict";

  $.fn.gallery = function (t) {
    return $(this).each(function () {
      if (void 0 === $(this).data("gallery")) {
        var e,
          i,
          s,
          o = (e = $(this)[0], i = t, s = {
            licenseKey: "D5FCEF9B-61B34DD7-A42FD4F5-48DC6033",
            plugins: [lgZoom, lgVideo],
            counter: !1
          }, lightGallery(e, $.extend(!0, s, i)));
        $(this).data("gallery", o);
      }
    });
  }, App.extend("attachments", {
    loadPreviews: function (t) {
      const e = [];
      $(t).find("span[data-preview-url]").each(function (t) {
        var i = $(this);
        const s = $.Deferred();
        e.push(s), $("<img>").attr("src", i.data("preview-url")).addClass("sp-inline sp-relative sp-transform sp--translate-y-1/2").css("top", "50%").prependTo($(this)), $(this).find("img").on("load", function () {
          s.resolve(), i.find(".fas").remove();
        }).on("error", function () {
          s.resolve(), i.parents("a").removeClass("sp-attachment-preview").attr("href", i.data("download-url")), i.parents("li").find(".sp-preview-hover").html('<i class="fas fa-download"></i>'), i.replaceWith('<span class="fiv-viv fiv-icon-' + i.data("icon") + ' sp-text-5xl sp-mt-4 group-hover:sp-opacity-0"></span>');
        }), $(this).removeAttr("data-preview-url");
      }), $.when.apply($, e).done(function () {
        t.find(".sp-attachments").gallery({
          selector: ".sp-attachment-preview"
        });
      });
    }
  });
}();