{"version":3,"sources":["att.preview.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","lightGallery","this","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","lGEvents","lightGalleryCoreSettings","mode","easing","speed","licenseKey","height","width","addClass","startClass","backdropDuration","container","startAnimationDuration","zoomFromOrigin","hideBarsDelay","showBarsAfter","slideDelay","supportLegacyBrowser","allowMediaOverlap","videoMaxSize","loadYouTubePoster","defaultCaptionHeight","ariaLabelledby","ariaDescribedby","resetScrollPosition","hideScrollbar","closable","swipeToClose","closeOnTap","showCloseIcon","showMaximizeIcon","loop","escKey","keyPress","trapFocus","controls","slideEndAnimation","hideControlOnEnd","mousewheel","getCaptionFromTitleOrAlt","appendSubHtmlTo","subHtmlSelectorRelative","preload","numberOfSlideItemsInDom","selector","selectWithin","nextHtml","prevHtml","index","iframeWidth","iframeHeight","iframeMaxWidth","iframeMaxHeight","download","counter","appendCounterTo","swipeThreshold","enableSwipe","enableDrag","dynamic","dynamicEl","extraProps","exThumbImage","isMobile","undefined","mobileSettings","plugins","strings","closeGallery","toggleMaximize","previousSlide","nextSlide","playVideo","mediaLoadingFailed","lgQuery","cssVenderPrefixes","_getSelector","firstElement","_getFirstEl","generateUUID","replace","c","r","Math","random","toString","context","document","substring","querySelector","querySelectorAll","_each","func","forEach","_setCssVendorPrefix","el","cssProperty","value","property","group1","toUpperCase","indexOf","style","charAt","toLowerCase","slice","isEventMatched","event","eventName","eventNamespace","split","filter","e","every","attr","getAttribute","setAttribute","find","$LG","first","eq","parent","parentElement","get","removeAttr","attributes","attrs","removeAttribute","wrap","className","wrapper","createElement","parentNode","insertBefore","removeChild","appendChild","classNames","classList","add","removeClass","remove","hasClass","contains","hasAttribute","attribute","toggleClass","css","_this","on","events","listener","Array","isArray","eventListeners","push","addEventListener","once","off","keys","removeEventListener","trigger","detail","customEvent","CustomEvent","dispatchEvent","load","url","fetch","then","res","text","html","innerHTML","append","insertAdjacentHTML","prepend","empty","scrollTop","body","documentElement","window","pageYOffset","scrollLeft","pageXOffset","offset","left","top","rect","getBoundingClientRect","bodyMarginLeft","marginLeft","parseFloat","currentStyle","getComputedStyle","clientWidth","paddingLeft","paddingRight","clientHeight","paddingTop","paddingBottom","params","bubbles","cancelable","evt","createEvent","initCustomEvent","Element","matches","msMatchesSelector","webkitMatchesSelector","defaultDynamicOptions","convertToData","g","utils","spacing","defaultLgSize","lgSize","isResponsiveSizes","wWidth","innerWidth","size_1","parseInt","size","cWidth","cHeight","maxWidth","min","maxHeight","ratio","bottom","imageSize","LGel","containerRect","wHeight","elWidth","elHeight","elStyle","x","borderLeft","y","borderTop","src","iframeTitle","altAttr","srcset","sizes","sources","imgMarkup","sourceTag","JSON","parse","map","source","key","srcItms","rsWidth","rsSrc","_src","splice","j","img","complete","naturalWidth","_poster","dummyImg","videoContStyle","playVideoString","_isVideo","youtube","vimeo","elements","element","display","visibility","items","dynamicElements","availableDynamicOptions","il","k","a","jl","__spreadArrays","item","specified","dynamicAttr","name","label","currentItem","alt","title","thumb","subHtml","test","navigator","userAgent","isHTML5VIdeo","html5","console","error","match","wistia","lgId","LightGallery","options","lgOpened","lGalleryOn","lgBusy","currentItemsInDom","prevScrollTop","bodyPaddingRight","isDummyImageRemoved","dragOrSwipeEnabled","mediaContainerPosition","generateSettings","buildModules","settings","galleryItems","getItems","normalizeSettings","init","validateLicense","addSlideVideoInfo","buildStructure","instance","setTimeout","triggerPosterClick","arrow","openGalleryOnItemClick","_loop_1","this_1","$element","uuid","preventDefault","currentItemIndex","openGallery","plugin","warn","getSlideItem","getSlideItemId","getIdName","id","getElementById","manageSingleSlideClassName","outer","$container","subHtmlCont","addClasses","containerClassName","closeIcon","maximizeIcon","template","$lgComponents","$backdrop","$inner","$content","$toolbar","outerClassNames","refreshOnResize","hideBars","manageCloseGallery","initModules","__slideVideoInfo","getMediaContainerPosition","_a","top_1","currentImageSize","resizeVideoSlide","imgStyle","getDummyImgStyles","lgVideoStyle","getVideoContStyle","updateSlides","currentSrc","updateControls","_index","some","galleryItem","itemIndex","organizeSlideItems","loadContent","updateCurrentCounter","children","shouldHideScrollbar","bodyRect","scrollbarWidth","resetScrollBar","itemsToBeInsertedToDom","getItemsToBeInsertedToDom","addHtml","transform","setMediaContainerPosition","timeout","currentSlide_1","slide","captionHeight","thumbContainer","clearTimeout","hideBarTimeout","initPictureFill","$img","picturefill","counterHtml","subHtmlUrl","fL","currentSlide","getDummyImageContent","$currentSlide","$currentItem","_dummyImgSrc","dummyImgContent","setImgMarkup","currentGalleryItem","isFirstSlideWithZoomAnimation","onSlideObjectLoad","$slide","isHTML5VideoWithoutPoster","onLoad","onError","mediaObject","onLgObjectLoad","delay","isFirstSlide","triggerSlideItemLoad","_speed","getSlideType","poster","video","rec","_html5Video","responsive","srcDyItms","videoInfo","iframe","top_2","videoSize","markup","html5Video","hasPoster","loadContentOnFirstSlideLoad","prevIndex","numberOfItems","possibleNumberOfItems","max","prevIndexItem","_element","idx","numberOfExistingItems","getPreviousSlideIndex","currentItemId","setDownloadValue","downloadUrl","$download","makeSlideAnimation","direction","currentSlideItem","previousSlideItem","fromTouch","fromThumb","numberOfGalleryItems","previousSlideItem_1","top_3","arrowDisable","touchPrev","touchNext","updateCounterTotal","touchMove","startCoords","endCoords","distanceX","pageX","distanceY","pageY","allowSwipe","swipeDirection","abs","setTranslate","offsetWidth","gutter","opacity","innerHeight","scale","touchEnd","distance","triggerClick","distanceAbs","goToNextSlide","goToPrevSlide","target","isPosterElement","isMoved","isSwiping","$item","touches","touchAction","manageSwipeClass","isDraging","_touchNext","_touchPrev","_loop","keyCode","$prev","$next","$el","xValue","yValue","scaleX","scaleY","lastCall","deltaY","now","Date","getTime","isSlideElement","playButton","invalidateItems","focus","preventScroll","focusableEls","firstFocusableEl","lastFocusableEl","shiftKey","activeElement","mousedown","force","top_4","_b","destroyModules","removeTimeout","blur","err","destroy","refresh","destroyGallery","closeTimeout","bind","lgVideo","videoSettings","autoplayFirstVideo","youTubePlayerParams","vimeoPlayerParams","wistiaPlayerParams","gotoNextSlideOnVideoEnd","autoplayVideoOnSlide","videojs","videojsTheme","videojsOptions","param","obj","encodeURIComponent","join","getYouTubeParams","youTubePlayerParamsSettings","slideUrlParams","reduce","pair","decodeURIComponent","playerParamsSettings","wmode","autoplay","mute","enablejsapi","Video","core","onHasVideo","loadVideoOnPosterClick","onSlideItemLoad","onBeforeSlide","onAfterSlide","loadAndPlayVideo","appendVideos","pauseVideo","controlVideo","getVideoHtml","videoTitle","commonIframeProps","videoId","youTubeParams","includes","playerParams","defaultParams","urlParams","defaultPlayerParams","hash","pop","isPrivate","getVimeoURLParams","wistiaId","html5VideoMarkup","type","tracks","trackAttributes","track","html5VideoAttrs_1","videoAttributes_1","videoParams","videoHtml","$videoElement","stopPropagation","Vimeo","Player","_wq","onReady","action","contentWindow","postMessage","forcePlay","_html","videoJsPlayer_1","$tempImg","ready","onVideoLoadAfterPosterClick","lgZoom","zoomSettings","zoom","infiniteZoom","actualSize","showZoomInOutIcons","actualSizeIcons","zoomIn","zoomOut","enableZoomAfter","zoomPluginStrings","viewActualSize","Zoom","buildTemplates","zoomIcons","enableZoom","zoomableTimeout","isImageSlide","setZoomEssentials","enableZoomOnSlideItemLoad","getDragCords","getSwipeCords","getDragAllowedAxises","scaleDiff","$image","offsetHeight","allowY","allowX","zoomImage","reposition","resetToMax","originalX","originalY","offsetX","offsetY","positionChanged","dragAllowedAxises","possibleSwipeCords","getPossibleSwipeDragCords","_x","_y","scaleVal","isBeyondPossibleLeft","minX","isBeyondPossibleRight","maxX","isBeyondPossibleTop","minY","isBeyondPossibleBottom","maxY","setZoomStyles","setZoomImageSize","resetImageTranslate","imageReset","actualSizeScale","getCurrentImageActualSizeScale","naturalHeight","ZOOM_TRANSITION_DURATION","$imageWrap","$dummyImage","setActualSize","zoomInProgress","prevScale","getScale","setPageCords","beginZoom","getNaturalWidth","getActualSizeScale","getPageCords","cords","pageCords","manageActualPixelClassNames","resetZoom","tapped","$target","_LGel","setZoomSwipeStyles","zoomDrag","pinchZoom","zoomSwipe","$actualSize","getTouchDistance","sqrt","startDist","pinchStarted","initScale","endDist","_scale","round","Number","EPSILON","diff","touchendZoom","touchDuration","distanceXnew","distanceYnew","speedX","speedY","getZoomSwipeCords","diffMinY","diffMaxY","diffMinX","difMaxX","imgRect","imageHeight","imageWidth","startTime","valueOf","endTime","isDragging","$","fn","gallery","each","data","parameters","defaults","extend","App","loadPreviews","$message","imagePromises","$this","promise","Deferred","prependTo","resolve","parents","replaceWith","when","done"],"mappings":"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","file":"att.preview.min.js","sourcesContent":["/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lightGallery = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    }\n\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n        rotateLeft: 'lgRotateLeft',\r\n        rotateRight: 'lgRotateRight',\r\n        flipHorizontal: 'lgFlipHorizontal',\r\n        flipVertical: 'lgFlipVertical',\r\n        autoplay: 'lgAutoplay',\r\n        autoplayStart: 'lgAutoplayStart',\r\n        autoplayStop: 'lgAutoplayStop',\r\n    };\n\n    var lightGalleryCoreSettings = {\r\n        mode: 'lg-slide',\r\n        easing: 'ease',\r\n        speed: 400,\r\n        licenseKey: '0000-0000-000-0000',\r\n        height: '100%',\r\n        width: '100%',\r\n        addClass: '',\r\n        startClass: 'lg-start-zoom',\r\n        backdropDuration: 300,\r\n        container: '',\r\n        startAnimationDuration: 400,\r\n        zoomFromOrigin: true,\r\n        hideBarsDelay: 0,\r\n        showBarsAfter: 10000,\r\n        slideDelay: 0,\r\n        supportLegacyBrowser: true,\r\n        allowMediaOverlap: false,\r\n        videoMaxSize: '1280-720',\r\n        loadYouTubePoster: true,\r\n        defaultCaptionHeight: 0,\r\n        ariaLabelledby: '',\r\n        ariaDescribedby: '',\r\n        resetScrollPosition: true,\r\n        hideScrollbar: false,\r\n        closable: true,\r\n        swipeToClose: true,\r\n        closeOnTap: true,\r\n        showCloseIcon: true,\r\n        showMaximizeIcon: false,\r\n        loop: true,\r\n        escKey: true,\r\n        keyPress: true,\r\n        trapFocus: true,\r\n        controls: true,\r\n        slideEndAnimation: true,\r\n        hideControlOnEnd: false,\r\n        mousewheel: false,\r\n        getCaptionFromTitleOrAlt: true,\r\n        appendSubHtmlTo: '.lg-sub-html',\r\n        subHtmlSelectorRelative: false,\r\n        preload: 2,\r\n        numberOfSlideItemsInDom: 10,\r\n        selector: '',\r\n        selectWithin: '',\r\n        nextHtml: '',\r\n        prevHtml: '',\r\n        index: 0,\r\n        iframeWidth: '100%',\r\n        iframeHeight: '100%',\r\n        iframeMaxWidth: '100%',\r\n        iframeMaxHeight: '100%',\r\n        download: true,\r\n        counter: true,\r\n        appendCounterTo: '.lg-toolbar',\r\n        swipeThreshold: 50,\r\n        enableSwipe: true,\r\n        enableDrag: true,\r\n        dynamic: false,\r\n        dynamicEl: [],\r\n        extraProps: [],\r\n        exThumbImage: '',\r\n        isMobile: undefined,\r\n        mobileSettings: {\r\n            controls: false,\r\n            showCloseIcon: false,\r\n            download: false,\r\n        },\r\n        plugins: [],\r\n        strings: {\r\n            closeGallery: 'Close gallery',\r\n            toggleMaximize: 'Toggle maximize',\r\n            previousSlide: 'Previous slide',\r\n            nextSlide: 'Next slide',\r\n            download: 'Download',\r\n            playVideo: 'Play video',\r\n            mediaLoadingFailed: 'Oops... Failed to load content...',\r\n        },\r\n    };\n\n    function initLgPolyfills() {\r\n        (function () {\r\n            if (typeof window.CustomEvent === 'function')\r\n                return false;\r\n            function CustomEvent(event, params) {\r\n                params = params || {\r\n                    bubbles: false,\r\n                    cancelable: false,\r\n                    detail: null,\r\n                };\r\n                var evt = document.createEvent('CustomEvent');\r\n                evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n                return evt;\r\n            }\r\n            window.CustomEvent = CustomEvent;\r\n        })();\r\n        (function () {\r\n            if (!Element.prototype.matches) {\r\n                Element.prototype.matches =\r\n                    Element.prototype.msMatchesSelector ||\r\n                        Element.prototype.webkitMatchesSelector;\r\n            }\r\n        })();\r\n    }\r\n    var lgQuery = /** @class */ (function () {\r\n        function lgQuery(selector) {\r\n            this.cssVenderPrefixes = [\r\n                'TransitionDuration',\r\n                'TransitionTimingFunction',\r\n                'Transform',\r\n                'Transition',\r\n            ];\r\n            this.selector = this._getSelector(selector);\r\n            this.firstElement = this._getFirstEl();\r\n            return this;\r\n        }\r\n        lgQuery.generateUUID = function () {\r\n            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\r\n                return v.toString(16);\r\n            });\r\n        };\r\n        lgQuery.prototype._getSelector = function (selector, context) {\r\n            if (context === void 0) { context = document; }\r\n            if (typeof selector !== 'string') {\r\n                return selector;\r\n            }\r\n            context = context || document;\r\n            var fl = selector.substring(0, 1);\r\n            if (fl === '#') {\r\n                return context.querySelector(selector);\r\n            }\r\n            else {\r\n                return context.querySelectorAll(selector);\r\n            }\r\n        };\r\n        lgQuery.prototype._each = function (func) {\r\n            if (!this.selector) {\r\n                return this;\r\n            }\r\n            if (this.selector.length !== undefined) {\r\n                [].forEach.call(this.selector, func);\r\n            }\r\n            else {\r\n                func(this.selector, 0);\r\n            }\r\n            return this;\r\n        };\r\n        lgQuery.prototype._setCssVendorPrefix = function (el, cssProperty, value) {\r\n            // prettier-ignore\r\n            var property = cssProperty.replace(/-([a-z])/gi, function (s, group1) {\r\n                return group1.toUpperCase();\r\n            });\r\n            if (this.cssVenderPrefixes.indexOf(property) !== -1) {\r\n                el.style[property.charAt(0).toLowerCase() + property.slice(1)] = value;\r\n                el.style['webkit' + property] = value;\r\n                el.style['moz' + property] = value;\r\n                el.style['ms' + property] = value;\r\n                el.style['o' + property] = value;\r\n            }\r\n            else {\r\n                el.style[property] = value;\r\n            }\r\n        };\r\n        lgQuery.prototype._getFirstEl = function () {\r\n            if (this.selector && this.selector.length !== undefined) {\r\n                return this.selector[0];\r\n            }\r\n            else {\r\n                return this.selector;\r\n            }\r\n        };\r\n        lgQuery.prototype.isEventMatched = function (event, eventName) {\r\n            var eventNamespace = eventName.split('.');\r\n            return event\r\n                .split('.')\r\n                .filter(function (e) { return e; })\r\n                .every(function (e) {\r\n                return eventNamespace.indexOf(e) !== -1;\r\n            });\r\n        };\r\n        lgQuery.prototype.attr = function (attr, value) {\r\n            if (value === undefined) {\r\n                if (!this.firstElement) {\r\n                    return '';\r\n                }\r\n                return this.firstElement.getAttribute(attr);\r\n            }\r\n            this._each(function (el) {\r\n                el.setAttribute(attr, value);\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.find = function (selector) {\r\n            return $LG(this._getSelector(selector, this.selector));\r\n        };\r\n        lgQuery.prototype.first = function () {\r\n            if (this.selector && this.selector.length !== undefined) {\r\n                return $LG(this.selector[0]);\r\n            }\r\n            else {\r\n                return $LG(this.selector);\r\n            }\r\n        };\r\n        lgQuery.prototype.eq = function (index) {\r\n            return $LG(this.selector[index]);\r\n        };\r\n        lgQuery.prototype.parent = function () {\r\n            return $LG(this.selector.parentElement);\r\n        };\r\n        lgQuery.prototype.get = function () {\r\n            return this._getFirstEl();\r\n        };\r\n        lgQuery.prototype.removeAttr = function (attributes) {\r\n            var attrs = attributes.split(' ');\r\n            this._each(function (el) {\r\n                attrs.forEach(function (attr) { return el.removeAttribute(attr); });\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.wrap = function (className) {\r\n            if (!this.firstElement) {\r\n                return this;\r\n            }\r\n            var wrapper = document.createElement('div');\r\n            wrapper.className = className;\r\n            this.firstElement.parentNode.insertBefore(wrapper, this.firstElement);\r\n            this.firstElement.parentNode.removeChild(this.firstElement);\r\n            wrapper.appendChild(this.firstElement);\r\n            return this;\r\n        };\r\n        lgQuery.prototype.addClass = function (classNames) {\r\n            if (classNames === void 0) { classNames = ''; }\r\n            this._each(function (el) {\r\n                // IE doesn't support multiple arguments\r\n                classNames.split(' ').forEach(function (className) {\r\n                    if (className) {\r\n                        el.classList.add(className);\r\n                    }\r\n                });\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.removeClass = function (classNames) {\r\n            this._each(function (el) {\r\n                // IE doesn't support multiple arguments\r\n                classNames.split(' ').forEach(function (className) {\r\n                    if (className) {\r\n                        el.classList.remove(className);\r\n                    }\r\n                });\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.hasClass = function (className) {\r\n            if (!this.firstElement) {\r\n                return false;\r\n            }\r\n            return this.firstElement.classList.contains(className);\r\n        };\r\n        lgQuery.prototype.hasAttribute = function (attribute) {\r\n            if (!this.firstElement) {\r\n                return false;\r\n            }\r\n            return this.firstElement.hasAttribute(attribute);\r\n        };\r\n        lgQuery.prototype.toggleClass = function (className) {\r\n            if (!this.firstElement) {\r\n                return this;\r\n            }\r\n            if (this.hasClass(className)) {\r\n                this.removeClass(className);\r\n            }\r\n            else {\r\n                this.addClass(className);\r\n            }\r\n            return this;\r\n        };\r\n        lgQuery.prototype.css = function (property, value) {\r\n            var _this = this;\r\n            this._each(function (el) {\r\n                _this._setCssVendorPrefix(el, property, value);\r\n            });\r\n            return this;\r\n        };\r\n        // Need to pass separate namespaces for separate elements\r\n        lgQuery.prototype.on = function (events, listener) {\r\n            var _this = this;\r\n            if (!this.selector) {\r\n                return this;\r\n            }\r\n            events.split(' ').forEach(function (event) {\r\n                if (!Array.isArray(lgQuery.eventListeners[event])) {\r\n                    lgQuery.eventListeners[event] = [];\r\n                }\r\n                lgQuery.eventListeners[event].push(listener);\r\n                _this.selector.addEventListener(event.split('.')[0], listener);\r\n            });\r\n            return this;\r\n        };\r\n        // @todo - test this\r\n        lgQuery.prototype.once = function (event, listener) {\r\n            var _this = this;\r\n            this.on(event, function () {\r\n                _this.off(event);\r\n                listener(event);\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.off = function (event) {\r\n            var _this = this;\r\n            if (!this.selector) {\r\n                return this;\r\n            }\r\n            Object.keys(lgQuery.eventListeners).forEach(function (eventName) {\r\n                if (_this.isEventMatched(event, eventName)) {\r\n                    lgQuery.eventListeners[eventName].forEach(function (listener) {\r\n                        _this.selector.removeEventListener(eventName.split('.')[0], listener);\r\n                    });\r\n                    lgQuery.eventListeners[eventName] = [];\r\n                }\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.trigger = function (event, detail) {\r\n            if (!this.firstElement) {\r\n                return this;\r\n            }\r\n            var customEvent = new CustomEvent(event.split('.')[0], {\r\n                detail: detail || null,\r\n            });\r\n            this.firstElement.dispatchEvent(customEvent);\r\n            return this;\r\n        };\r\n        // Does not support IE\r\n        lgQuery.prototype.load = function (url) {\r\n            var _this = this;\r\n            fetch(url)\r\n                .then(function (res) { return res.text(); })\r\n                .then(function (html) {\r\n                _this.selector.innerHTML = html;\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.html = function (html) {\r\n            if (html === undefined) {\r\n                if (!this.firstElement) {\r\n                    return '';\r\n                }\r\n                return this.firstElement.innerHTML;\r\n            }\r\n            this._each(function (el) {\r\n                el.innerHTML = html;\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.append = function (html) {\r\n            this._each(function (el) {\r\n                if (typeof html === 'string') {\r\n                    el.insertAdjacentHTML('beforeend', html);\r\n                }\r\n                else {\r\n                    el.appendChild(html);\r\n                }\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.prepend = function (html) {\r\n            this._each(function (el) {\r\n                el.insertAdjacentHTML('afterbegin', html);\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.remove = function () {\r\n            this._each(function (el) {\r\n                el.parentNode.removeChild(el);\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.empty = function () {\r\n            this._each(function (el) {\r\n                el.innerHTML = '';\r\n            });\r\n            return this;\r\n        };\r\n        lgQuery.prototype.scrollTop = function (scrollTop) {\r\n            if (scrollTop !== undefined) {\r\n                document.body.scrollTop = scrollTop;\r\n                document.documentElement.scrollTop = scrollTop;\r\n                return this;\r\n            }\r\n            else {\r\n                return (window.pageYOffset ||\r\n                    document.documentElement.scrollTop ||\r\n                    document.body.scrollTop ||\r\n                    0);\r\n            }\r\n        };\r\n        lgQuery.prototype.scrollLeft = function (scrollLeft) {\r\n            if (scrollLeft !== undefined) {\r\n                document.body.scrollLeft = scrollLeft;\r\n                document.documentElement.scrollLeft = scrollLeft;\r\n                return this;\r\n            }\r\n            else {\r\n                return (window.pageXOffset ||\r\n                    document.documentElement.scrollLeft ||\r\n                    document.body.scrollLeft ||\r\n                    0);\r\n            }\r\n        };\r\n        lgQuery.prototype.offset = function () {\r\n            if (!this.firstElement) {\r\n                return {\r\n                    left: 0,\r\n                    top: 0,\r\n                };\r\n            }\r\n            var rect = this.firstElement.getBoundingClientRect();\r\n            var bodyMarginLeft = $LG('body').style().marginLeft;\r\n            // Minus body margin - https://stackoverflow.com/questions/30711548/is-getboundingclientrect-left-returning-a-wrong-value\r\n            return {\r\n                left: rect.left - parseFloat(bodyMarginLeft) + this.scrollLeft(),\r\n                top: rect.top + this.scrollTop(),\r\n            };\r\n        };\r\n        lgQuery.prototype.style = function () {\r\n            if (!this.firstElement) {\r\n                return {};\r\n            }\r\n            return (this.firstElement.currentStyle ||\r\n                window.getComputedStyle(this.firstElement));\r\n        };\r\n        // Width without padding and border even if box-sizing is used.\r\n        lgQuery.prototype.width = function () {\r\n            var style = this.style();\r\n            return (this.firstElement.clientWidth -\r\n                parseFloat(style.paddingLeft) -\r\n                parseFloat(style.paddingRight));\r\n        };\r\n        // Height without padding and border even if box-sizing is used.\r\n        lgQuery.prototype.height = function () {\r\n            var style = this.style();\r\n            return (this.firstElement.clientHeight -\r\n                parseFloat(style.paddingTop) -\r\n                parseFloat(style.paddingBottom));\r\n        };\r\n        lgQuery.eventListeners = {};\r\n        return lgQuery;\r\n    }());\r\n    function $LG(selector) {\r\n        initLgPolyfills();\r\n        return new lgQuery(selector);\r\n    }\n\n    var defaultDynamicOptions = [\r\n        'src',\r\n        'sources',\r\n        'subHtml',\r\n        'subHtmlUrl',\r\n        'html',\r\n        'video',\r\n        'poster',\r\n        'slideName',\r\n        'responsive',\r\n        'srcset',\r\n        'sizes',\r\n        'iframe',\r\n        'downloadUrl',\r\n        'download',\r\n        'width',\r\n        'facebookShareUrl',\r\n        'tweetText',\r\n        'iframeTitle',\r\n        'twitterShareUrl',\r\n        'pinterestShareUrl',\r\n        'pinterestText',\r\n        'fbHtml',\r\n        'disqusIdentifier',\r\n        'disqusUrl',\r\n    ];\r\n    // Convert html data-attribute to camalcase\r\n    function convertToData(attr) {\r\n        // FInd a way for lgsize\r\n        if (attr === 'href') {\r\n            return 'src';\r\n        }\r\n        attr = attr.replace('data-', '');\r\n        attr = attr.charAt(0).toLowerCase() + attr.slice(1);\r\n        attr = attr.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\r\n        return attr;\r\n    }\r\n    var utils = {\r\n        /**\r\n         * get possible width and height from the lgSize attribute. Used for ZoomFromOrigin option\r\n         */\r\n        getSize: function (el, container, spacing, defaultLgSize) {\r\n            if (spacing === void 0) { spacing = 0; }\r\n            var LGel = $LG(el);\r\n            var lgSize = LGel.attr('data-lg-size') || defaultLgSize;\r\n            if (!lgSize) {\r\n                return;\r\n            }\r\n            var isResponsiveSizes = lgSize.split(',');\r\n            // if at-least two viewport sizes are available\r\n            if (isResponsiveSizes[1]) {\r\n                var wWidth = window.innerWidth;\r\n                for (var i = 0; i < isResponsiveSizes.length; i++) {\r\n                    var size_1 = isResponsiveSizes[i];\r\n                    var responsiveWidth = parseInt(size_1.split('-')[2], 10);\r\n                    if (responsiveWidth > wWidth) {\r\n                        lgSize = size_1;\r\n                        break;\r\n                    }\r\n                    // take last item as last option\r\n                    if (i === isResponsiveSizes.length - 1) {\r\n                        lgSize = size_1;\r\n                    }\r\n                }\r\n            }\r\n            var size = lgSize.split('-');\r\n            var width = parseInt(size[0], 10);\r\n            var height = parseInt(size[1], 10);\r\n            var cWidth = container.width();\r\n            var cHeight = container.height() - spacing;\r\n            var maxWidth = Math.min(cWidth, width);\r\n            var maxHeight = Math.min(cHeight, height);\r\n            var ratio = Math.min(maxWidth / width, maxHeight / height);\r\n            return { width: width * ratio, height: height * ratio };\r\n        },\r\n        /**\r\n         * @desc Get transform value based on the imageSize. Used for ZoomFromOrigin option\r\n         * @param {jQuery Element}\r\n         * @returns {String} Transform CSS string\r\n         */\r\n        getTransform: function (el, container, top, bottom, imageSize) {\r\n            if (!imageSize) {\r\n                return;\r\n            }\r\n            var LGel = $LG(el).find('img').first();\r\n            if (!LGel.get()) {\r\n                return;\r\n            }\r\n            var containerRect = container.get().getBoundingClientRect();\r\n            var wWidth = containerRect.width;\r\n            // using innerWidth to include mobile safari bottom bar\r\n            var wHeight = container.height() - (top + bottom);\r\n            var elWidth = LGel.width();\r\n            var elHeight = LGel.height();\r\n            var elStyle = LGel.style();\r\n            var x = (wWidth - elWidth) / 2 -\r\n                LGel.offset().left +\r\n                (parseFloat(elStyle.paddingLeft) || 0) +\r\n                (parseFloat(elStyle.borderLeft) || 0) +\r\n                $LG(window).scrollLeft() +\r\n                containerRect.left;\r\n            var y = (wHeight - elHeight) / 2 -\r\n                LGel.offset().top +\r\n                (parseFloat(elStyle.paddingTop) || 0) +\r\n                (parseFloat(elStyle.borderTop) || 0) +\r\n                $LG(window).scrollTop() +\r\n                top;\r\n            var scX = elWidth / imageSize.width;\r\n            var scY = elHeight / imageSize.height;\r\n            var transform = 'translate3d(' +\r\n                (x *= -1) +\r\n                'px, ' +\r\n                (y *= -1) +\r\n                'px, 0) scale3d(' +\r\n                scX +\r\n                ', ' +\r\n                scY +\r\n                ', 1)';\r\n            return transform;\r\n        },\r\n        getIframeMarkup: function (iframeWidth, iframeHeight, iframeMaxWidth, iframeMaxHeight, src, iframeTitle) {\r\n            var title = iframeTitle ? 'title=\"' + iframeTitle + '\"' : '';\r\n            return \"<div class=\\\"lg-video-cont lg-has-iframe\\\" style=\\\"width:\" + iframeWidth + \"; max-width:\" + iframeMaxWidth + \"; height: \" + iframeHeight + \"; max-height:\" + iframeMaxHeight + \"\\\">\\n                    <iframe class=\\\"lg-object\\\" frameborder=\\\"0\\\" \" + title + \" src=\\\"\" + src + \"\\\"  allowfullscreen=\\\"true\\\"></iframe>\\n                </div>\";\r\n        },\r\n        getImgMarkup: function (index, src, altAttr, srcset, sizes, sources) {\r\n            var srcsetAttr = srcset ? \"srcset=\\\"\" + srcset + \"\\\"\" : '';\r\n            var sizesAttr = sizes ? \"sizes=\\\"\" + sizes + \"\\\"\" : '';\r\n            var imgMarkup = \"<img \" + altAttr + \" \" + srcsetAttr + \"  \" + sizesAttr + \" class=\\\"lg-object lg-image\\\" data-index=\\\"\" + index + \"\\\" src=\\\"\" + src + \"\\\" />\";\r\n            var sourceTag = '';\r\n            if (sources) {\r\n                var sourceObj = typeof sources === 'string' ? JSON.parse(sources) : sources;\r\n                sourceTag = sourceObj.map(function (source) {\r\n                    var attrs = '';\r\n                    Object.keys(source).forEach(function (key) {\r\n                        // Do not remove the first space as it is required to separate the attributes\r\n                        attrs += \" \" + key + \"=\\\"\" + source[key] + \"\\\"\";\r\n                    });\r\n                    return \"<source \" + attrs + \"></source>\";\r\n                });\r\n            }\r\n            return \"\" + sourceTag + imgMarkup;\r\n        },\r\n        // Get src from responsive src\r\n        getResponsiveSrc: function (srcItms) {\r\n            var rsWidth = [];\r\n            var rsSrc = [];\r\n            var src = '';\r\n            for (var i = 0; i < srcItms.length; i++) {\r\n                var _src = srcItms[i].split(' ');\r\n                // Manage empty space\r\n                if (_src[0] === '') {\r\n                    _src.splice(0, 1);\r\n                }\r\n                rsSrc.push(_src[0]);\r\n                rsWidth.push(_src[1]);\r\n            }\r\n            var wWidth = window.innerWidth;\r\n            for (var j = 0; j < rsWidth.length; j++) {\r\n                if (parseInt(rsWidth[j], 10) > wWidth) {\r\n                    src = rsSrc[j];\r\n                    break;\r\n                }\r\n            }\r\n            return src;\r\n        },\r\n        isImageLoaded: function (img) {\r\n            if (!img)\r\n                return false;\r\n            // During the onload event, IE correctly identifies any images that\r\n            // weren’t downloaded as not complete. Others should too. Gecko-based\r\n            // browsers act like NS4 in that they report this incorrectly.\r\n            if (!img.complete) {\r\n                return false;\r\n            }\r\n            // However, they do have two very useful properties: naturalWidth and\r\n            // naturalHeight. These give the true size of the image. If it failed\r\n            // to load, either of these should be zero.\r\n            if (img.naturalWidth === 0) {\r\n                return false;\r\n            }\r\n            // No other way of checking: assume it’s ok.\r\n            return true;\r\n        },\r\n        getVideoPosterMarkup: function (_poster, dummyImg, videoContStyle, playVideoString, _isVideo) {\r\n            var videoClass = '';\r\n            if (_isVideo && _isVideo.youtube) {\r\n                videoClass = 'lg-has-youtube';\r\n            }\r\n            else if (_isVideo && _isVideo.vimeo) {\r\n                videoClass = 'lg-has-vimeo';\r\n            }\r\n            else {\r\n                videoClass = 'lg-has-html5';\r\n            }\r\n            return \"<div class=\\\"lg-video-cont \" + videoClass + \"\\\" style=\\\"\" + videoContStyle + \"\\\">\\n                <div class=\\\"lg-video-play-button\\\">\\n                <svg\\n                    viewBox=\\\"0 0 20 20\\\"\\n                    preserveAspectRatio=\\\"xMidYMid\\\"\\n                    focusable=\\\"false\\\"\\n                    aria-labelledby=\\\"\" + playVideoString + \"\\\"\\n                    role=\\\"img\\\"\\n                    class=\\\"lg-video-play-icon\\\"\\n                >\\n                    <title>\" + playVideoString + \"</title>\\n                    <polygon class=\\\"lg-video-play-icon-inner\\\" points=\\\"1,0 20,10 1,20\\\"></polygon>\\n                </svg>\\n                <svg class=\\\"lg-video-play-icon-bg\\\" viewBox=\\\"0 0 50 50\\\" focusable=\\\"false\\\">\\n                    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"20\\\"></circle></svg>\\n                <svg class=\\\"lg-video-play-icon-circle\\\" viewBox=\\\"0 0 50 50\\\" focusable=\\\"false\\\">\\n                    <circle cx=\\\"50%\\\" cy=\\\"50%\\\" r=\\\"20\\\"></circle>\\n                </svg>\\n            </div>\\n            \" + (dummyImg || '') + \"\\n            <img class=\\\"lg-object lg-video-poster\\\" src=\\\"\" + _poster + \"\\\" />\\n        </div>\";\r\n        },\r\n        getFocusableElements: function (container) {\r\n            var elements = container.querySelectorAll('a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled])');\r\n            var visibleElements = [].filter.call(elements, function (element) {\r\n                var style = window.getComputedStyle(element);\r\n                return style.display !== 'none' && style.visibility !== 'hidden';\r\n            });\r\n            return visibleElements;\r\n        },\r\n        /**\r\n         * @desc Create dynamic elements array from gallery items when dynamic option is false\r\n         * It helps to avoid frequent DOM interaction\r\n         * and avoid multiple checks for dynamic elments\r\n         *\r\n         * @returns {Array} dynamicEl\r\n         */\r\n        getDynamicOptions: function (items, extraProps, getCaptionFromTitleOrAlt, exThumbImage) {\r\n            var dynamicElements = [];\r\n            var availableDynamicOptions = __spreadArrays(defaultDynamicOptions, extraProps);\r\n            [].forEach.call(items, function (item) {\r\n                var dynamicEl = {};\r\n                for (var i = 0; i < item.attributes.length; i++) {\r\n                    var attr = item.attributes[i];\r\n                    if (attr.specified) {\r\n                        var dynamicAttr = convertToData(attr.name);\r\n                        var label = '';\r\n                        if (availableDynamicOptions.indexOf(dynamicAttr) > -1) {\r\n                            label = dynamicAttr;\r\n                        }\r\n                        if (label) {\r\n                            dynamicEl[label] = attr.value;\r\n                        }\r\n                    }\r\n                }\r\n                var currentItem = $LG(item);\r\n                var alt = currentItem.find('img').first().attr('alt');\r\n                var title = currentItem.attr('title');\r\n                var thumb = exThumbImage\r\n                    ? currentItem.attr(exThumbImage)\r\n                    : currentItem.find('img').first().attr('src');\r\n                dynamicEl.thumb = thumb;\r\n                if (getCaptionFromTitleOrAlt && !dynamicEl.subHtml) {\r\n                    dynamicEl.subHtml = title || alt || '';\r\n                }\r\n                dynamicEl.alt = alt || title || '';\r\n                dynamicElements.push(dynamicEl);\r\n            });\r\n            return dynamicElements;\r\n        },\r\n        isMobile: function () {\r\n            return /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);\r\n        },\r\n        /**\r\n         * @desc Check the given src is video\r\n         * @param {String} src\r\n         * @return {Object} video type\r\n         * Ex:{ youtube  :  [\"//www.youtube.com/watch?v=c0asJgSyxcY\", \"c0asJgSyxcY\"] }\r\n         *\r\n         * @todo - this information can be moved to dynamicEl to avoid frequent calls\r\n         */\r\n        isVideo: function (src, isHTML5VIdeo, index) {\r\n            if (!src) {\r\n                if (isHTML5VIdeo) {\r\n                    return {\r\n                        html5: true,\r\n                    };\r\n                }\r\n                else {\r\n                    console.error('lightGallery :- data-src is not provided on slide item ' +\r\n                        (index + 1) +\r\n                        '. Please make sure the selector property is properly configured. More info - https://www.lightgalleryjs.com/demos/html-markup/');\r\n                    return;\r\n                }\r\n            }\r\n            var youtube = src.match(/\\/\\/(?:www\\.)?youtu(?:\\.be|be\\.com|be-nocookie\\.com)\\/(?:watch\\?v=|embed\\/)?([a-z0-9\\-\\_\\%]+)([\\&|?][\\S]*)*/i);\r\n            var vimeo = src.match(/\\/\\/(?:www\\.)?(?:player\\.)?vimeo.com\\/(?:video\\/)?([0-9a-z\\-_]+)(.*)?/i);\r\n            var wistia = src.match(/https?:\\/\\/(.+)?(wistia\\.com|wi\\.st)\\/(medias|embed)\\/([0-9a-z\\-_]+)(.*)/);\r\n            if (youtube) {\r\n                return {\r\n                    youtube: youtube,\r\n                };\r\n            }\r\n            else if (vimeo) {\r\n                return {\r\n                    vimeo: vimeo,\r\n                };\r\n            }\r\n            else if (wistia) {\r\n                return {\r\n                    wistia: wistia,\r\n                };\r\n            }\r\n        },\r\n    };\n\n    // @ref - https://stackoverflow.com/questions/3971841/how-to-resize-images-proportionally-keeping-the-aspect-ratio\r\n    // @ref - https://2ality.com/2017/04/setting-up-multi-platform-packages.html\r\n    // Unique id for each gallery\r\n    var lgId = 0;\r\n    var LightGallery = /** @class */ (function () {\r\n        function LightGallery(element, options) {\r\n            this.lgOpened = false;\r\n            this.index = 0;\r\n            // lightGallery modules\r\n            this.plugins = [];\r\n            // false when lightGallery load first slide content;\r\n            this.lGalleryOn = false;\r\n            // True when a slide animation is in progress\r\n            this.lgBusy = false;\r\n            this.currentItemsInDom = [];\r\n            // Scroll top value before lightGallery is opened\r\n            this.prevScrollTop = 0;\r\n            this.bodyPaddingRight = 0;\r\n            this.isDummyImageRemoved = false;\r\n            this.dragOrSwipeEnabled = false;\r\n            this.mediaContainerPosition = {\r\n                top: 0,\r\n                bottom: 0,\r\n            };\r\n            if (!element) {\r\n                return this;\r\n            }\r\n            lgId++;\r\n            this.lgId = lgId;\r\n            this.el = element;\r\n            this.LGel = $LG(element);\r\n            this.generateSettings(options);\r\n            this.buildModules();\r\n            // When using dynamic mode, ensure dynamicEl is an array\r\n            if (this.settings.dynamic &&\r\n                this.settings.dynamicEl !== undefined &&\r\n                !Array.isArray(this.settings.dynamicEl)) {\r\n                throw 'When using dynamic mode, you must also define dynamicEl as an Array.';\r\n            }\r\n            this.galleryItems = this.getItems();\r\n            this.normalizeSettings();\r\n            // Gallery items\r\n            this.init();\r\n            this.validateLicense();\r\n            return this;\r\n        }\r\n        LightGallery.prototype.generateSettings = function (options) {\r\n            // lightGallery settings\r\n            this.settings = __assign(__assign({}, lightGalleryCoreSettings), options);\r\n            if (this.settings.isMobile &&\r\n                typeof this.settings.isMobile === 'function'\r\n                ? this.settings.isMobile()\r\n                : utils.isMobile()) {\r\n                var mobileSettings = __assign(__assign({}, this.settings.mobileSettings), this.settings.mobileSettings);\r\n                this.settings = __assign(__assign({}, this.settings), mobileSettings);\r\n            }\r\n        };\r\n        LightGallery.prototype.normalizeSettings = function () {\r\n            if (this.settings.slideEndAnimation) {\r\n                this.settings.hideControlOnEnd = false;\r\n            }\r\n            if (!this.settings.closable) {\r\n                this.settings.swipeToClose = false;\r\n            }\r\n            // And reset it on close to get the correct value next time\r\n            this.zoomFromOrigin = this.settings.zoomFromOrigin;\r\n            // At the moment, Zoom from image doesn't support dynamic options\r\n            // @todo add zoomFromOrigin support for dynamic images\r\n            if (this.settings.dynamic) {\r\n                this.zoomFromOrigin = false;\r\n            }\r\n            if (!this.settings.container) {\r\n                this.settings.container = document.body;\r\n            }\r\n            // settings.preload should not be grater than $item.length\r\n            this.settings.preload = Math.min(this.settings.preload, this.galleryItems.length);\r\n        };\r\n        LightGallery.prototype.init = function () {\r\n            var _this = this;\r\n            this.addSlideVideoInfo(this.galleryItems);\r\n            this.buildStructure();\r\n            this.LGel.trigger(lGEvents.init, {\r\n                instance: this,\r\n            });\r\n            if (this.settings.keyPress) {\r\n                this.keyPress();\r\n            }\r\n            setTimeout(function () {\r\n                _this.enableDrag();\r\n                _this.enableSwipe();\r\n                _this.triggerPosterClick();\r\n            }, 50);\r\n            this.arrow();\r\n            if (this.settings.mousewheel) {\r\n                this.mousewheel();\r\n            }\r\n            if (!this.settings.dynamic) {\r\n                this.openGalleryOnItemClick();\r\n            }\r\n        };\r\n        LightGallery.prototype.openGalleryOnItemClick = function () {\r\n            var _this = this;\r\n            var _loop_1 = function (index) {\r\n                var element = this_1.items[index];\r\n                var $element = $LG(element);\r\n                // Using different namespace for click because click event should not unbind if selector is same object('this')\r\n                // @todo manage all event listners - should have namespace that represent element\r\n                var uuid = lgQuery.generateUUID();\r\n                $element\r\n                    .attr('data-lg-id', uuid)\r\n                    .on(\"click.lgcustom-item-\" + uuid, function (e) {\r\n                    e.preventDefault();\r\n                    var currentItemIndex = _this.settings.index || index;\r\n                    _this.openGallery(currentItemIndex, element);\r\n                });\r\n            };\r\n            var this_1 = this;\r\n            // Using for loop instead of using bubbling as the items can be any html element.\r\n            for (var index = 0; index < this.items.length; index++) {\r\n                _loop_1(index);\r\n            }\r\n        };\r\n        /**\r\n         * Module constructor\r\n         * Modules are build incrementally.\r\n         * Gallery should be opened only once all the modules are initialized.\r\n         * use moduleBuildTimeout to make sure this\r\n         */\r\n        LightGallery.prototype.buildModules = function () {\r\n            var _this = this;\r\n            this.settings.plugins.forEach(function (plugin) {\r\n                _this.plugins.push(new plugin(_this, $LG));\r\n            });\r\n        };\r\n        LightGallery.prototype.validateLicense = function () {\r\n            if (!this.settings.licenseKey) {\r\n                console.error('Please provide a valid license key');\r\n            }\r\n            else if (this.settings.licenseKey === '0000-0000-000-0000') {\r\n                console.warn(\"lightGallery: \" + this.settings.licenseKey + \" license key is not valid for production use\");\r\n            }\r\n        };\r\n        LightGallery.prototype.getSlideItem = function (index) {\r\n            return $LG(this.getSlideItemId(index));\r\n        };\r\n        LightGallery.prototype.getSlideItemId = function (index) {\r\n            return \"#lg-item-\" + this.lgId + \"-\" + index;\r\n        };\r\n        LightGallery.prototype.getIdName = function (id) {\r\n            return id + \"-\" + this.lgId;\r\n        };\r\n        LightGallery.prototype.getElementById = function (id) {\r\n            return $LG(\"#\" + this.getIdName(id));\r\n        };\r\n        LightGallery.prototype.manageSingleSlideClassName = function () {\r\n            if (this.galleryItems.length < 2) {\r\n                this.outer.addClass('lg-single-item');\r\n            }\r\n            else {\r\n                this.outer.removeClass('lg-single-item');\r\n            }\r\n        };\r\n        LightGallery.prototype.buildStructure = function () {\r\n            var _this = this;\r\n            var container = this.$container && this.$container.get();\r\n            if (container) {\r\n                return;\r\n            }\r\n            var controls = '';\r\n            var subHtmlCont = '';\r\n            // Create controls\r\n            if (this.settings.controls) {\r\n                controls = \"<button type=\\\"button\\\" id=\\\"\" + this.getIdName('lg-prev') + \"\\\" aria-label=\\\"\" + this.settings.strings['previousSlide'] + \"\\\" class=\\\"lg-prev lg-icon\\\"> \" + this.settings.prevHtml + \" </button>\\n                <button type=\\\"button\\\" id=\\\"\" + this.getIdName('lg-next') + \"\\\" aria-label=\\\"\" + this.settings.strings['nextSlide'] + \"\\\" class=\\\"lg-next lg-icon\\\"> \" + this.settings.nextHtml + \" </button>\";\r\n            }\r\n            if (this.settings.appendSubHtmlTo !== '.lg-item') {\r\n                subHtmlCont =\r\n                    '<div class=\"lg-sub-html\" role=\"status\" aria-live=\"polite\"></div>';\r\n            }\r\n            var addClasses = '';\r\n            if (this.settings.allowMediaOverlap) {\r\n                // Do not remove space before last single quote\r\n                addClasses += 'lg-media-overlap ';\r\n            }\r\n            var ariaLabelledby = this.settings.ariaLabelledby\r\n                ? 'aria-labelledby=\"' + this.settings.ariaLabelledby + '\"'\r\n                : '';\r\n            var ariaDescribedby = this.settings.ariaDescribedby\r\n                ? 'aria-describedby=\"' + this.settings.ariaDescribedby + '\"'\r\n                : '';\r\n            var containerClassName = \"lg-container \" + this.settings.addClass + \" \" + (document.body !== this.settings.container ? 'lg-inline' : '');\r\n            var closeIcon = this.settings.closable && this.settings.showCloseIcon\r\n                ? \"<button type=\\\"button\\\" aria-label=\\\"\" + this.settings.strings['closeGallery'] + \"\\\" id=\\\"\" + this.getIdName('lg-close') + \"\\\" class=\\\"lg-close lg-icon\\\"></button>\"\r\n                : '';\r\n            var maximizeIcon = this.settings.showMaximizeIcon\r\n                ? \"<button type=\\\"button\\\" aria-label=\\\"\" + this.settings.strings['toggleMaximize'] + \"\\\" id=\\\"\" + this.getIdName('lg-maximize') + \"\\\" class=\\\"lg-maximize lg-icon\\\"></button>\"\r\n                : '';\r\n            var template = \"\\n        <div class=\\\"\" + containerClassName + \"\\\" id=\\\"\" + this.getIdName('lg-container') + \"\\\" tabindex=\\\"-1\\\" aria-modal=\\\"true\\\" \" + ariaLabelledby + \" \" + ariaDescribedby + \" role=\\\"dialog\\\"\\n        >\\n            <div id=\\\"\" + this.getIdName('lg-backdrop') + \"\\\" class=\\\"lg-backdrop\\\"></div>\\n\\n            <div id=\\\"\" + this.getIdName('lg-outer') + \"\\\" class=\\\"lg-outer lg-use-css3 lg-css3 lg-hide-items \" + addClasses + \" \\\">\\n\\n              <div id=\\\"\" + this.getIdName('lg-content') + \"\\\" class=\\\"lg-content\\\">\\n                <div id=\\\"\" + this.getIdName('lg-inner') + \"\\\" class=\\\"lg-inner\\\">\\n                </div>\\n                \" + controls + \"\\n              </div>\\n                <div id=\\\"\" + this.getIdName('lg-toolbar') + \"\\\" class=\\\"lg-toolbar lg-group\\\">\\n                    \" + maximizeIcon + \"\\n                    \" + closeIcon + \"\\n                    </div>\\n                    \" + (this.settings.appendSubHtmlTo === '.lg-outer'\r\n                ? subHtmlCont\r\n                : '') + \"\\n                <div id=\\\"\" + this.getIdName('lg-components') + \"\\\" class=\\\"lg-components\\\">\\n                    \" + (this.settings.appendSubHtmlTo === '.lg-sub-html'\r\n                ? subHtmlCont\r\n                : '') + \"\\n                </div>\\n            </div>\\n        </div>\\n        \";\r\n            $LG(this.settings.container).append(template);\r\n            if (document.body !== this.settings.container) {\r\n                $LG(this.settings.container).css('position', 'relative');\r\n            }\r\n            this.outer = this.getElementById('lg-outer');\r\n            this.$lgComponents = this.getElementById('lg-components');\r\n            this.$backdrop = this.getElementById('lg-backdrop');\r\n            this.$container = this.getElementById('lg-container');\r\n            this.$inner = this.getElementById('lg-inner');\r\n            this.$content = this.getElementById('lg-content');\r\n            this.$toolbar = this.getElementById('lg-toolbar');\r\n            this.$backdrop.css('transition-duration', this.settings.backdropDuration + 'ms');\r\n            var outerClassNames = this.settings.mode + \" \";\r\n            this.manageSingleSlideClassName();\r\n            if (this.settings.enableDrag) {\r\n                outerClassNames += 'lg-grab ';\r\n            }\r\n            this.outer.addClass(outerClassNames);\r\n            this.$inner.css('transition-timing-function', this.settings.easing);\r\n            this.$inner.css('transition-duration', this.settings.speed + 'ms');\r\n            if (this.settings.download) {\r\n                this.$toolbar.append(\"<a id=\\\"\" + this.getIdName('lg-download') + \"\\\" target=\\\"_blank\\\" rel=\\\"noopener\\\" aria-label=\\\"\" + this.settings.strings['download'] + \"\\\" download class=\\\"lg-download lg-icon\\\"></a>\");\r\n            }\r\n            this.counter();\r\n            $LG(window).on(\"resize.lg.global\" + this.lgId + \" orientationchange.lg.global\" + this.lgId, function () {\r\n                _this.refreshOnResize();\r\n            });\r\n            this.hideBars();\r\n            this.manageCloseGallery();\r\n            this.toggleMaximize();\r\n            this.initModules();\r\n        };\r\n        LightGallery.prototype.refreshOnResize = function () {\r\n            if (this.lgOpened) {\r\n                var currentGalleryItem = this.galleryItems[this.index];\r\n                var __slideVideoInfo = currentGalleryItem.__slideVideoInfo;\r\n                this.mediaContainerPosition = this.getMediaContainerPosition();\r\n                var _a = this.mediaContainerPosition, top_1 = _a.top, bottom = _a.bottom;\r\n                this.currentImageSize = utils.getSize(this.items[this.index], this.outer, top_1 + bottom, __slideVideoInfo && this.settings.videoMaxSize);\r\n                if (__slideVideoInfo) {\r\n                    this.resizeVideoSlide(this.index, this.currentImageSize);\r\n                }\r\n                if (this.zoomFromOrigin && !this.isDummyImageRemoved) {\r\n                    var imgStyle = this.getDummyImgStyles(this.currentImageSize);\r\n                    this.outer\r\n                        .find('.lg-current .lg-dummy-img')\r\n                        .first()\r\n                        .attr('style', imgStyle);\r\n                }\r\n                this.LGel.trigger(lGEvents.containerResize);\r\n            }\r\n        };\r\n        LightGallery.prototype.resizeVideoSlide = function (index, imageSize) {\r\n            var lgVideoStyle = this.getVideoContStyle(imageSize);\r\n            var currentSlide = this.getSlideItem(index);\r\n            currentSlide.find('.lg-video-cont').attr('style', lgVideoStyle);\r\n        };\r\n        /**\r\n         * Update slides dynamically.\r\n         * Add, edit or delete slides dynamically when lightGallery is opened.\r\n         * Modify the current gallery items and pass it via updateSlides method\r\n         * @note\r\n         * - Do not mutate existing lightGallery items directly.\r\n         * - Always pass new list of gallery items\r\n         * - You need to take care of thumbnails outside the gallery if any\r\n         * - user this method only if you want to update slides when the gallery is opened. Otherwise, use `refresh()` method.\r\n         * @param items Gallery items\r\n         * @param index After the update operation, which slide gallery should navigate to\r\n         * @category lGPublicMethods\r\n         * @example\r\n         * const plugin = lightGallery();\r\n         *\r\n         * // Adding slides dynamically\r\n         * let galleryItems = [\r\n         * // Access existing lightGallery items\r\n         * // galleryItems are automatically generated internally from the gallery HTML markup\r\n         * // or directly from galleryItems when dynamic gallery is used\r\n         *   ...plugin.galleryItems,\r\n         *     ...[\r\n         *       {\r\n         *         src: 'img/img-1.png',\r\n         *           thumb: 'img/thumb1.png',\r\n         *         },\r\n         *     ],\r\n         *   ];\r\n         *   plugin.updateSlides(\r\n         *     galleryItems,\r\n         *     plugin.index,\r\n         *   );\r\n         *\r\n         *\r\n         * // Remove slides dynamically\r\n         * galleryItems = JSON.parse(\r\n         *   JSON.stringify(updateSlideInstance.galleryItems),\r\n         * );\r\n         * galleryItems.shift();\r\n         * updateSlideInstance.updateSlides(galleryItems, 1);\r\n         * @see <a href=\"/demos/update-slides/\">Demo</a>\r\n         */\r\n        LightGallery.prototype.updateSlides = function (items, index) {\r\n            if (this.index > items.length - 1) {\r\n                this.index = items.length - 1;\r\n            }\r\n            if (items.length === 1) {\r\n                this.index = 0;\r\n            }\r\n            if (!items.length) {\r\n                this.closeGallery();\r\n                return;\r\n            }\r\n            var currentSrc = this.galleryItems[index].src;\r\n            this.galleryItems = items;\r\n            this.updateControls();\r\n            this.$inner.empty();\r\n            this.currentItemsInDom = [];\r\n            var _index = 0;\r\n            // Find the current index based on source value of the slide\r\n            this.galleryItems.some(function (galleryItem, itemIndex) {\r\n                if (galleryItem.src === currentSrc) {\r\n                    _index = itemIndex;\r\n                    return true;\r\n                }\r\n                return false;\r\n            });\r\n            this.currentItemsInDom = this.organizeSlideItems(_index, -1);\r\n            this.loadContent(_index, true);\r\n            this.getSlideItem(_index).addClass('lg-current');\r\n            this.index = _index;\r\n            this.updateCurrentCounter(_index);\r\n            this.LGel.trigger(lGEvents.updateSlides);\r\n        };\r\n        // Get gallery items based on multiple conditions\r\n        LightGallery.prototype.getItems = function () {\r\n            // Gallery items\r\n            this.items = [];\r\n            if (!this.settings.dynamic) {\r\n                if (this.settings.selector === 'this') {\r\n                    this.items.push(this.el);\r\n                }\r\n                else if (this.settings.selector) {\r\n                    if (typeof this.settings.selector === 'string') {\r\n                        if (this.settings.selectWithin) {\r\n                            var selectWithin = $LG(this.settings.selectWithin);\r\n                            this.items = selectWithin\r\n                                .find(this.settings.selector)\r\n                                .get();\r\n                        }\r\n                        else {\r\n                            this.items = this.el.querySelectorAll(this.settings.selector);\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.items = this.settings.selector;\r\n                    }\r\n                }\r\n                else {\r\n                    this.items = this.el.children;\r\n                }\r\n                return utils.getDynamicOptions(this.items, this.settings.extraProps, this.settings.getCaptionFromTitleOrAlt, this.settings.exThumbImage);\r\n            }\r\n            else {\r\n                return this.settings.dynamicEl || [];\r\n            }\r\n        };\r\n        LightGallery.prototype.shouldHideScrollbar = function () {\r\n            return (this.settings.hideScrollbar &&\r\n                document.body === this.settings.container);\r\n        };\r\n        LightGallery.prototype.hideScrollbar = function () {\r\n            if (!this.shouldHideScrollbar()) {\r\n                return;\r\n            }\r\n            this.bodyPaddingRight = parseFloat($LG('body').style().paddingRight);\r\n            var bodyRect = document.documentElement.getBoundingClientRect();\r\n            var scrollbarWidth = window.innerWidth - bodyRect.width;\r\n            $LG(document.body).css('padding-right', scrollbarWidth + this.bodyPaddingRight + 'px');\r\n            $LG(document.body).addClass('lg-overlay-open');\r\n        };\r\n        LightGallery.prototype.resetScrollBar = function () {\r\n            if (!this.shouldHideScrollbar()) {\r\n                return;\r\n            }\r\n            $LG(document.body).css('padding-right', this.bodyPaddingRight + 'px');\r\n            $LG(document.body).removeClass('lg-overlay-open');\r\n        };\r\n        /**\r\n         * Open lightGallery.\r\n         * Open gallery with specific slide by passing index of the slide as parameter.\r\n         * @category lGPublicMethods\r\n         * @param {Number} index  - index of the slide\r\n         * @param {HTMLElement} element - Which image lightGallery should zoom from\r\n         *\r\n         * @example\r\n         * const $dynamicGallery = document.getElementById('dynamic-gallery-demo');\r\n         * const dynamicGallery = lightGallery($dynamicGallery, {\r\n         *     dynamic: true,\r\n         *     dynamicEl: [\r\n         *         {\r\n         *              src: 'img/1.jpg',\r\n         *              thumb: 'img/thumb-1.jpg',\r\n         *              subHtml: '<h4>Image 1 title</h4><p>Image 1 descriptions.</p>',\r\n         *         },\r\n         *         ...\r\n         *     ],\r\n         * });\r\n         * $dynamicGallery.addEventListener('click', function () {\r\n         *     // Starts with third item.(Optional).\r\n         *     // This is useful if you want use dynamic mode with\r\n         *     // custom thumbnails (thumbnails outside gallery),\r\n         *     dynamicGallery.openGallery(2);\r\n         * });\r\n         *\r\n         */\r\n        LightGallery.prototype.openGallery = function (index, element) {\r\n            var _this = this;\r\n            if (index === void 0) { index = this.settings.index; }\r\n            // prevent accidental double execution\r\n            if (this.lgOpened)\r\n                return;\r\n            this.lgOpened = true;\r\n            this.outer.removeClass('lg-hide-items');\r\n            this.hideScrollbar();\r\n            // Add display block, but still has opacity 0\r\n            this.$container.addClass('lg-show');\r\n            var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, index);\r\n            this.currentItemsInDom = itemsToBeInsertedToDom;\r\n            var items = '';\r\n            itemsToBeInsertedToDom.forEach(function (item) {\r\n                items = items + (\"<div id=\\\"\" + item + \"\\\" class=\\\"lg-item\\\"></div>\");\r\n            });\r\n            this.$inner.append(items);\r\n            this.addHtml(index);\r\n            var transform = '';\r\n            this.mediaContainerPosition = this.getMediaContainerPosition();\r\n            var _a = this.mediaContainerPosition, top = _a.top, bottom = _a.bottom;\r\n            if (!this.settings.allowMediaOverlap) {\r\n                this.setMediaContainerPosition(top, bottom);\r\n            }\r\n            var __slideVideoInfo = this.galleryItems[index].__slideVideoInfo;\r\n            if (this.zoomFromOrigin && element) {\r\n                this.currentImageSize = utils.getSize(element, this.outer, top + bottom, __slideVideoInfo && this.settings.videoMaxSize);\r\n                transform = utils.getTransform(element, this.outer, top, bottom, this.currentImageSize);\r\n            }\r\n            if (!this.zoomFromOrigin || !transform) {\r\n                this.outer.addClass(this.settings.startClass);\r\n                this.getSlideItem(index).removeClass('lg-complete');\r\n            }\r\n            var timeout = this.settings.zoomFromOrigin\r\n                ? 100\r\n                : this.settings.backdropDuration;\r\n            setTimeout(function () {\r\n                _this.outer.addClass('lg-components-open');\r\n            }, timeout);\r\n            this.index = index;\r\n            this.LGel.trigger(lGEvents.beforeOpen);\r\n            // add class lg-current to remove initial transition\r\n            this.getSlideItem(index).addClass('lg-current');\r\n            this.lGalleryOn = false;\r\n            // Store the current scroll top value to scroll back after closing the gallery..\r\n            this.prevScrollTop = $LG(window).scrollTop();\r\n            setTimeout(function () {\r\n                // Need to check both zoomFromOrigin and transform values as we need to set set the\r\n                // default opening animation if user missed to add the lg-size attribute\r\n                if (_this.zoomFromOrigin && transform) {\r\n                    var currentSlide_1 = _this.getSlideItem(index);\r\n                    currentSlide_1.css('transform', transform);\r\n                    setTimeout(function () {\r\n                        currentSlide_1\r\n                            .addClass('lg-start-progress lg-start-end-progress')\r\n                            .css('transition-duration', _this.settings.startAnimationDuration + 'ms');\r\n                        _this.outer.addClass('lg-zoom-from-image');\r\n                    });\r\n                    setTimeout(function () {\r\n                        currentSlide_1.css('transform', 'translate3d(0, 0, 0)');\r\n                    }, 100);\r\n                }\r\n                setTimeout(function () {\r\n                    _this.$backdrop.addClass('in');\r\n                    _this.$container.addClass('lg-show-in');\r\n                }, 10);\r\n                setTimeout(function () {\r\n                    if (_this.settings.trapFocus &&\r\n                        document.body === _this.settings.container) {\r\n                        _this.trapFocus();\r\n                    }\r\n                }, _this.settings.backdropDuration + 50);\r\n                // lg-visible class resets gallery opacity to 1\r\n                if (!_this.zoomFromOrigin || !transform) {\r\n                    setTimeout(function () {\r\n                        _this.outer.addClass('lg-visible');\r\n                    }, _this.settings.backdropDuration);\r\n                }\r\n                // initiate slide function\r\n                _this.slide(index, false, false, false);\r\n                _this.LGel.trigger(lGEvents.afterOpen);\r\n            });\r\n            if (document.body === this.settings.container) {\r\n                $LG('html').addClass('lg-on');\r\n            }\r\n        };\r\n        /**\r\n         * Note - Changing the position of the media on every slide transition creates a flickering effect.\r\n         * Therefore, The height of the caption is calculated dynamically, only once based on the first slide caption.\r\n         * if you have dynamic captions for each media,\r\n         * you can provide an appropriate height for the captions via allowMediaOverlap option\r\n         */\r\n        LightGallery.prototype.getMediaContainerPosition = function () {\r\n            if (this.settings.allowMediaOverlap) {\r\n                return {\r\n                    top: 0,\r\n                    bottom: 0,\r\n                };\r\n            }\r\n            var top = this.$toolbar.get().clientHeight || 0;\r\n            var subHtml = this.outer.find('.lg-components .lg-sub-html').get();\r\n            var captionHeight = this.settings.defaultCaptionHeight ||\r\n                (subHtml && subHtml.clientHeight) ||\r\n                0;\r\n            var thumbContainer = this.outer.find('.lg-thumb-outer').get();\r\n            var thumbHeight = thumbContainer ? thumbContainer.clientHeight : 0;\r\n            var bottom = thumbHeight + captionHeight;\r\n            return {\r\n                top: top,\r\n                bottom: bottom,\r\n            };\r\n        };\r\n        LightGallery.prototype.setMediaContainerPosition = function (top, bottom) {\r\n            if (top === void 0) { top = 0; }\r\n            if (bottom === void 0) { bottom = 0; }\r\n            this.$content.css('top', top + 'px').css('bottom', bottom + 'px');\r\n        };\r\n        LightGallery.prototype.hideBars = function () {\r\n            var _this = this;\r\n            // Hide controllers if mouse doesn't move for some period\r\n            setTimeout(function () {\r\n                _this.outer.removeClass('lg-hide-items');\r\n                if (_this.settings.hideBarsDelay > 0) {\r\n                    _this.outer.on('mousemove.lg click.lg touchstart.lg', function () {\r\n                        _this.outer.removeClass('lg-hide-items');\r\n                        clearTimeout(_this.hideBarTimeout);\r\n                        // Timeout will be cleared on each slide movement also\r\n                        _this.hideBarTimeout = setTimeout(function () {\r\n                            _this.outer.addClass('lg-hide-items');\r\n                        }, _this.settings.hideBarsDelay);\r\n                    });\r\n                    _this.outer.trigger('mousemove.lg');\r\n                }\r\n            }, this.settings.showBarsAfter);\r\n        };\r\n        LightGallery.prototype.initPictureFill = function ($img) {\r\n            if (this.settings.supportLegacyBrowser) {\r\n                try {\r\n                    picturefill({\r\n                        elements: [$img.get()],\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    console.warn('lightGallery :- If you want srcset or picture tag to be supported for older browser please include picturefil javascript library in your document.');\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         *  @desc Create image counter\r\n         *  Ex: 1/10\r\n         */\r\n        LightGallery.prototype.counter = function () {\r\n            if (this.settings.counter) {\r\n                var counterHtml = \"<div class=\\\"lg-counter\\\" role=\\\"status\\\" aria-live=\\\"polite\\\">\\n                <span id=\\\"\" + this.getIdName('lg-counter-current') + \"\\\" class=\\\"lg-counter-current\\\">\" + (this.index + 1) + \" </span> /\\n                <span id=\\\"\" + this.getIdName('lg-counter-all') + \"\\\" class=\\\"lg-counter-all\\\">\" + this.galleryItems.length + \" </span></div>\";\r\n                this.outer.find(this.settings.appendCounterTo).append(counterHtml);\r\n            }\r\n        };\r\n        /**\r\n         *  @desc add sub-html into the slide\r\n         *  @param {Number} index - index of the slide\r\n         */\r\n        LightGallery.prototype.addHtml = function (index) {\r\n            var subHtml;\r\n            var subHtmlUrl;\r\n            if (this.galleryItems[index].subHtmlUrl) {\r\n                subHtmlUrl = this.galleryItems[index].subHtmlUrl;\r\n            }\r\n            else {\r\n                subHtml = this.galleryItems[index].subHtml;\r\n            }\r\n            if (!subHtmlUrl) {\r\n                if (subHtml) {\r\n                    // get first letter of sub-html\r\n                    // if first letter starts with . or # get the html form the jQuery object\r\n                    var fL = subHtml.substring(0, 1);\r\n                    if (fL === '.' || fL === '#') {\r\n                        if (this.settings.subHtmlSelectorRelative &&\r\n                            !this.settings.dynamic) {\r\n                            subHtml = $LG(this.items)\r\n                                .eq(index)\r\n                                .find(subHtml)\r\n                                .first()\r\n                                .html();\r\n                        }\r\n                        else {\r\n                            subHtml = $LG(subHtml).first().html();\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    subHtml = '';\r\n                }\r\n            }\r\n            if (this.settings.appendSubHtmlTo !== '.lg-item') {\r\n                if (subHtmlUrl) {\r\n                    this.outer.find('.lg-sub-html').load(subHtmlUrl);\r\n                }\r\n                else {\r\n                    this.outer.find('.lg-sub-html').html(subHtml);\r\n                }\r\n            }\r\n            else {\r\n                var currentSlide = $LG(this.getSlideItemId(index));\r\n                if (subHtmlUrl) {\r\n                    currentSlide.load(subHtmlUrl);\r\n                }\r\n                else {\r\n                    currentSlide.append(\"<div class=\\\"lg-sub-html\\\">\" + subHtml + \"</div>\");\r\n                }\r\n            }\r\n            // Add lg-empty-html class if title doesn't exist\r\n            if (typeof subHtml !== 'undefined' && subHtml !== null) {\r\n                if (subHtml === '') {\r\n                    this.outer\r\n                        .find(this.settings.appendSubHtmlTo)\r\n                        .addClass('lg-empty-html');\r\n                }\r\n                else {\r\n                    this.outer\r\n                        .find(this.settings.appendSubHtmlTo)\r\n                        .removeClass('lg-empty-html');\r\n                }\r\n            }\r\n            this.LGel.trigger(lGEvents.afterAppendSubHtml, {\r\n                index: index,\r\n            });\r\n        };\r\n        /**\r\n         *  @desc Preload slides\r\n         *  @param {Number} index - index of the slide\r\n         * @todo preload not working for the first slide, Also, should work for the first and last slide as well\r\n         */\r\n        LightGallery.prototype.preload = function (index) {\r\n            for (var i = 1; i <= this.settings.preload; i++) {\r\n                if (i >= this.galleryItems.length - index) {\r\n                    break;\r\n                }\r\n                this.loadContent(index + i, false);\r\n            }\r\n            for (var j = 1; j <= this.settings.preload; j++) {\r\n                if (index - j < 0) {\r\n                    break;\r\n                }\r\n                this.loadContent(index - j, false);\r\n            }\r\n        };\r\n        LightGallery.prototype.getDummyImgStyles = function (imageSize) {\r\n            if (!imageSize)\r\n                return '';\r\n            return \"width:\" + imageSize.width + \"px;\\n                margin-left: -\" + imageSize.width / 2 + \"px;\\n                margin-top: -\" + imageSize.height / 2 + \"px;\\n                height:\" + imageSize.height + \"px\";\r\n        };\r\n        LightGallery.prototype.getVideoContStyle = function (imageSize) {\r\n            if (!imageSize)\r\n                return '';\r\n            return \"width:\" + imageSize.width + \"px;\\n                height:\" + imageSize.height + \"px\";\r\n        };\r\n        LightGallery.prototype.getDummyImageContent = function ($currentSlide, index, alt) {\r\n            var $currentItem;\r\n            if (!this.settings.dynamic) {\r\n                $currentItem = $LG(this.items).eq(index);\r\n            }\r\n            if ($currentItem) {\r\n                var _dummyImgSrc = void 0;\r\n                if (!this.settings.exThumbImage) {\r\n                    _dummyImgSrc = $currentItem.find('img').first().attr('src');\r\n                }\r\n                else {\r\n                    _dummyImgSrc = $currentItem.attr(this.settings.exThumbImage);\r\n                }\r\n                if (!_dummyImgSrc)\r\n                    return '';\r\n                var imgStyle = this.getDummyImgStyles(this.currentImageSize);\r\n                var dummyImgContent = \"<img \" + alt + \" style=\\\"\" + imgStyle + \"\\\" class=\\\"lg-dummy-img\\\" src=\\\"\" + _dummyImgSrc + \"\\\" />\";\r\n                $currentSlide.addClass('lg-first-slide');\r\n                this.outer.addClass('lg-first-slide-loading');\r\n                return dummyImgContent;\r\n            }\r\n            return '';\r\n        };\r\n        LightGallery.prototype.setImgMarkup = function (src, $currentSlide, index) {\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            var alt = currentGalleryItem.alt, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\r\n            // Use the thumbnail as dummy image which will be resized to actual image size and\r\n            // displayed on top of actual image\r\n            var imgContent = '';\r\n            var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\r\n            if (this.isFirstSlideWithZoomAnimation()) {\r\n                imgContent = this.getDummyImageContent($currentSlide, index, altAttr);\r\n            }\r\n            else {\r\n                imgContent = utils.getImgMarkup(index, src, altAttr, srcset, sizes, sources);\r\n            }\r\n            var imgMarkup = \"<picture class=\\\"lg-img-wrap\\\"> \" + imgContent + \"</picture>\";\r\n            $currentSlide.prepend(imgMarkup);\r\n        };\r\n        LightGallery.prototype.onSlideObjectLoad = function ($slide, isHTML5VideoWithoutPoster, onLoad, onError) {\r\n            var mediaObject = $slide.find('.lg-object').first();\r\n            if (utils.isImageLoaded(mediaObject.get()) ||\r\n                isHTML5VideoWithoutPoster) {\r\n                onLoad();\r\n            }\r\n            else {\r\n                mediaObject.on('load.lg error.lg', function () {\r\n                    onLoad && onLoad();\r\n                });\r\n                mediaObject.on('error.lg', function () {\r\n                    onError && onError();\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         *\r\n         * @param $el Current slide item\r\n         * @param index\r\n         * @param delay Delay is 0 except first time\r\n         * @param speed Speed is same as delay, except it is 0 if gallery is opened via hash plugin\r\n         * @param isFirstSlide\r\n         */\r\n        LightGallery.prototype.onLgObjectLoad = function (currentSlide, index, delay, speed, isFirstSlide, isHTML5VideoWithoutPoster) {\r\n            var _this = this;\r\n            this.onSlideObjectLoad(currentSlide, isHTML5VideoWithoutPoster, function () {\r\n                _this.triggerSlideItemLoad(currentSlide, index, delay, speed, isFirstSlide);\r\n            }, function () {\r\n                currentSlide.addClass('lg-complete lg-complete_');\r\n                currentSlide.html('<span class=\"lg-error-msg\">' +\r\n                    _this.settings.strings['mediaLoadingFailed'] +\r\n                    '</span>');\r\n            });\r\n        };\r\n        LightGallery.prototype.triggerSlideItemLoad = function ($currentSlide, index, delay, speed, isFirstSlide) {\r\n            var _this = this;\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            // Adding delay for video slides without poster for better performance and user experience\r\n            // Videos should start playing once once the gallery is completely loaded\r\n            var _speed = isFirstSlide &&\r\n                this.getSlideType(currentGalleryItem) === 'video' &&\r\n                !currentGalleryItem.poster\r\n                ? speed\r\n                : 0;\r\n            setTimeout(function () {\r\n                $currentSlide.addClass('lg-complete lg-complete_');\r\n                _this.LGel.trigger(lGEvents.slideItemLoad, {\r\n                    index: index,\r\n                    delay: delay || 0,\r\n                    isFirstSlide: isFirstSlide,\r\n                });\r\n            }, _speed);\r\n        };\r\n        LightGallery.prototype.isFirstSlideWithZoomAnimation = function () {\r\n            return !!(!this.lGalleryOn &&\r\n                this.zoomFromOrigin &&\r\n                this.currentImageSize);\r\n        };\r\n        // Add video slideInfo\r\n        LightGallery.prototype.addSlideVideoInfo = function (items) {\r\n            var _this = this;\r\n            items.forEach(function (element, index) {\r\n                element.__slideVideoInfo = utils.isVideo(element.src, !!element.video, index);\r\n                if (element.__slideVideoInfo &&\r\n                    _this.settings.loadYouTubePoster &&\r\n                    !element.poster &&\r\n                    element.__slideVideoInfo.youtube) {\r\n                    element.poster = \"//img.youtube.com/vi/\" + element.__slideVideoInfo.youtube[1] + \"/maxresdefault.jpg\";\r\n                }\r\n            });\r\n        };\r\n        /**\r\n         *  Load slide content into slide.\r\n         *  This is used to load content into slides that is not visible too\r\n         *  @param {Number} index - index of the slide.\r\n         *  @param {Boolean} rec - if true call loadcontent() function again.\r\n         */\r\n        LightGallery.prototype.loadContent = function (index, rec) {\r\n            var _this = this;\r\n            var currentGalleryItem = this.galleryItems[index];\r\n            var $currentSlide = $LG(this.getSlideItemId(index));\r\n            var poster = currentGalleryItem.poster, srcset = currentGalleryItem.srcset, sizes = currentGalleryItem.sizes, sources = currentGalleryItem.sources;\r\n            var src = currentGalleryItem.src;\r\n            var video = currentGalleryItem.video;\r\n            var _html5Video = video && typeof video === 'string' ? JSON.parse(video) : video;\r\n            if (currentGalleryItem.responsive) {\r\n                var srcDyItms = currentGalleryItem.responsive.split(',');\r\n                src = utils.getResponsiveSrc(srcDyItms) || src;\r\n            }\r\n            var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n            var lgVideoStyle = '';\r\n            var iframe = !!currentGalleryItem.iframe;\r\n            var isFirstSlide = !this.lGalleryOn;\r\n            // delay for adding complete class. it is 0 except first time.\r\n            var delay = 0;\r\n            if (isFirstSlide) {\r\n                if (this.zoomFromOrigin && this.currentImageSize) {\r\n                    delay = this.settings.startAnimationDuration + 10;\r\n                }\r\n                else {\r\n                    delay = this.settings.backdropDuration + 10;\r\n                }\r\n            }\r\n            if (!$currentSlide.hasClass('lg-loaded')) {\r\n                if (videoInfo) {\r\n                    var _a = this.mediaContainerPosition, top_2 = _a.top, bottom = _a.bottom;\r\n                    var videoSize = utils.getSize(this.items[index], this.outer, top_2 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                    lgVideoStyle = this.getVideoContStyle(videoSize);\r\n                }\r\n                if (iframe) {\r\n                    var markup = utils.getIframeMarkup(this.settings.iframeWidth, this.settings.iframeHeight, this.settings.iframeMaxWidth, this.settings.iframeMaxHeight, src, currentGalleryItem.iframeTitle);\r\n                    $currentSlide.prepend(markup);\r\n                }\r\n                else if (poster) {\r\n                    var dummyImg = '';\r\n                    var hasStartAnimation = isFirstSlide &&\r\n                        this.zoomFromOrigin &&\r\n                        this.currentImageSize;\r\n                    if (hasStartAnimation) {\r\n                        dummyImg = this.getDummyImageContent($currentSlide, index, '');\r\n                    }\r\n                    var markup = utils.getVideoPosterMarkup(poster, dummyImg || '', lgVideoStyle, this.settings.strings['playVideo'], videoInfo);\r\n                    $currentSlide.prepend(markup);\r\n                }\r\n                else if (videoInfo) {\r\n                    var markup = \"<div class=\\\"lg-video-cont \\\" style=\\\"\" + lgVideoStyle + \"\\\"></div>\";\r\n                    $currentSlide.prepend(markup);\r\n                }\r\n                else {\r\n                    this.setImgMarkup(src, $currentSlide, index);\r\n                    if (srcset || sources) {\r\n                        var $img = $currentSlide.find('.lg-object');\r\n                        this.initPictureFill($img);\r\n                    }\r\n                }\r\n                if (poster || videoInfo) {\r\n                    this.LGel.trigger(lGEvents.hasVideo, {\r\n                        index: index,\r\n                        src: src,\r\n                        html5Video: _html5Video,\r\n                        hasPoster: !!poster,\r\n                    });\r\n                }\r\n                this.LGel.trigger(lGEvents.afterAppendSlide, { index: index });\r\n                if (this.lGalleryOn &&\r\n                    this.settings.appendSubHtmlTo === '.lg-item') {\r\n                    this.addHtml(index);\r\n                }\r\n            }\r\n            // For first time add some delay for displaying the start animation.\r\n            var _speed = 0;\r\n            // Do not change the delay value because it is required for zoom plugin.\r\n            // If gallery opened from direct url (hash) speed value should be 0\r\n            if (delay && !$LG(document.body).hasClass('lg-from-hash')) {\r\n                _speed = delay;\r\n            }\r\n            // Only for first slide and zoomFromOrigin is enabled\r\n            if (this.isFirstSlideWithZoomAnimation()) {\r\n                setTimeout(function () {\r\n                    $currentSlide\r\n                        .removeClass('lg-start-end-progress lg-start-progress')\r\n                        .removeAttr('style');\r\n                }, this.settings.startAnimationDuration + 100);\r\n                if (!$currentSlide.hasClass('lg-loaded')) {\r\n                    setTimeout(function () {\r\n                        if (_this.getSlideType(currentGalleryItem) === 'image') {\r\n                            var alt = currentGalleryItem.alt;\r\n                            var altAttr = alt ? 'alt=\"' + alt + '\"' : '';\r\n                            $currentSlide\r\n                                .find('.lg-img-wrap')\r\n                                .append(utils.getImgMarkup(index, src, altAttr, srcset, sizes, currentGalleryItem.sources));\r\n                            if (srcset || sources) {\r\n                                var $img = $currentSlide.find('.lg-object');\r\n                                _this.initPictureFill($img);\r\n                            }\r\n                        }\r\n                        if (_this.getSlideType(currentGalleryItem) === 'image' ||\r\n                            (_this.getSlideType(currentGalleryItem) === 'video' &&\r\n                                poster)) {\r\n                            _this.onLgObjectLoad($currentSlide, index, delay, _speed, true, false);\r\n                            // load remaining slides once the slide is completely loaded\r\n                            _this.onSlideObjectLoad($currentSlide, !!(videoInfo && videoInfo.html5 && !poster), function () {\r\n                                _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);\r\n                            }, function () {\r\n                                _this.loadContentOnFirstSlideLoad(index, $currentSlide, _speed);\r\n                            });\r\n                        }\r\n                    }, this.settings.startAnimationDuration + 100);\r\n                }\r\n            }\r\n            // SLide content has been added to dom\r\n            $currentSlide.addClass('lg-loaded');\r\n            if (!this.isFirstSlideWithZoomAnimation() ||\r\n                (this.getSlideType(currentGalleryItem) === 'video' && !poster)) {\r\n                this.onLgObjectLoad($currentSlide, index, delay, _speed, isFirstSlide, !!(videoInfo && videoInfo.html5 && !poster));\r\n            }\r\n            // When gallery is opened once content is loaded (second time) need to add lg-complete class for css styling\r\n            if ((!this.zoomFromOrigin || !this.currentImageSize) &&\r\n                $currentSlide.hasClass('lg-complete_') &&\r\n                !this.lGalleryOn) {\r\n                setTimeout(function () {\r\n                    $currentSlide.addClass('lg-complete');\r\n                }, this.settings.backdropDuration);\r\n            }\r\n            // Content loaded\r\n            // Need to set lGalleryOn before calling preload function\r\n            this.lGalleryOn = true;\r\n            if (rec === true) {\r\n                if (!$currentSlide.hasClass('lg-complete_')) {\r\n                    $currentSlide\r\n                        .find('.lg-object')\r\n                        .first()\r\n                        .on('load.lg error.lg', function () {\r\n                        _this.preload(index);\r\n                    });\r\n                }\r\n                else {\r\n                    this.preload(index);\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * @desc Remove dummy image content and load next slides\r\n         * Called only for the first time if zoomFromOrigin animation is enabled\r\n         * @param index\r\n         * @param $currentSlide\r\n         * @param speed\r\n         */\r\n        LightGallery.prototype.loadContentOnFirstSlideLoad = function (index, $currentSlide, speed) {\r\n            var _this = this;\r\n            setTimeout(function () {\r\n                $currentSlide.find('.lg-dummy-img').remove();\r\n                $currentSlide.removeClass('lg-first-slide');\r\n                _this.outer.removeClass('lg-first-slide-loading');\r\n                _this.isDummyImageRemoved = true;\r\n                _this.preload(index);\r\n            }, speed + 300);\r\n        };\r\n        LightGallery.prototype.getItemsToBeInsertedToDom = function (index, prevIndex, numberOfItems) {\r\n            var _this = this;\r\n            if (numberOfItems === void 0) { numberOfItems = 0; }\r\n            var itemsToBeInsertedToDom = [];\r\n            // Minimum 2 items should be there\r\n            var possibleNumberOfItems = Math.max(numberOfItems, 3);\r\n            possibleNumberOfItems = Math.min(possibleNumberOfItems, this.galleryItems.length);\r\n            var prevIndexItem = \"lg-item-\" + this.lgId + \"-\" + prevIndex;\r\n            if (this.galleryItems.length <= 3) {\r\n                this.galleryItems.forEach(function (_element, index) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + _this.lgId + \"-\" + index);\r\n                });\r\n                return itemsToBeInsertedToDom;\r\n            }\r\n            if (index < (this.galleryItems.length - 1) / 2) {\r\n                for (var idx = index; idx > index - possibleNumberOfItems / 2 && idx >= 0; idx--) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\r\n                }\r\n                var numberOfExistingItems = itemsToBeInsertedToDom.length;\r\n                for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index + idx + 1));\r\n                }\r\n            }\r\n            else {\r\n                for (var idx = index; idx <= this.galleryItems.length - 1 &&\r\n                    idx < index + possibleNumberOfItems / 2; idx++) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + idx);\r\n                }\r\n                var numberOfExistingItems = itemsToBeInsertedToDom.length;\r\n                for (var idx = 0; idx < possibleNumberOfItems - numberOfExistingItems; idx++) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (index - idx - 1));\r\n                }\r\n            }\r\n            if (this.settings.loop) {\r\n                if (index === this.galleryItems.length - 1) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + 0);\r\n                }\r\n                else if (index === 0) {\r\n                    itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + (this.galleryItems.length - 1));\r\n                }\r\n            }\r\n            if (itemsToBeInsertedToDom.indexOf(prevIndexItem) === -1) {\r\n                itemsToBeInsertedToDom.push(\"lg-item-\" + this.lgId + \"-\" + prevIndex);\r\n            }\r\n            return itemsToBeInsertedToDom;\r\n        };\r\n        LightGallery.prototype.organizeSlideItems = function (index, prevIndex) {\r\n            var _this = this;\r\n            var itemsToBeInsertedToDom = this.getItemsToBeInsertedToDom(index, prevIndex, this.settings.numberOfSlideItemsInDom);\r\n            itemsToBeInsertedToDom.forEach(function (item) {\r\n                if (_this.currentItemsInDom.indexOf(item) === -1) {\r\n                    _this.$inner.append(\"<div id=\\\"\" + item + \"\\\" class=\\\"lg-item\\\"></div>\");\r\n                }\r\n            });\r\n            this.currentItemsInDom.forEach(function (item) {\r\n                if (itemsToBeInsertedToDom.indexOf(item) === -1) {\r\n                    $LG(\"#\" + item).remove();\r\n                }\r\n            });\r\n            return itemsToBeInsertedToDom;\r\n        };\r\n        /**\r\n         * Get previous index of the slide\r\n         */\r\n        LightGallery.prototype.getPreviousSlideIndex = function () {\r\n            var prevIndex = 0;\r\n            try {\r\n                var currentItemId = this.outer\r\n                    .find('.lg-current')\r\n                    .first()\r\n                    .attr('id');\r\n                prevIndex = parseInt(currentItemId.split('-')[3]) || 0;\r\n            }\r\n            catch (error) {\r\n                prevIndex = 0;\r\n            }\r\n            return prevIndex;\r\n        };\r\n        LightGallery.prototype.setDownloadValue = function (index) {\r\n            if (this.settings.download) {\r\n                var currentGalleryItem = this.galleryItems[index];\r\n                var hideDownloadBtn = currentGalleryItem.downloadUrl === false ||\r\n                    currentGalleryItem.downloadUrl === 'false';\r\n                if (hideDownloadBtn) {\r\n                    this.outer.addClass('lg-hide-download');\r\n                }\r\n                else {\r\n                    var $download = this.getElementById('lg-download');\r\n                    this.outer.removeClass('lg-hide-download');\r\n                    $download.attr('href', currentGalleryItem.downloadUrl ||\r\n                        currentGalleryItem.src);\r\n                    if (currentGalleryItem.download) {\r\n                        $download.attr('download', currentGalleryItem.download);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.makeSlideAnimation = function (direction, currentSlideItem, previousSlideItem) {\r\n            var _this = this;\r\n            if (this.lGalleryOn) {\r\n                previousSlideItem.addClass('lg-slide-progress');\r\n            }\r\n            setTimeout(function () {\r\n                // remove all transitions\r\n                _this.outer.addClass('lg-no-trans');\r\n                _this.outer\r\n                    .find('.lg-item')\r\n                    .removeClass('lg-prev-slide lg-next-slide');\r\n                if (direction === 'prev') {\r\n                    //prevslide\r\n                    currentSlideItem.addClass('lg-prev-slide');\r\n                    previousSlideItem.addClass('lg-next-slide');\r\n                }\r\n                else {\r\n                    // next slide\r\n                    currentSlideItem.addClass('lg-next-slide');\r\n                    previousSlideItem.addClass('lg-prev-slide');\r\n                }\r\n                // give 50 ms for browser to add/remove class\r\n                setTimeout(function () {\r\n                    _this.outer.find('.lg-item').removeClass('lg-current');\r\n                    currentSlideItem.addClass('lg-current');\r\n                    // reset all transitions\r\n                    _this.outer.removeClass('lg-no-trans');\r\n                }, 50);\r\n            }, this.lGalleryOn ? this.settings.slideDelay : 0);\r\n        };\r\n        /**\r\n         * Goto a specific slide.\r\n         * @param {Number} index - index of the slide\r\n         * @param {Boolean} fromTouch - true if slide function called via touch event or mouse drag\r\n         * @param {Boolean} fromThumb - true if slide function called via thumbnail click\r\n         * @param {String} direction - Direction of the slide(next/prev)\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  // to go to 3rd slide\r\n         *  plugin.slide(2);\r\n         *\r\n         */\r\n        LightGallery.prototype.slide = function (index, fromTouch, fromThumb, direction) {\r\n            var _this = this;\r\n            var prevIndex = this.getPreviousSlideIndex();\r\n            this.currentItemsInDom = this.organizeSlideItems(index, prevIndex);\r\n            // Prevent multiple call, Required for hsh plugin\r\n            if (this.lGalleryOn && prevIndex === index) {\r\n                return;\r\n            }\r\n            var numberOfGalleryItems = this.galleryItems.length;\r\n            if (!this.lgBusy) {\r\n                if (this.settings.counter) {\r\n                    this.updateCurrentCounter(index);\r\n                }\r\n                var currentSlideItem = this.getSlideItem(index);\r\n                var previousSlideItem_1 = this.getSlideItem(prevIndex);\r\n                var currentGalleryItem = this.galleryItems[index];\r\n                var videoInfo = currentGalleryItem.__slideVideoInfo;\r\n                this.outer.attr('data-lg-slide-type', this.getSlideType(currentGalleryItem));\r\n                this.setDownloadValue(index);\r\n                if (videoInfo) {\r\n                    var _a = this.mediaContainerPosition, top_3 = _a.top, bottom = _a.bottom;\r\n                    var videoSize = utils.getSize(this.items[index], this.outer, top_3 + bottom, videoInfo && this.settings.videoMaxSize);\r\n                    this.resizeVideoSlide(index, videoSize);\r\n                }\r\n                this.LGel.trigger(lGEvents.beforeSlide, {\r\n                    prevIndex: prevIndex,\r\n                    index: index,\r\n                    fromTouch: !!fromTouch,\r\n                    fromThumb: !!fromThumb,\r\n                });\r\n                this.lgBusy = true;\r\n                clearTimeout(this.hideBarTimeout);\r\n                this.arrowDisable(index);\r\n                if (!direction) {\r\n                    if (index < prevIndex) {\r\n                        direction = 'prev';\r\n                    }\r\n                    else if (index > prevIndex) {\r\n                        direction = 'next';\r\n                    }\r\n                }\r\n                if (!fromTouch) {\r\n                    this.makeSlideAnimation(direction, currentSlideItem, previousSlideItem_1);\r\n                }\r\n                else {\r\n                    this.outer\r\n                        .find('.lg-item')\r\n                        .removeClass('lg-prev-slide lg-current lg-next-slide');\r\n                    var touchPrev = void 0;\r\n                    var touchNext = void 0;\r\n                    if (numberOfGalleryItems > 2) {\r\n                        touchPrev = index - 1;\r\n                        touchNext = index + 1;\r\n                        if (index === 0 && prevIndex === numberOfGalleryItems - 1) {\r\n                            // next slide\r\n                            touchNext = 0;\r\n                            touchPrev = numberOfGalleryItems - 1;\r\n                        }\r\n                        else if (index === numberOfGalleryItems - 1 &&\r\n                            prevIndex === 0) {\r\n                            // prev slide\r\n                            touchNext = 0;\r\n                            touchPrev = numberOfGalleryItems - 1;\r\n                        }\r\n                    }\r\n                    else {\r\n                        touchPrev = 0;\r\n                        touchNext = 1;\r\n                    }\r\n                    if (direction === 'prev') {\r\n                        this.getSlideItem(touchNext).addClass('lg-next-slide');\r\n                    }\r\n                    else {\r\n                        this.getSlideItem(touchPrev).addClass('lg-prev-slide');\r\n                    }\r\n                    currentSlideItem.addClass('lg-current');\r\n                }\r\n                // Do not put load content in set timeout as it needs to load immediately when the gallery is opened\r\n                if (!this.lGalleryOn) {\r\n                    this.loadContent(index, true);\r\n                }\r\n                else {\r\n                    setTimeout(function () {\r\n                        _this.loadContent(index, true);\r\n                        // Add title if this.settings.appendSubHtmlTo === lg-sub-html\r\n                        if (_this.settings.appendSubHtmlTo !== '.lg-item') {\r\n                            _this.addHtml(index);\r\n                        }\r\n                    }, this.settings.speed + 50 + (fromTouch ? 0 : this.settings.slideDelay));\r\n                }\r\n                setTimeout(function () {\r\n                    _this.lgBusy = false;\r\n                    previousSlideItem_1.removeClass('lg-slide-progress');\r\n                    _this.LGel.trigger(lGEvents.afterSlide, {\r\n                        prevIndex: prevIndex,\r\n                        index: index,\r\n                        fromTouch: fromTouch,\r\n                        fromThumb: fromThumb,\r\n                    });\r\n                }, (this.lGalleryOn ? this.settings.speed + 100 : 100) + (fromTouch ? 0 : this.settings.slideDelay));\r\n            }\r\n            this.index = index;\r\n        };\r\n        LightGallery.prototype.updateCurrentCounter = function (index) {\r\n            this.getElementById('lg-counter-current').html(index + 1 + '');\r\n        };\r\n        LightGallery.prototype.updateCounterTotal = function () {\r\n            this.getElementById('lg-counter-all').html(this.galleryItems.length + '');\r\n        };\r\n        LightGallery.prototype.getSlideType = function (item) {\r\n            if (item.__slideVideoInfo) {\r\n                return 'video';\r\n            }\r\n            else if (item.iframe) {\r\n                return 'iframe';\r\n            }\r\n            else {\r\n                return 'image';\r\n            }\r\n        };\r\n        LightGallery.prototype.touchMove = function (startCoords, endCoords, e) {\r\n            var distanceX = endCoords.pageX - startCoords.pageX;\r\n            var distanceY = endCoords.pageY - startCoords.pageY;\r\n            var allowSwipe = false;\r\n            if (this.swipeDirection) {\r\n                allowSwipe = true;\r\n            }\r\n            else {\r\n                if (Math.abs(distanceX) > 15) {\r\n                    this.swipeDirection = 'horizontal';\r\n                    allowSwipe = true;\r\n                }\r\n                else if (Math.abs(distanceY) > 15) {\r\n                    this.swipeDirection = 'vertical';\r\n                    allowSwipe = true;\r\n                }\r\n            }\r\n            if (!allowSwipe) {\r\n                return;\r\n            }\r\n            var $currentSlide = this.getSlideItem(this.index);\r\n            if (this.swipeDirection === 'horizontal') {\r\n                e === null || e === void 0 ? void 0 : e.preventDefault();\r\n                // reset opacity and transition duration\r\n                this.outer.addClass('lg-dragging');\r\n                // move current slide\r\n                this.setTranslate($currentSlide, distanceX, 0);\r\n                // move next and prev slide with current slide\r\n                var width = $currentSlide.get().offsetWidth;\r\n                var slideWidthAmount = (width * 15) / 100;\r\n                var gutter = slideWidthAmount - Math.abs((distanceX * 10) / 100);\r\n                this.setTranslate(this.outer.find('.lg-prev-slide').first(), -width + distanceX - gutter, 0);\r\n                this.setTranslate(this.outer.find('.lg-next-slide').first(), width + distanceX + gutter, 0);\r\n            }\r\n            else if (this.swipeDirection === 'vertical') {\r\n                if (this.settings.swipeToClose) {\r\n                    e === null || e === void 0 ? void 0 : e.preventDefault();\r\n                    this.$container.addClass('lg-dragging-vertical');\r\n                    var opacity = 1 - Math.abs(distanceY) / window.innerHeight;\r\n                    this.$backdrop.css('opacity', opacity);\r\n                    var scale = 1 - Math.abs(distanceY) / (window.innerWidth * 2);\r\n                    this.setTranslate($currentSlide, 0, distanceY, scale, scale);\r\n                    if (Math.abs(distanceY) > 100) {\r\n                        this.outer\r\n                            .addClass('lg-hide-items')\r\n                            .removeClass('lg-components-open');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.touchEnd = function (endCoords, startCoords, event) {\r\n            var _this = this;\r\n            var distance;\r\n            // keep slide animation for any mode while dragg/swipe\r\n            if (this.settings.mode !== 'lg-slide') {\r\n                this.outer.addClass('lg-slide');\r\n            }\r\n            // set transition duration\r\n            setTimeout(function () {\r\n                _this.$container.removeClass('lg-dragging-vertical');\r\n                _this.outer\r\n                    .removeClass('lg-dragging lg-hide-items')\r\n                    .addClass('lg-components-open');\r\n                var triggerClick = true;\r\n                if (_this.swipeDirection === 'horizontal') {\r\n                    distance = endCoords.pageX - startCoords.pageX;\r\n                    var distanceAbs = Math.abs(endCoords.pageX - startCoords.pageX);\r\n                    if (distance < 0 &&\r\n                        distanceAbs > _this.settings.swipeThreshold) {\r\n                        _this.goToNextSlide(true);\r\n                        triggerClick = false;\r\n                    }\r\n                    else if (distance > 0 &&\r\n                        distanceAbs > _this.settings.swipeThreshold) {\r\n                        _this.goToPrevSlide(true);\r\n                        triggerClick = false;\r\n                    }\r\n                }\r\n                else if (_this.swipeDirection === 'vertical') {\r\n                    distance = Math.abs(endCoords.pageY - startCoords.pageY);\r\n                    if (_this.settings.closable &&\r\n                        _this.settings.swipeToClose &&\r\n                        distance > 100) {\r\n                        _this.closeGallery();\r\n                        return;\r\n                    }\r\n                    else {\r\n                        _this.$backdrop.css('opacity', 1);\r\n                    }\r\n                }\r\n                _this.outer.find('.lg-item').removeAttr('style');\r\n                if (triggerClick &&\r\n                    Math.abs(endCoords.pageX - startCoords.pageX) < 5) {\r\n                    // Trigger click if distance is less than 5 pix\r\n                    var target = $LG(event.target);\r\n                    if (_this.isPosterElement(target)) {\r\n                        _this.LGel.trigger(lGEvents.posterClick);\r\n                    }\r\n                }\r\n                _this.swipeDirection = undefined;\r\n            });\r\n            // remove slide class once drag/swipe is completed if mode is not slide\r\n            setTimeout(function () {\r\n                if (!_this.outer.hasClass('lg-dragging') &&\r\n                    _this.settings.mode !== 'lg-slide') {\r\n                    _this.outer.removeClass('lg-slide');\r\n                }\r\n            }, this.settings.speed + 100);\r\n        };\r\n        LightGallery.prototype.enableSwipe = function () {\r\n            var _this = this;\r\n            var startCoords = {};\r\n            var endCoords = {};\r\n            var isMoved = false;\r\n            var isSwiping = false;\r\n            if (this.settings.enableSwipe) {\r\n                this.$inner.on('touchstart.lg', function (e) {\r\n                    _this.dragOrSwipeEnabled = true;\r\n                    var $item = _this.getSlideItem(_this.index);\r\n                    if (($LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target)) &&\r\n                        !_this.outer.hasClass('lg-zoomed') &&\r\n                        !_this.lgBusy &&\r\n                        e.touches.length === 1) {\r\n                        isSwiping = true;\r\n                        _this.touchAction = 'swipe';\r\n                        _this.manageSwipeClass();\r\n                        startCoords = {\r\n                            pageX: e.touches[0].pageX,\r\n                            pageY: e.touches[0].pageY,\r\n                        };\r\n                    }\r\n                });\r\n                this.$inner.on('touchmove.lg', function (e) {\r\n                    if (isSwiping &&\r\n                        _this.touchAction === 'swipe' &&\r\n                        e.touches.length === 1) {\r\n                        endCoords = {\r\n                            pageX: e.touches[0].pageX,\r\n                            pageY: e.touches[0].pageY,\r\n                        };\r\n                        _this.touchMove(startCoords, endCoords, e);\r\n                        isMoved = true;\r\n                    }\r\n                });\r\n                this.$inner.on('touchend.lg', function (event) {\r\n                    if (_this.touchAction === 'swipe') {\r\n                        if (isMoved) {\r\n                            isMoved = false;\r\n                            _this.touchEnd(endCoords, startCoords, event);\r\n                        }\r\n                        else if (isSwiping) {\r\n                            var target = $LG(event.target);\r\n                            if (_this.isPosterElement(target)) {\r\n                                _this.LGel.trigger(lGEvents.posterClick);\r\n                            }\r\n                        }\r\n                        _this.touchAction = undefined;\r\n                        isSwiping = false;\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        LightGallery.prototype.enableDrag = function () {\r\n            var _this = this;\r\n            var startCoords = {};\r\n            var endCoords = {};\r\n            var isDraging = false;\r\n            var isMoved = false;\r\n            if (this.settings.enableDrag) {\r\n                this.outer.on('mousedown.lg', function (e) {\r\n                    _this.dragOrSwipeEnabled = true;\r\n                    var $item = _this.getSlideItem(_this.index);\r\n                    if ($LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target)) {\r\n                        if (!_this.outer.hasClass('lg-zoomed') && !_this.lgBusy) {\r\n                            e.preventDefault();\r\n                            if (!_this.lgBusy) {\r\n                                _this.manageSwipeClass();\r\n                                startCoords = {\r\n                                    pageX: e.pageX,\r\n                                    pageY: e.pageY,\r\n                                };\r\n                                isDraging = true;\r\n                                // ** Fix for webkit cursor issue https://code.google.com/p/chromium/issues/detail?id=26723\r\n                                _this.outer.get().scrollLeft += 1;\r\n                                _this.outer.get().scrollLeft -= 1;\r\n                                // *\r\n                                _this.outer\r\n                                    .removeClass('lg-grab')\r\n                                    .addClass('lg-grabbing');\r\n                                _this.LGel.trigger(lGEvents.dragStart);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                $LG(window).on(\"mousemove.lg.global\" + this.lgId, function (e) {\r\n                    if (isDraging && _this.lgOpened) {\r\n                        isMoved = true;\r\n                        endCoords = {\r\n                            pageX: e.pageX,\r\n                            pageY: e.pageY,\r\n                        };\r\n                        _this.touchMove(startCoords, endCoords);\r\n                        _this.LGel.trigger(lGEvents.dragMove);\r\n                    }\r\n                });\r\n                $LG(window).on(\"mouseup.lg.global\" + this.lgId, function (event) {\r\n                    if (!_this.lgOpened) {\r\n                        return;\r\n                    }\r\n                    var target = $LG(event.target);\r\n                    if (isMoved) {\r\n                        isMoved = false;\r\n                        _this.touchEnd(endCoords, startCoords, event);\r\n                        _this.LGel.trigger(lGEvents.dragEnd);\r\n                    }\r\n                    else if (_this.isPosterElement(target)) {\r\n                        _this.LGel.trigger(lGEvents.posterClick);\r\n                    }\r\n                    // Prevent execution on click\r\n                    if (isDraging) {\r\n                        isDraging = false;\r\n                        _this.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        LightGallery.prototype.triggerPosterClick = function () {\r\n            var _this = this;\r\n            this.$inner.on('click.lg', function (event) {\r\n                if (!_this.dragOrSwipeEnabled &&\r\n                    _this.isPosterElement($LG(event.target))) {\r\n                    _this.LGel.trigger(lGEvents.posterClick);\r\n                }\r\n            });\r\n        };\r\n        LightGallery.prototype.manageSwipeClass = function () {\r\n            var _touchNext = this.index + 1;\r\n            var _touchPrev = this.index - 1;\r\n            if (this.settings.loop && this.galleryItems.length > 2) {\r\n                if (this.index === 0) {\r\n                    _touchPrev = this.galleryItems.length - 1;\r\n                }\r\n                else if (this.index === this.galleryItems.length - 1) {\r\n                    _touchNext = 0;\r\n                }\r\n            }\r\n            this.outer.find('.lg-item').removeClass('lg-next-slide lg-prev-slide');\r\n            if (_touchPrev > -1) {\r\n                this.getSlideItem(_touchPrev).addClass('lg-prev-slide');\r\n            }\r\n            this.getSlideItem(_touchNext).addClass('lg-next-slide');\r\n        };\r\n        /**\r\n         * Go to next slide\r\n         * @param {Boolean} fromTouch - true if slide function called via touch event\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  plugin.goToNextSlide();\r\n         * @see <a href=\"/demos/methods/\">Demo</a>\r\n         */\r\n        LightGallery.prototype.goToNextSlide = function (fromTouch) {\r\n            var _this = this;\r\n            var _loop = this.settings.loop;\r\n            if (fromTouch && this.galleryItems.length < 3) {\r\n                _loop = false;\r\n            }\r\n            if (!this.lgBusy) {\r\n                if (this.index + 1 < this.galleryItems.length) {\r\n                    this.index++;\r\n                    this.LGel.trigger(lGEvents.beforeNextSlide, {\r\n                        index: this.index,\r\n                    });\r\n                    this.slide(this.index, !!fromTouch, false, 'next');\r\n                }\r\n                else {\r\n                    if (_loop) {\r\n                        this.index = 0;\r\n                        this.LGel.trigger(lGEvents.beforeNextSlide, {\r\n                            index: this.index,\r\n                        });\r\n                        this.slide(this.index, !!fromTouch, false, 'next');\r\n                    }\r\n                    else if (this.settings.slideEndAnimation && !fromTouch) {\r\n                        this.outer.addClass('lg-right-end');\r\n                        setTimeout(function () {\r\n                            _this.outer.removeClass('lg-right-end');\r\n                        }, 400);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Go to previous slides\r\n         * @param {Boolean} fromTouch - true if slide function called via touch event\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery({});\r\n         *  plugin.goToPrevSlide();\r\n         * @see <a href=\"/demos/methods/\">Demo</a>\r\n         *\r\n         */\r\n        LightGallery.prototype.goToPrevSlide = function (fromTouch) {\r\n            var _this = this;\r\n            var _loop = this.settings.loop;\r\n            if (fromTouch && this.galleryItems.length < 3) {\r\n                _loop = false;\r\n            }\r\n            if (!this.lgBusy) {\r\n                if (this.index > 0) {\r\n                    this.index--;\r\n                    this.LGel.trigger(lGEvents.beforePrevSlide, {\r\n                        index: this.index,\r\n                        fromTouch: fromTouch,\r\n                    });\r\n                    this.slide(this.index, !!fromTouch, false, 'prev');\r\n                }\r\n                else {\r\n                    if (_loop) {\r\n                        this.index = this.galleryItems.length - 1;\r\n                        this.LGel.trigger(lGEvents.beforePrevSlide, {\r\n                            index: this.index,\r\n                            fromTouch: fromTouch,\r\n                        });\r\n                        this.slide(this.index, !!fromTouch, false, 'prev');\r\n                    }\r\n                    else if (this.settings.slideEndAnimation && !fromTouch) {\r\n                        this.outer.addClass('lg-left-end');\r\n                        setTimeout(function () {\r\n                            _this.outer.removeClass('lg-left-end');\r\n                        }, 400);\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.keyPress = function () {\r\n            var _this = this;\r\n            $LG(window).on(\"keydown.lg.global\" + this.lgId, function (e) {\r\n                if (_this.lgOpened &&\r\n                    _this.settings.escKey === true &&\r\n                    e.keyCode === 27) {\r\n                    e.preventDefault();\r\n                    if (_this.settings.allowMediaOverlap &&\r\n                        _this.outer.hasClass('lg-can-toggle') &&\r\n                        _this.outer.hasClass('lg-components-open')) {\r\n                        _this.outer.removeClass('lg-components-open');\r\n                    }\r\n                    else {\r\n                        _this.closeGallery();\r\n                    }\r\n                }\r\n                if (_this.lgOpened && _this.galleryItems.length > 1) {\r\n                    if (e.keyCode === 37) {\r\n                        e.preventDefault();\r\n                        _this.goToPrevSlide();\r\n                    }\r\n                    if (e.keyCode === 39) {\r\n                        e.preventDefault();\r\n                        _this.goToNextSlide();\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        LightGallery.prototype.arrow = function () {\r\n            var _this = this;\r\n            this.getElementById('lg-prev').on('click.lg', function () {\r\n                _this.goToPrevSlide();\r\n            });\r\n            this.getElementById('lg-next').on('click.lg', function () {\r\n                _this.goToNextSlide();\r\n            });\r\n        };\r\n        LightGallery.prototype.arrowDisable = function (index) {\r\n            // Disable arrows if settings.hideControlOnEnd is true\r\n            if (!this.settings.loop && this.settings.hideControlOnEnd) {\r\n                var $prev = this.getElementById('lg-prev');\r\n                var $next = this.getElementById('lg-next');\r\n                if (index + 1 === this.galleryItems.length) {\r\n                    $next.attr('disabled', 'disabled').addClass('disabled');\r\n                }\r\n                else {\r\n                    $next.removeAttr('disabled').removeClass('disabled');\r\n                }\r\n                if (index === 0) {\r\n                    $prev.attr('disabled', 'disabled').addClass('disabled');\r\n                }\r\n                else {\r\n                    $prev.removeAttr('disabled').removeClass('disabled');\r\n                }\r\n            }\r\n        };\r\n        LightGallery.prototype.setTranslate = function ($el, xValue, yValue, scaleX, scaleY) {\r\n            if (scaleX === void 0) { scaleX = 1; }\r\n            if (scaleY === void 0) { scaleY = 1; }\r\n            $el.css('transform', 'translate3d(' +\r\n                xValue +\r\n                'px, ' +\r\n                yValue +\r\n                'px, 0px) scale3d(' +\r\n                scaleX +\r\n                ', ' +\r\n                scaleY +\r\n                ', 1)');\r\n        };\r\n        LightGallery.prototype.mousewheel = function () {\r\n            var _this = this;\r\n            var lastCall = 0;\r\n            this.outer.on('wheel.lg', function (e) {\r\n                if (!e.deltaY || _this.galleryItems.length < 2) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                var now = new Date().getTime();\r\n                if (now - lastCall < 1000) {\r\n                    return;\r\n                }\r\n                lastCall = now;\r\n                if (e.deltaY > 0) {\r\n                    _this.goToNextSlide();\r\n                }\r\n                else if (e.deltaY < 0) {\r\n                    _this.goToPrevSlide();\r\n                }\r\n            });\r\n        };\r\n        LightGallery.prototype.isSlideElement = function (target) {\r\n            return (target.hasClass('lg-outer') ||\r\n                target.hasClass('lg-item') ||\r\n                target.hasClass('lg-img-wrap'));\r\n        };\r\n        LightGallery.prototype.isPosterElement = function (target) {\r\n            var playButton = this.getSlideItem(this.index)\r\n                .find('.lg-video-play-button')\r\n                .get();\r\n            return (target.hasClass('lg-video-poster') ||\r\n                target.hasClass('lg-video-play-button') ||\r\n                (playButton && playButton.contains(target.get())));\r\n        };\r\n        /**\r\n         * Maximize minimize inline gallery.\r\n         * @category lGPublicMethods\r\n         */\r\n        LightGallery.prototype.toggleMaximize = function () {\r\n            var _this = this;\r\n            this.getElementById('lg-maximize').on('click.lg', function () {\r\n                _this.$container.toggleClass('lg-inline');\r\n                _this.refreshOnResize();\r\n            });\r\n        };\r\n        LightGallery.prototype.invalidateItems = function () {\r\n            for (var index = 0; index < this.items.length; index++) {\r\n                var element = this.items[index];\r\n                var $element = $LG(element);\r\n                $element.off(\"click.lgcustom-item-\" + $element.attr('data-lg-id'));\r\n            }\r\n        };\r\n        LightGallery.prototype.trapFocus = function () {\r\n            var _this = this;\r\n            this.$container.get().focus({\r\n                preventScroll: true,\r\n            });\r\n            $LG(window).on(\"keydown.lg.global\" + this.lgId, function (e) {\r\n                if (!_this.lgOpened) {\r\n                    return;\r\n                }\r\n                var isTabPressed = e.key === 'Tab' || e.keyCode === 9;\r\n                if (!isTabPressed) {\r\n                    return;\r\n                }\r\n                var focusableEls = utils.getFocusableElements(_this.$container.get());\r\n                var firstFocusableEl = focusableEls[0];\r\n                var lastFocusableEl = focusableEls[focusableEls.length - 1];\r\n                if (e.shiftKey) {\r\n                    if (document.activeElement === firstFocusableEl) {\r\n                        lastFocusableEl.focus();\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n                else {\r\n                    if (document.activeElement === lastFocusableEl) {\r\n                        firstFocusableEl.focus();\r\n                        e.preventDefault();\r\n                    }\r\n                }\r\n            });\r\n        };\r\n        LightGallery.prototype.manageCloseGallery = function () {\r\n            var _this = this;\r\n            if (!this.settings.closable)\r\n                return;\r\n            var mousedown = false;\r\n            this.getElementById('lg-close').on('click.lg', function () {\r\n                _this.closeGallery();\r\n            });\r\n            if (this.settings.closeOnTap) {\r\n                // If you drag the slide and release outside gallery gets close on chrome\r\n                // for preventing this check mousedown and mouseup happened on .lg-item or lg-outer\r\n                this.outer.on('mousedown.lg', function (e) {\r\n                    var target = $LG(e.target);\r\n                    if (_this.isSlideElement(target)) {\r\n                        mousedown = true;\r\n                    }\r\n                    else {\r\n                        mousedown = false;\r\n                    }\r\n                });\r\n                this.outer.on('mousemove.lg', function () {\r\n                    mousedown = false;\r\n                });\r\n                this.outer.on('mouseup.lg', function (e) {\r\n                    var target = $LG(e.target);\r\n                    if (_this.isSlideElement(target) && mousedown) {\r\n                        if (!_this.outer.hasClass('lg-dragging')) {\r\n                            _this.closeGallery();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        /**\r\n         * Close lightGallery if it is opened.\r\n         *\r\n         * @description If closable is false in the settings, you need to pass true via closeGallery method to force close gallery\r\n         * @return returns the estimated time to close gallery completely including the close animation duration\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  plugin.closeGallery();\r\n         *\r\n         */\r\n        LightGallery.prototype.closeGallery = function (force) {\r\n            var _this = this;\r\n            if (!this.lgOpened || (!this.settings.closable && !force)) {\r\n                return 0;\r\n            }\r\n            this.LGel.trigger(lGEvents.beforeClose);\r\n            if (this.settings.resetScrollPosition && !this.settings.hideScrollbar) {\r\n                $LG(window).scrollTop(this.prevScrollTop);\r\n            }\r\n            var currentItem = this.items[this.index];\r\n            var transform;\r\n            if (this.zoomFromOrigin && currentItem) {\r\n                var _a = this.mediaContainerPosition, top_4 = _a.top, bottom = _a.bottom;\r\n                var _b = this.galleryItems[this.index], __slideVideoInfo = _b.__slideVideoInfo, poster = _b.poster;\r\n                var imageSize = utils.getSize(currentItem, this.outer, top_4 + bottom, __slideVideoInfo && poster && this.settings.videoMaxSize);\r\n                transform = utils.getTransform(currentItem, this.outer, top_4, bottom, imageSize);\r\n            }\r\n            if (this.zoomFromOrigin && transform) {\r\n                this.outer.addClass('lg-closing lg-zoom-from-image');\r\n                this.getSlideItem(this.index)\r\n                    .addClass('lg-start-end-progress')\r\n                    .css('transition-duration', this.settings.startAnimationDuration + 'ms')\r\n                    .css('transform', transform);\r\n            }\r\n            else {\r\n                this.outer.addClass('lg-hide-items');\r\n                // lg-zoom-from-image is used for setting the opacity to 1 if zoomFromOrigin is true\r\n                // If the closing item doesn't have the lg-size attribute, remove this class to avoid the closing css conflicts\r\n                this.outer.removeClass('lg-zoom-from-image');\r\n            }\r\n            // Unbind all events added by lightGallery\r\n            // @todo\r\n            //this.$el.off('.lg.tm');\r\n            this.destroyModules();\r\n            this.lGalleryOn = false;\r\n            this.isDummyImageRemoved = false;\r\n            this.zoomFromOrigin = this.settings.zoomFromOrigin;\r\n            clearTimeout(this.hideBarTimeout);\r\n            this.hideBarTimeout = false;\r\n            $LG('html').removeClass('lg-on');\r\n            this.outer.removeClass('lg-visible lg-components-open');\r\n            // Resetting opacity to 0 isd required as  vertical swipe to close function adds inline opacity.\r\n            this.$backdrop.removeClass('in').css('opacity', 0);\r\n            var removeTimeout = this.zoomFromOrigin && transform\r\n                ? Math.max(this.settings.startAnimationDuration, this.settings.backdropDuration)\r\n                : this.settings.backdropDuration;\r\n            this.$container.removeClass('lg-show-in');\r\n            // Once the closign animation is completed and gallery is invisible\r\n            setTimeout(function () {\r\n                if (_this.zoomFromOrigin && transform) {\r\n                    _this.outer.removeClass('lg-zoom-from-image');\r\n                }\r\n                _this.$container.removeClass('lg-show');\r\n                // Reset scrollbar\r\n                _this.resetScrollBar();\r\n                // Need to remove inline opacity as it is used in the stylesheet as well\r\n                _this.$backdrop\r\n                    .removeAttr('style')\r\n                    .css('transition-duration', _this.settings.backdropDuration + 'ms');\r\n                _this.outer.removeClass(\"lg-closing \" + _this.settings.startClass);\r\n                _this.getSlideItem(_this.index).removeClass('lg-start-end-progress');\r\n                _this.$inner.empty();\r\n                if (_this.lgOpened) {\r\n                    _this.LGel.trigger(lGEvents.afterClose, {\r\n                        instance: _this,\r\n                    });\r\n                }\r\n                if (_this.$container.get()) {\r\n                    _this.$container.get().blur();\r\n                }\r\n                _this.lgOpened = false;\r\n            }, removeTimeout + 100);\r\n            return removeTimeout + 100;\r\n        };\r\n        LightGallery.prototype.initModules = function () {\r\n            this.plugins.forEach(function (module) {\r\n                try {\r\n                    module.init();\r\n                }\r\n                catch (err) {\r\n                    console.warn(\"lightGallery:- make sure lightGallery module is properly initiated\");\r\n                }\r\n            });\r\n        };\r\n        LightGallery.prototype.destroyModules = function (destroy) {\r\n            this.plugins.forEach(function (module) {\r\n                try {\r\n                    if (destroy) {\r\n                        module.destroy();\r\n                    }\r\n                    else {\r\n                        module.closeGallery && module.closeGallery();\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    console.warn(\"lightGallery:- make sure lightGallery module is properly destroyed\");\r\n                }\r\n            });\r\n        };\r\n        /**\r\n         * Refresh lightGallery with new set of children.\r\n         *\r\n         * @description This is useful to update the gallery when the child elements are changed without calling destroy method.\r\n         *\r\n         * If you are using dynamic mode, you can pass the modified array of dynamicEl as the first parameter to refresh the dynamic gallery\r\n         * @see <a href=\"/demos/dynamic-mode/\">Demo</a>\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  // Delete or add children, then call\r\n         *  plugin.refresh();\r\n         *\r\n         */\r\n        LightGallery.prototype.refresh = function (galleryItems) {\r\n            if (!this.settings.dynamic) {\r\n                this.invalidateItems();\r\n            }\r\n            if (galleryItems) {\r\n                this.galleryItems = galleryItems;\r\n            }\r\n            else {\r\n                this.galleryItems = this.getItems();\r\n            }\r\n            this.updateControls();\r\n            this.openGalleryOnItemClick();\r\n            this.LGel.trigger(lGEvents.updateSlides);\r\n        };\r\n        LightGallery.prototype.updateControls = function () {\r\n            this.addSlideVideoInfo(this.galleryItems);\r\n            this.updateCounterTotal();\r\n            this.manageSingleSlideClassName();\r\n        };\r\n        LightGallery.prototype.destroyGallery = function () {\r\n            this.destroyModules(true);\r\n            if (!this.settings.dynamic) {\r\n                this.invalidateItems();\r\n            }\r\n            $LG(window).off(\".lg.global\" + this.lgId);\r\n            this.LGel.off('.lg');\r\n            this.$container.remove();\r\n        };\r\n        /**\r\n         * Destroy lightGallery.\r\n         * Destroy lightGallery and its plugin instances completely\r\n         *\r\n         * @description This method also calls CloseGallery function internally. Returns the time takes to completely close and destroy the instance.\r\n         * In case if you want to re-initialize lightGallery right after destroying it, initialize it only once the destroy process is completed.\r\n         * You can use refresh method most of the times.\r\n         * @category lGPublicMethods\r\n         * @example\r\n         *  const plugin = lightGallery();\r\n         *  plugin.destroy();\r\n         *\r\n         */\r\n        LightGallery.prototype.destroy = function () {\r\n            var closeTimeout = this.closeGallery(true);\r\n            if (closeTimeout) {\r\n                setTimeout(this.destroyGallery.bind(this), closeTimeout);\r\n            }\r\n            else {\r\n                this.destroyGallery();\r\n            }\r\n            return closeTimeout;\r\n        };\r\n        return LightGallery;\r\n    }());\n\n    function lightGallery(el, options) {\r\n        return new LightGallery(el, options);\r\n    }\n\n    return lightGallery;\n\n})));\n//# sourceMappingURL=lightgallery.umd.js.map\n\n/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lgVideo = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var videoSettings = {\r\n        autoplayFirstVideo: true,\r\n        youTubePlayerParams: false,\r\n        vimeoPlayerParams: false,\r\n        wistiaPlayerParams: false,\r\n        gotoNextSlideOnVideoEnd: true,\r\n        autoplayVideoOnSlide: false,\r\n        videojs: false,\r\n        videojsTheme: '',\r\n        videojsOptions: {},\r\n    };\n\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n        rotateLeft: 'lgRotateLeft',\r\n        rotateRight: 'lgRotateRight',\r\n        flipHorizontal: 'lgFlipHorizontal',\r\n        flipVertical: 'lgFlipVertical',\r\n        autoplay: 'lgAutoplay',\r\n        autoplayStart: 'lgAutoplayStart',\r\n        autoplayStop: 'lgAutoplayStop',\r\n    };\n\n    var param = function (obj) {\r\n        return Object.keys(obj)\r\n            .map(function (k) {\r\n            return encodeURIComponent(k) + '=' + encodeURIComponent(obj[k]);\r\n        })\r\n            .join('&');\r\n    };\r\n    var paramsToObject = function (url) {\r\n        var paramas = url\r\n            .slice(1)\r\n            .split('&')\r\n            .map(function (p) { return p.split('='); })\r\n            .reduce(function (obj, pair) {\r\n            var _a = pair.map(decodeURIComponent), key = _a[0], value = _a[1];\r\n            obj[key] = value;\r\n            return obj;\r\n        }, {});\r\n        return paramas;\r\n    };\r\n    var getYouTubeParams = function (videoInfo, youTubePlayerParamsSettings) {\r\n        if (!videoInfo.youtube)\r\n            return '';\r\n        var slideUrlParams = videoInfo.youtube[2]\r\n            ? paramsToObject(videoInfo.youtube[2])\r\n            : '';\r\n        // For youtube first params gets priority if duplicates found\r\n        var defaultYouTubePlayerParams = {\r\n            wmode: 'opaque',\r\n            autoplay: 0,\r\n            mute: 1,\r\n            enablejsapi: 1,\r\n        };\r\n        var playerParamsSettings = youTubePlayerParamsSettings || {};\r\n        var youTubePlayerParams = __assign(__assign(__assign({}, defaultYouTubePlayerParams), playerParamsSettings), slideUrlParams);\r\n        var youTubeParams = \"?\" + param(youTubePlayerParams);\r\n        return youTubeParams;\r\n    };\r\n    var isYouTubeNoCookie = function (url) {\r\n        return url.includes('youtube-nocookie.com');\r\n    };\r\n    var getVimeoURLParams = function (defaultParams, videoInfo) {\r\n        if (!videoInfo || !videoInfo.vimeo)\r\n            return '';\r\n        var urlParams = videoInfo.vimeo[2] || '';\r\n        var defaultPlayerParams = defaultParams && Object.keys(defaultParams).length !== 0\r\n            ? '&' + param(defaultParams)\r\n            : '';\r\n        // Support private video\r\n        var urlWithHash = videoInfo.vimeo[0].split('/').pop() || '';\r\n        var urlWithHashWithParams = urlWithHash.split('?')[0] || '';\r\n        var hash = urlWithHashWithParams.split('#')[0];\r\n        var isPrivate = videoInfo.vimeo[1] !== hash;\r\n        if (isPrivate) {\r\n            urlParams = urlParams.replace(\"/\" + hash, '');\r\n        }\r\n        urlParams =\r\n            urlParams[0] == '?' ? '&' + urlParams.slice(1) : urlParams || '';\r\n        // For vimeo last params gets priority if duplicates found\r\n        var vimeoPlayerParams = \"?autoplay=0&muted=1\" + (isPrivate ? \"&h=\" + hash : '') + defaultPlayerParams + urlParams;\r\n        return vimeoPlayerParams;\r\n    };\n\n    /**\r\n     * Video module for lightGallery\r\n     * Supports HTML5, YouTube, Vimeo, wistia videos\r\n     *\r\n     *\r\n     * @ref Wistia\r\n     * https://wistia.com/support/integrations/wordpress(How to get url)\r\n     * https://wistia.com/support/developers/embed-options#using-embed-options\r\n     * https://wistia.com/support/developers/player-api\r\n     * https://wistia.com/support/developers/construct-an-embed-code\r\n     * http://jsfiddle.net/xvnm7xLm/\r\n     * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video\r\n     * https://wistia.com/support/embed-and-share/sharing-videos\r\n     * https://private-sharing.wistia.com/medias/mwhrulrucj\r\n     *\r\n     * @ref Youtube\r\n     * https://developers.google.com/youtube/player_parameters#enablejsapi\r\n     * https://developers.google.com/youtube/iframe_api_reference\r\n     * https://developer.chrome.com/blog/autoplay/#iframe-delegation\r\n     *\r\n     * @ref Vimeo\r\n     * https://stackoverflow.com/questions/10488943/easy-way-to-get-vimeo-id-from-a-vimeo-url\r\n     * https://vimeo.zendesk.com/hc/en-us/articles/360000121668-Starting-playback-at-a-specific-timecode\r\n     * https://vimeo.zendesk.com/hc/en-us/articles/360001494447-Using-Player-Parameters\r\n     */\r\n    var Video = /** @class */ (function () {\r\n        function Video(instance) {\r\n            // get lightGallery core plugin instance\r\n            this.core = instance;\r\n            this.settings = __assign(__assign({}, videoSettings), this.core.settings);\r\n            return this;\r\n        }\r\n        Video.prototype.init = function () {\r\n            var _this = this;\r\n            /**\r\n             * Event triggered when video url found without poster\r\n             * Append video HTML\r\n             * Play if autoplayFirstVideo is true\r\n             */\r\n            this.core.LGel.on(lGEvents.hasVideo + \".video\", this.onHasVideo.bind(this));\r\n            this.core.LGel.on(lGEvents.posterClick + \".video\", function () {\r\n                var $el = _this.core.getSlideItem(_this.core.index);\r\n                _this.loadVideoOnPosterClick($el);\r\n            });\r\n            this.core.LGel.on(lGEvents.slideItemLoad + \".video\", this.onSlideItemLoad.bind(this));\r\n            // @desc fired immediately before each slide transition.\r\n            this.core.LGel.on(lGEvents.beforeSlide + \".video\", this.onBeforeSlide.bind(this));\r\n            // @desc fired immediately after each slide transition.\r\n            this.core.LGel.on(lGEvents.afterSlide + \".video\", this.onAfterSlide.bind(this));\r\n        };\r\n        /**\r\n         * @desc Event triggered when a slide is completely loaded\r\n         *\r\n         * @param {Event} event - lightGalley custom event\r\n         */\r\n        Video.prototype.onSlideItemLoad = function (event) {\r\n            var _this = this;\r\n            var _a = event.detail, isFirstSlide = _a.isFirstSlide, index = _a.index;\r\n            // Should check the active slide as well as user may have moved to different slide before the first slide is loaded\r\n            if (this.settings.autoplayFirstVideo &&\r\n                isFirstSlide &&\r\n                index === this.core.index) {\r\n                // Delay is just for the transition effect on video load\r\n                setTimeout(function () {\r\n                    _this.loadAndPlayVideo(index);\r\n                }, 200);\r\n            }\r\n            // Should not call on first slide. should check only if the slide is active\r\n            if (!isFirstSlide &&\r\n                this.settings.autoplayVideoOnSlide &&\r\n                index === this.core.index) {\r\n                this.loadAndPlayVideo(index);\r\n            }\r\n        };\r\n        /**\r\n         * @desc Event triggered when video url or poster found\r\n         * Append video HTML is poster is not given\r\n         * Play if autoplayFirstVideo is true\r\n         *\r\n         * @param {Event} event - Javascript Event object.\r\n         */\r\n        Video.prototype.onHasVideo = function (event) {\r\n            var _a = event.detail, index = _a.index, src = _a.src, html5Video = _a.html5Video, hasPoster = _a.hasPoster;\r\n            if (!hasPoster) {\r\n                // All functions are called separately if poster exist in loadVideoOnPosterClick function\r\n                this.appendVideos(this.core.getSlideItem(index), {\r\n                    src: src,\r\n                    addClass: 'lg-object',\r\n                    index: index,\r\n                    html5Video: html5Video,\r\n                });\r\n                // Automatically navigate to next slide once video reaches the end.\r\n                this.gotoNextSlideOnVideoEnd(src, index);\r\n            }\r\n        };\r\n        /**\r\n         * @desc fired immediately before each slide transition.\r\n         * Pause the previous video\r\n         * Hide the download button if the slide contains YouTube, Vimeo, or Wistia videos.\r\n         *\r\n         * @param {Event} event - Javascript Event object.\r\n         * @param {number} prevIndex - Previous index of the slide.\r\n         * @param {number} index - Current index of the slide\r\n         */\r\n        Video.prototype.onBeforeSlide = function (event) {\r\n            if (this.core.lGalleryOn) {\r\n                var prevIndex = event.detail.prevIndex;\r\n                this.pauseVideo(prevIndex);\r\n            }\r\n        };\r\n        /**\r\n         * @desc fired immediately after each slide transition.\r\n         * Play video if autoplayVideoOnSlide option is enabled.\r\n         *\r\n         * @param {Event} event - Javascript Event object.\r\n         * @param {number} prevIndex - Previous index of the slide.\r\n         * @param {number} index - Current index of the slide\r\n         * @todo should check on onSlideLoad as well if video is not loaded on after slide\r\n         */\r\n        Video.prototype.onAfterSlide = function (event) {\r\n            var _this = this;\r\n            var _a = event.detail, index = _a.index, prevIndex = _a.prevIndex;\r\n            // Do not call on first slide\r\n            var $slide = this.core.getSlideItem(index);\r\n            if (this.settings.autoplayVideoOnSlide && index !== prevIndex) {\r\n                if ($slide.hasClass('lg-complete')) {\r\n                    setTimeout(function () {\r\n                        _this.loadAndPlayVideo(index);\r\n                    }, 100);\r\n                }\r\n            }\r\n        };\r\n        Video.prototype.loadAndPlayVideo = function (index) {\r\n            var $slide = this.core.getSlideItem(index);\r\n            var currentGalleryItem = this.core.galleryItems[index];\r\n            if (currentGalleryItem.poster) {\r\n                this.loadVideoOnPosterClick($slide, true);\r\n            }\r\n            else {\r\n                this.playVideo(index);\r\n            }\r\n        };\r\n        /**\r\n         * Play HTML5, Youtube, Vimeo or Wistia videos in a particular slide.\r\n         * @param {number} index - Index of the slide\r\n         */\r\n        Video.prototype.playVideo = function (index) {\r\n            this.controlVideo(index, 'play');\r\n        };\r\n        /**\r\n         * Pause HTML5, Youtube, Vimeo or Wistia videos in a particular slide.\r\n         * @param {number} index - Index of the slide\r\n         */\r\n        Video.prototype.pauseVideo = function (index) {\r\n            this.controlVideo(index, 'pause');\r\n        };\r\n        Video.prototype.getVideoHtml = function (src, addClass, index, html5Video) {\r\n            var video = '';\r\n            var videoInfo = this.core.galleryItems[index]\r\n                .__slideVideoInfo || {};\r\n            var currentGalleryItem = this.core.galleryItems[index];\r\n            var videoTitle = currentGalleryItem.title || currentGalleryItem.alt;\r\n            videoTitle = videoTitle ? 'title=\"' + videoTitle + '\"' : '';\r\n            var commonIframeProps = \"allowtransparency=\\\"true\\\"\\n            frameborder=\\\"0\\\"\\n            scrolling=\\\"no\\\"\\n            allowfullscreen\\n            mozallowfullscreen\\n            webkitallowfullscreen\\n            oallowfullscreen\\n            msallowfullscreen\";\r\n            if (videoInfo.youtube) {\r\n                var videoId = 'lg-youtube' + index;\r\n                var youTubeParams = getYouTubeParams(videoInfo, this.settings.youTubePlayerParams);\r\n                var isYouTubeNoCookieURL = isYouTubeNoCookie(src);\r\n                var youtubeURL = isYouTubeNoCookieURL\r\n                    ? '//www.youtube-nocookie.com/'\r\n                    : '//www.youtube.com/';\r\n                video = \"<iframe allow=\\\"autoplay\\\" id=\" + videoId + \" class=\\\"lg-video-object lg-youtube \" + addClass + \"\\\" \" + videoTitle + \" src=\\\"\" + youtubeURL + \"embed/\" + (videoInfo.youtube[1] + youTubeParams) + \"\\\" \" + commonIframeProps + \"></iframe>\";\r\n            }\r\n            else if (videoInfo.vimeo) {\r\n                var videoId = 'lg-vimeo' + index;\r\n                var playerParams = getVimeoURLParams(this.settings.vimeoPlayerParams, videoInfo);\r\n                video = \"<iframe allow=\\\"autoplay\\\" id=\" + videoId + \" class=\\\"lg-video-object lg-vimeo \" + addClass + \"\\\" \" + videoTitle + \" src=\\\"//player.vimeo.com/video/\" + (videoInfo.vimeo[1] + playerParams) + \"\\\" \" + commonIframeProps + \"></iframe>\";\r\n            }\r\n            else if (videoInfo.wistia) {\r\n                var wistiaId = 'lg-wistia' + index;\r\n                var playerParams = param(this.settings.wistiaPlayerParams);\r\n                playerParams = playerParams ? '?' + playerParams : '';\r\n                video = \"<iframe allow=\\\"autoplay\\\" id=\\\"\" + wistiaId + \"\\\" src=\\\"//fast.wistia.net/embed/iframe/\" + (videoInfo.wistia[4] + playerParams) + \"\\\" \" + videoTitle + \" class=\\\"wistia_embed lg-video-object lg-wistia \" + addClass + \"\\\" name=\\\"wistia_embed\\\" \" + commonIframeProps + \"></iframe>\";\r\n            }\r\n            else if (videoInfo.html5) {\r\n                var html5VideoMarkup = '';\r\n                for (var i = 0; i < html5Video.source.length; i++) {\r\n                    html5VideoMarkup += \"<source src=\\\"\" + html5Video.source[i].src + \"\\\" type=\\\"\" + html5Video.source[i].type + \"\\\">\";\r\n                }\r\n                if (html5Video.tracks) {\r\n                    var _loop_1 = function (i) {\r\n                        var trackAttributes = '';\r\n                        var track = html5Video.tracks[i];\r\n                        Object.keys(track || {}).forEach(function (key) {\r\n                            trackAttributes += key + \"=\\\"\" + track[key] + \"\\\" \";\r\n                        });\r\n                        html5VideoMarkup += \"<track \" + trackAttributes + \">\";\r\n                    };\r\n                    for (var i = 0; i < html5Video.tracks.length; i++) {\r\n                        _loop_1(i);\r\n                    }\r\n                }\r\n                var html5VideoAttrs_1 = '';\r\n                var videoAttributes_1 = html5Video.attributes || {};\r\n                Object.keys(videoAttributes_1 || {}).forEach(function (key) {\r\n                    html5VideoAttrs_1 += key + \"=\\\"\" + videoAttributes_1[key] + \"\\\" \";\r\n                });\r\n                video = \"<video class=\\\"lg-video-object lg-html5 \" + (this.settings.videojs && this.settings.videojsTheme\r\n                    ? this.settings.videojsTheme + ' '\r\n                    : '') + \" \" + (this.settings.videojs ? ' video-js' : '') + \"\\\" \" + html5VideoAttrs_1 + \">\\n                \" + html5VideoMarkup + \"\\n                Your browser does not support HTML5 video.\\n            </video>\";\r\n            }\r\n            return video;\r\n        };\r\n        /**\r\n         * @desc - Append videos to the slide\r\n         *\r\n         * @param {HTMLElement} el - slide element\r\n         * @param {Object} videoParams - Video parameters, Contains src, class, index, htmlVideo\r\n         */\r\n        Video.prototype.appendVideos = function (el, videoParams) {\r\n            var _a;\r\n            var videoHtml = this.getVideoHtml(videoParams.src, videoParams.addClass, videoParams.index, videoParams.html5Video);\r\n            el.find('.lg-video-cont').append(videoHtml);\r\n            var $videoElement = el.find('.lg-video-object').first();\r\n            if (videoParams.html5Video) {\r\n                $videoElement.on('mousedown.lg.video', function (e) {\r\n                    e.stopPropagation();\r\n                });\r\n            }\r\n            if (this.settings.videojs && ((_a = this.core.galleryItems[videoParams.index].__slideVideoInfo) === null || _a === void 0 ? void 0 : _a.html5)) {\r\n                try {\r\n                    return videojs($videoElement.get(), this.settings.videojsOptions);\r\n                }\r\n                catch (e) {\r\n                    console.error('lightGallery:- Make sure you have included videojs');\r\n                }\r\n            }\r\n        };\r\n        Video.prototype.gotoNextSlideOnVideoEnd = function (src, index) {\r\n            var _this = this;\r\n            var $videoElement = this.core\r\n                .getSlideItem(index)\r\n                .find('.lg-video-object')\r\n                .first();\r\n            var videoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\r\n            if (this.settings.gotoNextSlideOnVideoEnd) {\r\n                if (videoInfo.html5) {\r\n                    $videoElement.on('ended', function () {\r\n                        _this.core.goToNextSlide();\r\n                    });\r\n                }\r\n                else if (videoInfo.vimeo) {\r\n                    try {\r\n                        // https://github.com/vimeo/player.js/#ended\r\n                        new Vimeo.Player($videoElement.get()).on('ended', function () {\r\n                            _this.core.goToNextSlide();\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        console.error('lightGallery:- Make sure you have included //github.com/vimeo/player.js');\r\n                    }\r\n                }\r\n                else if (videoInfo.wistia) {\r\n                    try {\r\n                        window._wq = window._wq || [];\r\n                        // @todo Event is gettign triggered multiple times\r\n                        window._wq.push({\r\n                            id: $videoElement.attr('id'),\r\n                            onReady: function (video) {\r\n                                video.bind('end', function () {\r\n                                    _this.core.goToNextSlide();\r\n                                });\r\n                            },\r\n                        });\r\n                    }\r\n                    catch (e) {\r\n                        console.error('lightGallery:- Make sure you have included //fast.wistia.com/assets/external/E-v1.js');\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        Video.prototype.controlVideo = function (index, action) {\r\n            var $videoElement = this.core\r\n                .getSlideItem(index)\r\n                .find('.lg-video-object')\r\n                .first();\r\n            var videoInfo = this.core.galleryItems[index].__slideVideoInfo || {};\r\n            if (!$videoElement.get())\r\n                return;\r\n            if (videoInfo.youtube) {\r\n                try {\r\n                    $videoElement.get().contentWindow.postMessage(\"{\\\"event\\\":\\\"command\\\",\\\"func\\\":\\\"\" + action + \"Video\\\",\\\"args\\\":\\\"\\\"}\", '*');\r\n                }\r\n                catch (e) {\r\n                    console.error(\"lightGallery:- \" + e);\r\n                }\r\n            }\r\n            else if (videoInfo.vimeo) {\r\n                try {\r\n                    new Vimeo.Player($videoElement.get())[action]();\r\n                }\r\n                catch (e) {\r\n                    console.error('lightGallery:- Make sure you have included //github.com/vimeo/player.js');\r\n                }\r\n            }\r\n            else if (videoInfo.html5) {\r\n                if (this.settings.videojs) {\r\n                    try {\r\n                        videojs($videoElement.get())[action]();\r\n                    }\r\n                    catch (e) {\r\n                        console.error('lightGallery:- Make sure you have included videojs');\r\n                    }\r\n                }\r\n                else {\r\n                    $videoElement.get()[action]();\r\n                }\r\n            }\r\n            else if (videoInfo.wistia) {\r\n                try {\r\n                    window._wq = window._wq || [];\r\n                    // @todo Find a way to destroy wistia player instance\r\n                    window._wq.push({\r\n                        id: $videoElement.attr('id'),\r\n                        onReady: function (video) {\r\n                            video[action]();\r\n                        },\r\n                    });\r\n                }\r\n                catch (e) {\r\n                    console.error('lightGallery:- Make sure you have included //fast.wistia.com/assets/external/E-v1.js');\r\n                }\r\n            }\r\n        };\r\n        Video.prototype.loadVideoOnPosterClick = function ($el, forcePlay) {\r\n            var _this = this;\r\n            // check slide has poster\r\n            if (!$el.hasClass('lg-video-loaded')) {\r\n                // check already video element present\r\n                if (!$el.hasClass('lg-has-video')) {\r\n                    $el.addClass('lg-has-video');\r\n                    var _html = void 0;\r\n                    var _src = this.core.galleryItems[this.core.index].src;\r\n                    var video = this.core.galleryItems[this.core.index].video;\r\n                    if (video) {\r\n                        _html =\r\n                            typeof video === 'string' ? JSON.parse(video) : video;\r\n                    }\r\n                    var videoJsPlayer_1 = this.appendVideos($el, {\r\n                        src: _src,\r\n                        addClass: '',\r\n                        index: this.core.index,\r\n                        html5Video: _html,\r\n                    });\r\n                    this.gotoNextSlideOnVideoEnd(_src, this.core.index);\r\n                    var $tempImg = $el.find('.lg-object').first().get();\r\n                    // @todo make sure it is working\r\n                    $el.find('.lg-video-cont').first().append($tempImg);\r\n                    $el.addClass('lg-video-loading');\r\n                    videoJsPlayer_1 &&\r\n                        videoJsPlayer_1.ready(function () {\r\n                            videoJsPlayer_1.on('loadedmetadata', function () {\r\n                                _this.onVideoLoadAfterPosterClick($el, _this.core.index);\r\n                            });\r\n                        });\r\n                    $el.find('.lg-video-object')\r\n                        .first()\r\n                        .on('load.lg error.lg loadedmetadata.lg', function () {\r\n                        setTimeout(function () {\r\n                            _this.onVideoLoadAfterPosterClick($el, _this.core.index);\r\n                        }, 50);\r\n                    });\r\n                }\r\n                else {\r\n                    this.playVideo(this.core.index);\r\n                }\r\n            }\r\n            else if (forcePlay) {\r\n                this.playVideo(this.core.index);\r\n            }\r\n        };\r\n        Video.prototype.onVideoLoadAfterPosterClick = function ($el, index) {\r\n            $el.addClass('lg-video-loaded');\r\n            this.playVideo(index);\r\n        };\r\n        Video.prototype.destroy = function () {\r\n            this.core.LGel.off('.lg.video');\r\n            this.core.LGel.off('.video');\r\n        };\r\n        return Video;\r\n    }());\n\n    return Video;\n\n})));\n//# sourceMappingURL=lg-video.umd.js.map\n\n/*!\n * lightgallery | 2.7.2 | September 20th 2023\n * http://www.lightgalleryjs.com/\n * Copyright (c) 2020 Sachin Neravath;\n * @license GPLv3\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.lgZoom = factory());\n}(this, (function () { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation.\r\n\r\n    Permission to use, copy, modify, and/or distribute this software for any\r\n    purpose with or without fee is hereby granted.\r\n\r\n    THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\n    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\n    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\n    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\n    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\n    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\n    PERFORMANCE OF THIS SOFTWARE.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var zoomSettings = {\r\n        scale: 1,\r\n        zoom: true,\r\n        infiniteZoom: true,\r\n        actualSize: true,\r\n        showZoomInOutIcons: false,\r\n        actualSizeIcons: {\r\n            zoomIn: 'lg-zoom-in',\r\n            zoomOut: 'lg-zoom-out',\r\n        },\r\n        enableZoomAfter: 300,\r\n        zoomPluginStrings: {\r\n            zoomIn: 'Zoom in',\r\n            zoomOut: 'Zoom out',\r\n            viewActualSize: 'View actual size',\r\n        },\r\n    };\n\n    /**\r\n     * List of lightGallery events\r\n     * All events should be documented here\r\n     * Below interfaces are used to build the website documentations\r\n     * */\r\n    var lGEvents = {\r\n        afterAppendSlide: 'lgAfterAppendSlide',\r\n        init: 'lgInit',\r\n        hasVideo: 'lgHasVideo',\r\n        containerResize: 'lgContainerResize',\r\n        updateSlides: 'lgUpdateSlides',\r\n        afterAppendSubHtml: 'lgAfterAppendSubHtml',\r\n        beforeOpen: 'lgBeforeOpen',\r\n        afterOpen: 'lgAfterOpen',\r\n        slideItemLoad: 'lgSlideItemLoad',\r\n        beforeSlide: 'lgBeforeSlide',\r\n        afterSlide: 'lgAfterSlide',\r\n        posterClick: 'lgPosterClick',\r\n        dragStart: 'lgDragStart',\r\n        dragMove: 'lgDragMove',\r\n        dragEnd: 'lgDragEnd',\r\n        beforeNextSlide: 'lgBeforeNextSlide',\r\n        beforePrevSlide: 'lgBeforePrevSlide',\r\n        beforeClose: 'lgBeforeClose',\r\n        afterClose: 'lgAfterClose',\r\n        rotateLeft: 'lgRotateLeft',\r\n        rotateRight: 'lgRotateRight',\r\n        flipHorizontal: 'lgFlipHorizontal',\r\n        flipVertical: 'lgFlipVertical',\r\n        autoplay: 'lgAutoplay',\r\n        autoplayStart: 'lgAutoplayStart',\r\n        autoplayStop: 'lgAutoplayStop',\r\n    };\n\n    var ZOOM_TRANSITION_DURATION = 500;\r\n    var Zoom = /** @class */ (function () {\r\n        function Zoom(instance, $LG) {\r\n            // get lightGallery core plugin instance\r\n            this.core = instance;\r\n            this.$LG = $LG;\r\n            this.settings = __assign(__assign({}, zoomSettings), this.core.settings);\r\n            return this;\r\n        }\r\n        // Append Zoom controls. Actual size, Zoom-in, Zoom-out\r\n        Zoom.prototype.buildTemplates = function () {\r\n            var zoomIcons = this.settings.showZoomInOutIcons\r\n                ? \"<button id=\\\"\" + this.core.getIdName('lg-zoom-in') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-in lg-icon\\\"></button><button id=\\\"\" + this.core.getIdName('lg-zoom-out') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['zoomIn'] + \"\\\" class=\\\"lg-zoom-out lg-icon\\\"></button>\"\r\n                : '';\r\n            if (this.settings.actualSize) {\r\n                zoomIcons += \"<button id=\\\"\" + this.core.getIdName('lg-actual-size') + \"\\\" type=\\\"button\\\" aria-label=\\\"\" + this.settings.zoomPluginStrings['viewActualSize'] + \"\\\" class=\\\"\" + this.settings.actualSizeIcons.zoomIn + \" lg-icon\\\"></button>\";\r\n            }\r\n            this.core.outer.addClass('lg-use-transition-for-zoom');\r\n            this.core.$toolbar.first().append(zoomIcons);\r\n        };\r\n        /**\r\n         * @desc Enable zoom option only once the image is completely loaded\r\n         * If zoomFromOrigin is true, Zoom is enabled once the dummy image has been inserted\r\n         *\r\n         * Zoom styles are defined under lg-zoomable CSS class.\r\n         */\r\n        Zoom.prototype.enableZoom = function (event) {\r\n            var _this = this;\r\n            // delay will be 0 except first time\r\n            var _speed = this.settings.enableZoomAfter + event.detail.delay;\r\n            // set _speed value 0 if gallery opened from direct url and if it is first slide\r\n            if (this.$LG('body').first().hasClass('lg-from-hash') &&\r\n                event.detail.delay) {\r\n                // will execute only once\r\n                _speed = 0;\r\n            }\r\n            else {\r\n                // Remove lg-from-hash to enable starting animation.\r\n                this.$LG('body').first().removeClass('lg-from-hash');\r\n            }\r\n            this.zoomableTimeout = setTimeout(function () {\r\n                if (!_this.isImageSlide(_this.core.index)) {\r\n                    return;\r\n                }\r\n                _this.core.getSlideItem(event.detail.index).addClass('lg-zoomable');\r\n                if (event.detail.index === _this.core.index) {\r\n                    _this.setZoomEssentials();\r\n                }\r\n            }, _speed + 30);\r\n        };\r\n        Zoom.prototype.enableZoomOnSlideItemLoad = function () {\r\n            // Add zoomable class\r\n            this.core.LGel.on(lGEvents.slideItemLoad + \".zoom\", this.enableZoom.bind(this));\r\n        };\r\n        Zoom.prototype.getDragCords = function (e) {\r\n            return {\r\n                x: e.pageX,\r\n                y: e.pageY,\r\n            };\r\n        };\r\n        Zoom.prototype.getSwipeCords = function (e) {\r\n            var x = e.touches[0].pageX;\r\n            var y = e.touches[0].pageY;\r\n            return {\r\n                x: x,\r\n                y: y,\r\n            };\r\n        };\r\n        Zoom.prototype.getDragAllowedAxises = function (scale, scaleDiff) {\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-image')\r\n                .first()\r\n                .get();\r\n            var height = 0;\r\n            var width = 0;\r\n            var rect = $image.getBoundingClientRect();\r\n            if (scale) {\r\n                height = $image.offsetHeight * scale;\r\n                width = $image.offsetWidth * scale;\r\n            }\r\n            else if (scaleDiff) {\r\n                height = rect.height + scaleDiff * rect.height;\r\n                width = rect.width + scaleDiff * rect.width;\r\n            }\r\n            else {\r\n                height = rect.height;\r\n                width = rect.width;\r\n            }\r\n            var allowY = height > this.containerRect.height;\r\n            var allowX = width > this.containerRect.width;\r\n            return {\r\n                allowX: allowX,\r\n                allowY: allowY,\r\n            };\r\n        };\r\n        Zoom.prototype.setZoomEssentials = function () {\r\n            this.containerRect = this.core.$content.get().getBoundingClientRect();\r\n        };\r\n        /**\r\n         * @desc Image zoom\r\n         * Translate the wrap and scale the image to get better user experience\r\n         *\r\n         * @param {String} scale - Zoom decrement/increment value\r\n         */\r\n        Zoom.prototype.zoomImage = function (scale, scaleDiff, reposition, resetToMax) {\r\n            if (Math.abs(scaleDiff) <= 0)\r\n                return;\r\n            var offsetX = this.containerRect.width / 2 + this.containerRect.left;\r\n            var offsetY = this.containerRect.height / 2 +\r\n                this.containerRect.top +\r\n                this.scrollTop;\r\n            var originalX;\r\n            var originalY;\r\n            if (scale === 1) {\r\n                this.positionChanged = false;\r\n            }\r\n            var dragAllowedAxises = this.getDragAllowedAxises(0, scaleDiff);\r\n            var allowY = dragAllowedAxises.allowY, allowX = dragAllowedAxises.allowX;\r\n            if (this.positionChanged) {\r\n                originalX = this.left / (this.scale - scaleDiff);\r\n                originalY = this.top / (this.scale - scaleDiff);\r\n                this.pageX = offsetX - originalX;\r\n                this.pageY = offsetY - originalY;\r\n                this.positionChanged = false;\r\n            }\r\n            var possibleSwipeCords = this.getPossibleSwipeDragCords(scaleDiff);\r\n            var x;\r\n            var y;\r\n            var _x = offsetX - this.pageX;\r\n            var _y = offsetY - this.pageY;\r\n            if (scale - scaleDiff > 1) {\r\n                var scaleVal = (scale - scaleDiff) / Math.abs(scaleDiff);\r\n                _x =\r\n                    (scaleDiff < 0 ? -_x : _x) +\r\n                        this.left * (scaleVal + (scaleDiff < 0 ? -1 : 1));\r\n                _y =\r\n                    (scaleDiff < 0 ? -_y : _y) +\r\n                        this.top * (scaleVal + (scaleDiff < 0 ? -1 : 1));\r\n                x = _x / scaleVal;\r\n                y = _y / scaleVal;\r\n            }\r\n            else {\r\n                var scaleVal = (scale - scaleDiff) * scaleDiff;\r\n                x = _x * scaleVal;\r\n                y = _y * scaleVal;\r\n            }\r\n            if (reposition) {\r\n                if (allowX) {\r\n                    if (this.isBeyondPossibleLeft(x, possibleSwipeCords.minX)) {\r\n                        x = possibleSwipeCords.minX;\r\n                    }\r\n                    else if (this.isBeyondPossibleRight(x, possibleSwipeCords.maxX)) {\r\n                        x = possibleSwipeCords.maxX;\r\n                    }\r\n                }\r\n                else {\r\n                    if (scale > 1) {\r\n                        if (x < possibleSwipeCords.minX) {\r\n                            x = possibleSwipeCords.minX;\r\n                        }\r\n                        else if (x > possibleSwipeCords.maxX) {\r\n                            x = possibleSwipeCords.maxX;\r\n                        }\r\n                    }\r\n                }\r\n                // @todo fix this\r\n                if (allowY) {\r\n                    if (this.isBeyondPossibleTop(y, possibleSwipeCords.minY)) {\r\n                        y = possibleSwipeCords.minY;\r\n                    }\r\n                    else if (this.isBeyondPossibleBottom(y, possibleSwipeCords.maxY)) {\r\n                        y = possibleSwipeCords.maxY;\r\n                    }\r\n                }\r\n                else {\r\n                    // If the translate value based on index of beyond the viewport, utilize the available space to prevent image being cut out\r\n                    if (scale > 1) {\r\n                        //If image goes beyond viewport top, use the minim possible translate value\r\n                        if (y < possibleSwipeCords.minY) {\r\n                            y = possibleSwipeCords.minY;\r\n                        }\r\n                        else if (y > possibleSwipeCords.maxY) {\r\n                            y = possibleSwipeCords.maxY;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            this.setZoomStyles({\r\n                x: x,\r\n                y: y,\r\n                scale: scale,\r\n            });\r\n            this.left = x;\r\n            this.top = y;\r\n            if (resetToMax) {\r\n                this.setZoomImageSize();\r\n            }\r\n        };\r\n        Zoom.prototype.resetImageTranslate = function (index) {\r\n            if (!this.isImageSlide(index)) {\r\n                return;\r\n            }\r\n            var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n            this.imageReset = false;\r\n            $image.removeClass('reset-transition reset-transition-y reset-transition-x');\r\n            this.core.outer.removeClass('lg-actual-size');\r\n            $image.css('width', 'auto').css('height', 'auto');\r\n            setTimeout(function () {\r\n                $image.removeClass('no-transition');\r\n            }, 10);\r\n        };\r\n        Zoom.prototype.setZoomImageSize = function () {\r\n            var _this = this;\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-image')\r\n                .first();\r\n            setTimeout(function () {\r\n                var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n                if (_this.scale >= actualSizeScale) {\r\n                    $image.addClass('no-transition');\r\n                    _this.imageReset = true;\r\n                }\r\n            }, ZOOM_TRANSITION_DURATION);\r\n            setTimeout(function () {\r\n                var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n                if (_this.scale >= actualSizeScale) {\r\n                    var dragAllowedAxises = _this.getDragAllowedAxises(_this.scale);\r\n                    $image\r\n                        .css('width', $image.get().naturalWidth + 'px')\r\n                        .css('height', $image.get().naturalHeight + 'px');\r\n                    _this.core.outer.addClass('lg-actual-size');\r\n                    if (dragAllowedAxises.allowX && dragAllowedAxises.allowY) {\r\n                        $image.addClass('reset-transition');\r\n                    }\r\n                    else if (dragAllowedAxises.allowX &&\r\n                        !dragAllowedAxises.allowY) {\r\n                        $image.addClass('reset-transition-x');\r\n                    }\r\n                    else if (!dragAllowedAxises.allowX &&\r\n                        dragAllowedAxises.allowY) {\r\n                        $image.addClass('reset-transition-y');\r\n                    }\r\n                }\r\n            }, ZOOM_TRANSITION_DURATION + 50);\r\n        };\r\n        /**\r\n         * @desc apply scale3d to image and translate to image wrap\r\n         * @param {style} X,Y and scale\r\n         */\r\n        Zoom.prototype.setZoomStyles = function (style) {\r\n            var $imageWrap = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-img-wrap')\r\n                .first();\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-image')\r\n                .first();\r\n            var $dummyImage = this.core.outer\r\n                .find('.lg-current .lg-dummy-img')\r\n                .first();\r\n            this.scale = style.scale;\r\n            $image.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n            $dummyImage.css('transform', 'scale3d(' + style.scale + ', ' + style.scale + ', 1)');\r\n            var transform = 'translate3d(' + style.x + 'px, ' + style.y + 'px, 0)';\r\n            $imageWrap.css('transform', transform);\r\n        };\r\n        /**\r\n         * @param index - Index of the current slide\r\n         * @param event - event will be available only if the function is called on clicking/taping the imags\r\n         */\r\n        Zoom.prototype.setActualSize = function (index, event) {\r\n            var _this = this;\r\n            if (this.zoomInProgress) {\r\n                return;\r\n            }\r\n            this.zoomInProgress = true;\r\n            var currentItem = this.core.galleryItems[this.core.index];\r\n            this.resetImageTranslate(index);\r\n            setTimeout(function () {\r\n                // Allow zoom only on image\r\n                if (!currentItem.src ||\r\n                    _this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                    return;\r\n                }\r\n                var scale = _this.getCurrentImageActualSizeScale();\r\n                var prevScale = _this.scale;\r\n                if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                    _this.scale = 1;\r\n                }\r\n                else {\r\n                    _this.scale = _this.getScale(scale);\r\n                }\r\n                _this.setPageCords(event);\r\n                _this.beginZoom(_this.scale);\r\n                _this.zoomImage(_this.scale, _this.scale - prevScale, true, true);\r\n            }, 50);\r\n            setTimeout(function () {\r\n                _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n            }, 60);\r\n            setTimeout(function () {\r\n                _this.zoomInProgress = false;\r\n            }, ZOOM_TRANSITION_DURATION + 110);\r\n        };\r\n        Zoom.prototype.getNaturalWidth = function (index) {\r\n            var $image = this.core.getSlideItem(index).find('.lg-image').first();\r\n            var naturalWidth = this.core.galleryItems[index].width;\r\n            return naturalWidth\r\n                ? parseFloat(naturalWidth)\r\n                : $image.get().naturalWidth;\r\n        };\r\n        Zoom.prototype.getActualSizeScale = function (naturalWidth, width) {\r\n            var _scale;\r\n            var scale;\r\n            if (naturalWidth >= width) {\r\n                _scale = naturalWidth / width;\r\n                scale = _scale || 2;\r\n            }\r\n            else {\r\n                scale = 1;\r\n            }\r\n            return scale;\r\n        };\r\n        Zoom.prototype.getCurrentImageActualSizeScale = function () {\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-image')\r\n                .first();\r\n            var width = $image.get().offsetWidth;\r\n            var naturalWidth = this.getNaturalWidth(this.core.index) || width;\r\n            return this.getActualSizeScale(naturalWidth, width);\r\n        };\r\n        Zoom.prototype.getPageCords = function (event) {\r\n            var cords = {};\r\n            if (event) {\r\n                cords.x = event.pageX || event.touches[0].pageX;\r\n                cords.y = event.pageY || event.touches[0].pageY;\r\n            }\r\n            else {\r\n                var containerRect = this.core.$content\r\n                    .get()\r\n                    .getBoundingClientRect();\r\n                cords.x = containerRect.width / 2 + containerRect.left;\r\n                cords.y =\r\n                    containerRect.height / 2 + this.scrollTop + containerRect.top;\r\n            }\r\n            return cords;\r\n        };\r\n        Zoom.prototype.setPageCords = function (event) {\r\n            var pageCords = this.getPageCords(event);\r\n            this.pageX = pageCords.x;\r\n            this.pageY = pageCords.y;\r\n        };\r\n        Zoom.prototype.manageActualPixelClassNames = function () {\r\n            var $actualSize = this.core.getElementById('lg-actual-size');\r\n            $actualSize\r\n                .removeClass(this.settings.actualSizeIcons.zoomIn)\r\n                .addClass(this.settings.actualSizeIcons.zoomOut);\r\n        };\r\n        // If true, zoomed - in else zoomed out\r\n        Zoom.prototype.beginZoom = function (scale) {\r\n            this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n            if (scale > 1) {\r\n                this.core.outer.addClass('lg-zoomed');\r\n                this.manageActualPixelClassNames();\r\n            }\r\n            else {\r\n                this.resetZoom();\r\n            }\r\n            return scale > 1;\r\n        };\r\n        Zoom.prototype.getScale = function (scale) {\r\n            var actualSizeScale = this.getCurrentImageActualSizeScale();\r\n            if (scale < 1) {\r\n                scale = 1;\r\n            }\r\n            else if (scale > actualSizeScale) {\r\n                scale = actualSizeScale;\r\n            }\r\n            return scale;\r\n        };\r\n        Zoom.prototype.init = function () {\r\n            var _this = this;\r\n            if (!this.settings.zoom) {\r\n                return;\r\n            }\r\n            this.buildTemplates();\r\n            this.enableZoomOnSlideItemLoad();\r\n            var tapped = null;\r\n            this.core.outer.on('dblclick.lg', function (event) {\r\n                if (!_this.$LG(event.target).hasClass('lg-image')) {\r\n                    return;\r\n                }\r\n                _this.setActualSize(_this.core.index, event);\r\n            });\r\n            this.core.outer.on('touchstart.lg', function (event) {\r\n                var $target = _this.$LG(event.target);\r\n                if (event.touches.length === 1 && $target.hasClass('lg-image')) {\r\n                    if (!tapped) {\r\n                        tapped = setTimeout(function () {\r\n                            tapped = null;\r\n                        }, 300);\r\n                    }\r\n                    else {\r\n                        clearTimeout(tapped);\r\n                        tapped = null;\r\n                        event.preventDefault();\r\n                        _this.setActualSize(_this.core.index, event);\r\n                    }\r\n                }\r\n            });\r\n            this.core.LGel.on(lGEvents.containerResize + \".zoom \" + lGEvents.rotateRight + \".zoom \" + lGEvents.rotateLeft + \".zoom \" + lGEvents.flipHorizontal + \".zoom \" + lGEvents.flipVertical + \".zoom\", function () {\r\n                if (!_this.core.lgOpened ||\r\n                    !_this.isImageSlide(_this.core.index) ||\r\n                    _this.core.touchAction) {\r\n                    return;\r\n                }\r\n                var _LGel = _this.core\r\n                    .getSlideItem(_this.core.index)\r\n                    .find('.lg-img-wrap')\r\n                    .first();\r\n                _this.top = 0;\r\n                _this.left = 0;\r\n                _this.setZoomEssentials();\r\n                _this.setZoomSwipeStyles(_LGel, { x: 0, y: 0 });\r\n                _this.positionChanged = true;\r\n            });\r\n            // Update zoom on resize and orientationchange\r\n            this.$LG(window).on(\"scroll.lg.zoom.global\" + this.core.lgId, function () {\r\n                if (!_this.core.lgOpened)\r\n                    return;\r\n                _this.scrollTop = _this.$LG(window).scrollTop();\r\n            });\r\n            this.core.getElementById('lg-zoom-out').on('click.lg', function () {\r\n                // Allow zoom only on image\r\n                if (!_this.isImageSlide(_this.core.index)) {\r\n                    return;\r\n                }\r\n                var timeout = 0;\r\n                if (_this.imageReset) {\r\n                    _this.resetImageTranslate(_this.core.index);\r\n                    timeout = 50;\r\n                }\r\n                setTimeout(function () {\r\n                    var scale = _this.scale - _this.settings.scale;\r\n                    if (scale < 1) {\r\n                        scale = 1;\r\n                    }\r\n                    _this.beginZoom(scale);\r\n                    _this.zoomImage(scale, -_this.settings.scale, true, !_this.settings.infiniteZoom);\r\n                }, timeout);\r\n            });\r\n            this.core.getElementById('lg-zoom-in').on('click.lg', function () {\r\n                _this.zoomIn();\r\n            });\r\n            this.core.getElementById('lg-actual-size').on('click.lg', function () {\r\n                _this.setActualSize(_this.core.index);\r\n            });\r\n            this.core.LGel.on(lGEvents.beforeOpen + \".zoom\", function () {\r\n                _this.core.outer.find('.lg-item').removeClass('lg-zoomable');\r\n            });\r\n            this.core.LGel.on(lGEvents.afterOpen + \".zoom\", function () {\r\n                _this.scrollTop = _this.$LG(window).scrollTop();\r\n                // Set the initial value center\r\n                _this.pageX = _this.core.outer.width() / 2;\r\n                _this.pageY = _this.core.outer.height() / 2 + _this.scrollTop;\r\n                _this.scale = 1;\r\n            });\r\n            // Reset zoom on slide change\r\n            this.core.LGel.on(lGEvents.afterSlide + \".zoom\", function (event) {\r\n                var prevIndex = event.detail.prevIndex;\r\n                _this.scale = 1;\r\n                _this.positionChanged = false;\r\n                _this.zoomInProgress = false;\r\n                _this.resetZoom(prevIndex);\r\n                _this.resetImageTranslate(prevIndex);\r\n                if (_this.isImageSlide(_this.core.index)) {\r\n                    _this.setZoomEssentials();\r\n                }\r\n            });\r\n            // Drag option after zoom\r\n            this.zoomDrag();\r\n            this.pinchZoom();\r\n            this.zoomSwipe();\r\n            // Store the zoomable timeout value just to clear it while closing\r\n            this.zoomableTimeout = false;\r\n            this.positionChanged = false;\r\n            this.zoomInProgress = false;\r\n        };\r\n        Zoom.prototype.zoomIn = function () {\r\n            // Allow zoom only on image\r\n            if (!this.isImageSlide(this.core.index)) {\r\n                return;\r\n            }\r\n            var scale = this.scale + this.settings.scale;\r\n            if (!this.settings.infiniteZoom) {\r\n                scale = this.getScale(scale);\r\n            }\r\n            this.beginZoom(scale);\r\n            this.zoomImage(scale, Math.min(this.settings.scale, scale - this.scale), true, !this.settings.infiniteZoom);\r\n        };\r\n        // Reset zoom effect\r\n        Zoom.prototype.resetZoom = function (index) {\r\n            this.core.outer.removeClass('lg-zoomed lg-zoom-drag-transition');\r\n            var $actualSize = this.core.getElementById('lg-actual-size');\r\n            var $item = this.core.getSlideItem(index !== undefined ? index : this.core.index);\r\n            $actualSize\r\n                .removeClass(this.settings.actualSizeIcons.zoomOut)\r\n                .addClass(this.settings.actualSizeIcons.zoomIn);\r\n            $item.find('.lg-img-wrap').first().removeAttr('style');\r\n            $item.find('.lg-image').first().removeAttr('style');\r\n            this.scale = 1;\r\n            this.left = 0;\r\n            this.top = 0;\r\n            // Reset pagx pagy values to center\r\n            this.setPageCords();\r\n        };\r\n        Zoom.prototype.getTouchDistance = function (e) {\r\n            return Math.sqrt((e.touches[0].pageX - e.touches[1].pageX) *\r\n                (e.touches[0].pageX - e.touches[1].pageX) +\r\n                (e.touches[0].pageY - e.touches[1].pageY) *\r\n                    (e.touches[0].pageY - e.touches[1].pageY));\r\n        };\r\n        Zoom.prototype.pinchZoom = function () {\r\n            var _this = this;\r\n            var startDist = 0;\r\n            var pinchStarted = false;\r\n            var initScale = 1;\r\n            var prevScale = 0;\r\n            var $item = this.core.getSlideItem(this.core.index);\r\n            this.core.outer.on('touchstart.lg', function (e) {\r\n                $item = _this.core.getSlideItem(_this.core.index);\r\n                if (!_this.isImageSlide(_this.core.index)) {\r\n                    return;\r\n                }\r\n                if (e.touches.length === 2) {\r\n                    e.preventDefault();\r\n                    if (_this.core.outer.hasClass('lg-first-slide-loading')) {\r\n                        return;\r\n                    }\r\n                    initScale = _this.scale || 1;\r\n                    _this.core.outer.removeClass('lg-zoom-drag-transition lg-zoom-dragging');\r\n                    _this.setPageCords(e);\r\n                    _this.resetImageTranslate(_this.core.index);\r\n                    _this.core.touchAction = 'pinch';\r\n                    startDist = _this.getTouchDistance(e);\r\n                }\r\n            });\r\n            this.core.$inner.on('touchmove.lg', function (e) {\r\n                if (e.touches.length === 2 &&\r\n                    _this.core.touchAction === 'pinch' &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    e.preventDefault();\r\n                    var endDist = _this.getTouchDistance(e);\r\n                    var distance = startDist - endDist;\r\n                    if (!pinchStarted && Math.abs(distance) > 5) {\r\n                        pinchStarted = true;\r\n                    }\r\n                    if (pinchStarted) {\r\n                        prevScale = _this.scale;\r\n                        var _scale = Math.max(1, initScale + -distance * 0.02);\r\n                        _this.scale =\r\n                            Math.round((_scale + Number.EPSILON) * 100) / 100;\r\n                        var diff = _this.scale - prevScale;\r\n                        _this.zoomImage(_this.scale, Math.round((diff + Number.EPSILON) * 100) / 100, false, false);\r\n                    }\r\n                }\r\n            });\r\n            this.core.$inner.on('touchend.lg', function (e) {\r\n                if (_this.core.touchAction === 'pinch' &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    pinchStarted = false;\r\n                    startDist = 0;\r\n                    if (_this.scale <= 1) {\r\n                        _this.resetZoom();\r\n                    }\r\n                    else {\r\n                        var actualSizeScale = _this.getCurrentImageActualSizeScale();\r\n                        if (_this.scale >= actualSizeScale) {\r\n                            var scaleDiff = actualSizeScale - _this.scale;\r\n                            if (scaleDiff === 0) {\r\n                                scaleDiff = 0.01;\r\n                            }\r\n                            _this.zoomImage(actualSizeScale, scaleDiff, false, true);\r\n                        }\r\n                        _this.manageActualPixelClassNames();\r\n                        _this.core.outer.addClass('lg-zoomed');\r\n                    }\r\n                    _this.core.touchAction = undefined;\r\n                }\r\n            });\r\n        };\r\n        Zoom.prototype.touchendZoom = function (startCoords, endCoords, allowX, allowY, touchDuration) {\r\n            var distanceXnew = endCoords.x - startCoords.x;\r\n            var distanceYnew = endCoords.y - startCoords.y;\r\n            var speedX = Math.abs(distanceXnew) / touchDuration + 1;\r\n            var speedY = Math.abs(distanceYnew) / touchDuration + 1;\r\n            if (speedX > 2) {\r\n                speedX += 1;\r\n            }\r\n            if (speedY > 2) {\r\n                speedY += 1;\r\n            }\r\n            distanceXnew = distanceXnew * speedX;\r\n            distanceYnew = distanceYnew * speedY;\r\n            var _LGel = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-img-wrap')\r\n                .first();\r\n            var distance = {};\r\n            distance.x = this.left + distanceXnew;\r\n            distance.y = this.top + distanceYnew;\r\n            var possibleSwipeCords = this.getPossibleSwipeDragCords();\r\n            if (Math.abs(distanceXnew) > 15 || Math.abs(distanceYnew) > 15) {\r\n                if (allowY) {\r\n                    if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                        distance.y = possibleSwipeCords.minY;\r\n                    }\r\n                    else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                        distance.y = possibleSwipeCords.maxY;\r\n                    }\r\n                }\r\n                if (allowX) {\r\n                    if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                        distance.x = possibleSwipeCords.minX;\r\n                    }\r\n                    else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                        distance.x = possibleSwipeCords.maxX;\r\n                    }\r\n                }\r\n                if (allowY) {\r\n                    this.top = distance.y;\r\n                }\r\n                else {\r\n                    distance.y = this.top;\r\n                }\r\n                if (allowX) {\r\n                    this.left = distance.x;\r\n                }\r\n                else {\r\n                    distance.x = this.left;\r\n                }\r\n                this.setZoomSwipeStyles(_LGel, distance);\r\n                this.positionChanged = true;\r\n            }\r\n        };\r\n        Zoom.prototype.getZoomSwipeCords = function (startCoords, endCoords, allowX, allowY, possibleSwipeCords) {\r\n            var distance = {};\r\n            if (allowY) {\r\n                distance.y = this.top + (endCoords.y - startCoords.y);\r\n                if (this.isBeyondPossibleTop(distance.y, possibleSwipeCords.minY)) {\r\n                    var diffMinY = possibleSwipeCords.minY - distance.y;\r\n                    distance.y = possibleSwipeCords.minY - diffMinY / 6;\r\n                }\r\n                else if (this.isBeyondPossibleBottom(distance.y, possibleSwipeCords.maxY)) {\r\n                    var diffMaxY = distance.y - possibleSwipeCords.maxY;\r\n                    distance.y = possibleSwipeCords.maxY + diffMaxY / 6;\r\n                }\r\n            }\r\n            else {\r\n                distance.y = this.top;\r\n            }\r\n            if (allowX) {\r\n                distance.x = this.left + (endCoords.x - startCoords.x);\r\n                if (this.isBeyondPossibleLeft(distance.x, possibleSwipeCords.minX)) {\r\n                    var diffMinX = possibleSwipeCords.minX - distance.x;\r\n                    distance.x = possibleSwipeCords.minX - diffMinX / 6;\r\n                }\r\n                else if (this.isBeyondPossibleRight(distance.x, possibleSwipeCords.maxX)) {\r\n                    var difMaxX = distance.x - possibleSwipeCords.maxX;\r\n                    distance.x = possibleSwipeCords.maxX + difMaxX / 6;\r\n                }\r\n            }\r\n            else {\r\n                distance.x = this.left;\r\n            }\r\n            return distance;\r\n        };\r\n        Zoom.prototype.isBeyondPossibleLeft = function (x, minX) {\r\n            return x >= minX;\r\n        };\r\n        Zoom.prototype.isBeyondPossibleRight = function (x, maxX) {\r\n            return x <= maxX;\r\n        };\r\n        Zoom.prototype.isBeyondPossibleTop = function (y, minY) {\r\n            return y >= minY;\r\n        };\r\n        Zoom.prototype.isBeyondPossibleBottom = function (y, maxY) {\r\n            return y <= maxY;\r\n        };\r\n        Zoom.prototype.isImageSlide = function (index) {\r\n            var currentItem = this.core.galleryItems[index];\r\n            return this.core.getSlideType(currentItem) === 'image';\r\n        };\r\n        Zoom.prototype.getPossibleSwipeDragCords = function (scale) {\r\n            var $image = this.core\r\n                .getSlideItem(this.core.index)\r\n                .find('.lg-image')\r\n                .first();\r\n            var bottom = this.core.mediaContainerPosition.bottom;\r\n            var imgRect = $image.get().getBoundingClientRect();\r\n            var imageHeight = imgRect.height;\r\n            var imageWidth = imgRect.width;\r\n            if (scale) {\r\n                imageHeight = imageHeight + scale * imageHeight;\r\n                imageWidth = imageWidth + scale * imageWidth;\r\n            }\r\n            var minY = (imageHeight - this.containerRect.height) / 2;\r\n            var maxY = (this.containerRect.height - imageHeight) / 2 + bottom;\r\n            var minX = (imageWidth - this.containerRect.width) / 2;\r\n            var maxX = (this.containerRect.width - imageWidth) / 2;\r\n            var possibleSwipeCords = {\r\n                minY: minY,\r\n                maxY: maxY,\r\n                minX: minX,\r\n                maxX: maxX,\r\n            };\r\n            return possibleSwipeCords;\r\n        };\r\n        Zoom.prototype.setZoomSwipeStyles = function (LGel, distance) {\r\n            LGel.css('transform', 'translate3d(' + distance.x + 'px, ' + distance.y + 'px, 0)');\r\n        };\r\n        Zoom.prototype.zoomSwipe = function () {\r\n            var _this = this;\r\n            var startCoords = {};\r\n            var endCoords = {};\r\n            var isMoved = false;\r\n            // Allow x direction drag\r\n            var allowX = false;\r\n            // Allow Y direction drag\r\n            var allowY = false;\r\n            var startTime = new Date();\r\n            var endTime = new Date();\r\n            var possibleSwipeCords;\r\n            var _LGel;\r\n            var $item = this.core.getSlideItem(this.core.index);\r\n            this.core.$inner.on('touchstart.lg', function (e) {\r\n                // Allow zoom only on image\r\n                if (!_this.isImageSlide(_this.core.index)) {\r\n                    return;\r\n                }\r\n                $item = _this.core.getSlideItem(_this.core.index);\r\n                if ((_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target)) &&\r\n                    e.touches.length === 1 &&\r\n                    _this.core.outer.hasClass('lg-zoomed')) {\r\n                    e.preventDefault();\r\n                    startTime = new Date();\r\n                    _this.core.touchAction = 'zoomSwipe';\r\n                    _LGel = _this.core\r\n                        .getSlideItem(_this.core.index)\r\n                        .find('.lg-img-wrap')\r\n                        .first();\r\n                    var dragAllowedAxises = _this.getDragAllowedAxises(0);\r\n                    allowY = dragAllowedAxises.allowY;\r\n                    allowX = dragAllowedAxises.allowX;\r\n                    if (allowX || allowY) {\r\n                        startCoords = _this.getSwipeCords(e);\r\n                    }\r\n                    possibleSwipeCords = _this.getPossibleSwipeDragCords();\r\n                    // reset opacity and transition duration\r\n                    _this.core.outer.addClass('lg-zoom-dragging lg-zoom-drag-transition');\r\n                }\r\n            });\r\n            this.core.$inner.on('touchmove.lg', function (e) {\r\n                if (e.touches.length === 1 &&\r\n                    _this.core.touchAction === 'zoomSwipe' &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    e.preventDefault();\r\n                    _this.core.touchAction = 'zoomSwipe';\r\n                    endCoords = _this.getSwipeCords(e);\r\n                    var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                    if (Math.abs(endCoords.x - startCoords.x) > 15 ||\r\n                        Math.abs(endCoords.y - startCoords.y) > 15) {\r\n                        isMoved = true;\r\n                        _this.setZoomSwipeStyles(_LGel, distance);\r\n                    }\r\n                }\r\n            });\r\n            this.core.$inner.on('touchend.lg', function (e) {\r\n                if (_this.core.touchAction === 'zoomSwipe' &&\r\n                    (_this.$LG(e.target).hasClass('lg-item') ||\r\n                        $item.get().contains(e.target))) {\r\n                    e.preventDefault();\r\n                    _this.core.touchAction = undefined;\r\n                    _this.core.outer.removeClass('lg-zoom-dragging');\r\n                    if (!isMoved) {\r\n                        return;\r\n                    }\r\n                    isMoved = false;\r\n                    endTime = new Date();\r\n                    var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                    _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\r\n                }\r\n            });\r\n        };\r\n        Zoom.prototype.zoomDrag = function () {\r\n            var _this = this;\r\n            var startCoords = {};\r\n            var endCoords = {};\r\n            var isDragging = false;\r\n            var isMoved = false;\r\n            // Allow x direction drag\r\n            var allowX = false;\r\n            // Allow Y direction drag\r\n            var allowY = false;\r\n            var startTime;\r\n            var endTime;\r\n            var possibleSwipeCords;\r\n            var _LGel;\r\n            this.core.outer.on('mousedown.lg.zoom', function (e) {\r\n                // Allow zoom only on image\r\n                if (!_this.isImageSlide(_this.core.index)) {\r\n                    return;\r\n                }\r\n                var $item = _this.core.getSlideItem(_this.core.index);\r\n                if (_this.$LG(e.target).hasClass('lg-item') ||\r\n                    $item.get().contains(e.target)) {\r\n                    startTime = new Date();\r\n                    _LGel = _this.core\r\n                        .getSlideItem(_this.core.index)\r\n                        .find('.lg-img-wrap')\r\n                        .first();\r\n                    var dragAllowedAxises = _this.getDragAllowedAxises(0);\r\n                    allowY = dragAllowedAxises.allowY;\r\n                    allowX = dragAllowedAxises.allowX;\r\n                    if (_this.core.outer.hasClass('lg-zoomed')) {\r\n                        if (_this.$LG(e.target).hasClass('lg-object') &&\r\n                            (allowX || allowY)) {\r\n                            e.preventDefault();\r\n                            startCoords = _this.getDragCords(e);\r\n                            possibleSwipeCords = _this.getPossibleSwipeDragCords();\r\n                            isDragging = true;\r\n                            _this.core.outer\r\n                                .removeClass('lg-grab')\r\n                                .addClass('lg-grabbing lg-zoom-drag-transition lg-zoom-dragging');\r\n                            // reset opacity and transition duration\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            this.$LG(window).on(\"mousemove.lg.zoom.global\" + this.core.lgId, function (e) {\r\n                if (isDragging) {\r\n                    isMoved = true;\r\n                    endCoords = _this.getDragCords(e);\r\n                    var distance = _this.getZoomSwipeCords(startCoords, endCoords, allowX, allowY, possibleSwipeCords);\r\n                    _this.setZoomSwipeStyles(_LGel, distance);\r\n                }\r\n            });\r\n            this.$LG(window).on(\"mouseup.lg.zoom.global\" + this.core.lgId, function (e) {\r\n                if (isDragging) {\r\n                    endTime = new Date();\r\n                    isDragging = false;\r\n                    _this.core.outer.removeClass('lg-zoom-dragging');\r\n                    // Fix for chrome mouse move on click\r\n                    if (isMoved &&\r\n                        (startCoords.x !== endCoords.x ||\r\n                            startCoords.y !== endCoords.y)) {\r\n                        endCoords = _this.getDragCords(e);\r\n                        var touchDuration = endTime.valueOf() - startTime.valueOf();\r\n                        _this.touchendZoom(startCoords, endCoords, allowX, allowY, touchDuration);\r\n                    }\r\n                    isMoved = false;\r\n                }\r\n                _this.core.outer.removeClass('lg-grabbing').addClass('lg-grab');\r\n            });\r\n        };\r\n        Zoom.prototype.closeGallery = function () {\r\n            this.resetZoom();\r\n            this.zoomInProgress = false;\r\n        };\r\n        Zoom.prototype.destroy = function () {\r\n            // Unbind all events added by lightGallery zoom plugin\r\n            this.$LG(window).off(\".lg.zoom.global\" + this.core.lgId);\r\n            this.core.LGel.off('.lg.zoom');\r\n            this.core.LGel.off('.zoom');\r\n            clearTimeout(this.zoomableTimeout);\r\n            this.zoomableTimeout = false;\r\n        };\r\n        return Zoom;\r\n    }());\n\n    return Zoom;\n\n})));\n//# sourceMappingURL=lg-zoom.umd.js.map\n\n(function () {\n\n    'use strict';\n\n    function Gallery(element, parameters)\n    {\n        var defaults = {\n            licenseKey: 'D5FCEF9B-61B34DD7-A42FD4F5-48DC6033',\n            plugins: [lgZoom, lgVideo],\n            counter: false\n        };\n\n        return lightGallery(element, $.extend(true, defaults, parameters));\n    }\n\n    /**\n     * Load attachment previews within message div if needed.\n     *\n     * @param $message\n     */\n    var loadPreviews = function ($message) {\n        const imagePromises = [];\n\n        // Load preview image if it exists\n        $($message).find('span[data-preview-url]').each(function (index) {\n            var $this = $(this);\n\n            const promise = $.Deferred();\n            imagePromises.push(promise);\n\n            // Set it in image so it tries to download it\n            $('<img>').attr(\"src\", $this.data('preview-url'))\n                .addClass('sp-inline sp-relative sp-transform sp--translate-y-1/2')\n                .css('top', '50%')\n                .prependTo($(this));\n\n            // Handle image load/error\n            $(this).find('img')\n                .on('load', function () {\n                    promise.resolve();\n                    $this.find('.fas').remove();\n                })\n                .on('error', function () {\n                    promise.resolve();\n\n                    // Replace preview link with download link\n                    $this.parents('a')\n                        .removeClass('sp-attachment-preview')\n                        .attr('href', $this.data('download-url'));\n\n                    $this.parents('li')\n                        .find('.sp-preview-hover')\n                        .html('<i class=\"fas fa-download\"></i>');\n\n                    // Show the default icon\n                    $this.replaceWith('<span class=\"fiv-viv fiv-icon-' + $this.data('icon')\n                        + ' sp-text-5xl sp-mt-4 group-hover:sp-opacity-0\"></span>');\n                });\n\n            $(this).removeAttr('data-preview-url');\n        });\n\n        $.when.apply($, imagePromises).done(function() {\n            $message.find('.sp-attachments').gallery({selector: '.sp-attachment-preview'});\n        })\n    };\n\n    $.fn.gallery = function (options) {\n        return $(this).each(function () {\n            if (typeof $(this).data('gallery') !== \"undefined\") {\n                return;\n            }\n\n            var gallery = Gallery($(this)[0], options);\n            $(this).data('gallery', gallery);\n        });\n    };\n\n    App.extend('attachments', {\n        loadPreviews: loadPreviews\n    });\n\n})();\n"]}